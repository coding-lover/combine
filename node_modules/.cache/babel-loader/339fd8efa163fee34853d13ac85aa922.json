{"remainingRequest":"/data/www/kit-test/node_modules/babel-loader/lib/index.js!/data/www/kit-test/src/utils/rpcRequest.js","dependencies":[{"path":"/data/www/kit-test/src/utils/rpcRequest.js","mtime":1618905572742},{"path":"/data/www/kit-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit-test/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport globalConfig from \"./config\";\nvar localStorageRegnumber = localStorage.getItem('_n') || 6666;\nvar localStorageToken = localStorage.getItem('_t') || '5b04a34125b1eab46343d5d398b45976';\nconsole.log(globalConfig.KIT_API_HOST);\nvar service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  baseURL: globalConfig.KIT_API_HOST,\n  timeout: 5000\n});\nservice.interceptors.request.use(function (config) {\n  //console.log(config);\n  config.headers.Regnumber = localStorageRegnumber;\n  config.headers.Token = localStorageToken;\n  console.log(config);\n  return config;\n}, function (error) {\n  console.log(error);\n  return Promise.reject();\n});\nservice.interceptors.response.use(function (response) {\n  if (response.data.code == 9) {//登录\n    //next('login');\n  }\n\n  if (response.status === 200) {\n    return response.data;\n  }\n\n  return Promise.reject(response.statusText);\n}, function (error) {\n  console.log(error);\n  return Promise.reject('Network error !');\n});\nexport default service;",{"version":3,"sources":["/data/www/kit-test/src/utils/rpcRequest.js"],"names":["axios","globalConfig","localStorageRegnumber","localStorage","getItem","localStorageToken","console","log","KIT_API_HOST","service","create","baseURL","timeout","interceptors","request","use","config","headers","Regnumber","Token","error","Promise","reject","response","data","code","status","statusText"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP;AACA,IAAMC,qBAAqB,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8B,IAA5D;AACA,IAAMC,iBAAiB,GAAGF,YAAY,CAACC,OAAb,CAAqB,IAArB,KAA8B,kCAAxD;AAEAE,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACO,YAAzB;AAEA,IAAMC,OAAO,GAAGT,KAAK,CAACU,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAEV,YAAY,CAACO,YAFG;AAGzBI,EAAAA,OAAO,EAAE;AAHgB,CAAb,CAAhB;AAMAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACN;AAEAA,EAAAA,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2BhB,qBAA3B;AACAc,EAAAA,MAAM,CAACC,OAAP,CAAeE,KAAf,GAAuBd,iBAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AAEA,SAAOA,MAAP;AACH,CAVL,EAWI,UAAAI,KAAK,EAAI;AACLd,EAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,EAAP;AACH,CAdL;AAiBAb,OAAO,CAACI,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B,CACI,UAAAQ,QAAQ,EAAI;AACR,MAAGA,QAAQ,CAACC,IAAT,CAAcC,IAAd,IAAsB,CAAzB,EACA,CACI;AACA;AACH;;AAED,MAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AACzB,WAAOH,QAAQ,CAACC,IAAhB;AACH;;AAED,SAAOH,OAAO,CAACC,MAAR,CAAeC,QAAQ,CAACI,UAAxB,CAAP;AACH,CAbL,EAcI,UAAAP,KAAK,EAAI;AACLd,EAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,CAAe,iBAAf,CAAP;AACH,CAjBL;AAoBA,eAAeb,OAAf","sourcesContent":["import axios from 'axios';\nimport globalConfig from './config';\nconst localStorageRegnumber = localStorage.getItem('_n') || 6666;\nconst localStorageToken = localStorage.getItem('_t') || '5b04a34125b1eab46343d5d398b45976';\n\nconsole.log(globalConfig.KIT_API_HOST);\n\nconst service = axios.create({\n    // process.env.NODE_ENV === 'development' 来判断是否开发环境\n    baseURL: globalConfig.KIT_API_HOST,\n    timeout: 5000\n});\n\nservice.interceptors.request.use(\n    config => {\n        //console.log(config);\n\n        config.headers.Regnumber = localStorageRegnumber;\n        config.headers.Token = localStorageToken;\n\n        console.log(config);\n\n        return config;\n    },\n    error => {\n        console.log(error);\n        return Promise.reject();\n    }\n);\n\nservice.interceptors.response.use(\n    response => {\n        if(response.data.code == 9)\n        {\n            //登录\n            //next('login');\n        }\n\n        if (response.status === 200) {\n            return response.data;\n        }\n\n        return Promise.reject(response.statusText);\n    },\n    error => {\n        console.log(error);\n        return Promise.reject('Network error !');\n    }\n);\n\nexport default service;\n"]}]}