{"remainingRequest":"/data/www/kit/www/Public/kit-test/node_modules/thread-loader/dist/cjs.js!/data/www/kit/www/Public/kit-test/node_modules/babel-loader/lib/index.js!/data/www/kit/www/Public/kit-test/src/api/accounts.js","dependencies":[{"path":"/data/www/kit/www/Public/kit-test/src/api/accounts.js","mtime":1610367713497},{"path":"/data/www/kit/www/Public/kit-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/data/www/kit/www/Public/kit-test/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport request from \"../utils/rpcRequest\";\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\n\nexport function getWalletById(_x) {\n  return _getWalletById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getWalletById() {\n  _getWalletById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(query) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", request({\n              url: '/api/accounts/getWalletById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getWalletById.apply(this, arguments);\n}\n\nexport function getSpotBalanceById(_x2) {\n  return _getSpotBalanceById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid => 1, mode => all]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getSpotBalanceById() {\n  _getSpotBalanceById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(query) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", request({\n              url: '/api/accounts/getSpotBalanceById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getSpotBalanceById.apply(this, arguments);\n}\n\nexport function getMarginInfoById(_x3) {\n  return _getMarginInfoById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getMarginInfoById() {\n  _getMarginInfoById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(query) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", request({\n              url: '/api/accounts/getMarginInfoById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getMarginInfoById.apply(this, arguments);\n}\n\nexport function getMarginBalanceById(_x4) {\n  return _getMarginBalanceById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getMarginBalanceById() {\n  _getMarginBalanceById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(query) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", request({\n              url: '/api/accounts/getMarginBalanceById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getMarginBalanceById.apply(this, arguments);\n}\n\nexport function getFutureBalanceById(_x5) {\n  return _getFutureBalanceById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid, symbol, contract]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getFutureBalanceById() {\n  _getFutureBalanceById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(query) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", request({\n              url: '/api/accounts/getFutureBalanceById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getFutureBalanceById.apply(this, arguments);\n}\n\nexport function getFuturePositionById(_x6) {\n  return _getFuturePositionById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getFuturePositionById() {\n  _getFuturePositionById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(query) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", request({\n              url: '/api/accounts/getFuturePositionById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getFuturePositionById.apply(this, arguments);\n}\n\nexport function getFuturePositionAllById(_x7) {\n  return _getFuturePositionAllById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getFuturePositionAllById() {\n  _getFuturePositionAllById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(query) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", request({\n              url: '/api/accounts/getFuturePositionAllById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getFuturePositionAllById.apply(this, arguments);\n}\n\nexport function getSwapBalanceById(_x8) {\n  return _getSwapBalanceById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid, symbol]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getSwapBalanceById() {\n  _getSwapBalanceById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(query) {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", request({\n              url: '/api/accounts/getSwapBalanceById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getSwapBalanceById.apply(this, arguments);\n}\n\nexport function getSwapPositionById(_x9) {\n  return _getSwapPositionById.apply(this, arguments);\n}\n/**\n *\n * @param query [taid]\n * @returns {AxiosPromise<any>}\n */\n\nfunction _getSwapPositionById() {\n  _getSwapPositionById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(query) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            return _context9.abrupt(\"return\", request({\n              url: '/api/accounts/getSwapPositionById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getSwapPositionById.apply(this, arguments);\n}\n\nexport function getSwapPositionAllById(_x10) {\n  return _getSwapPositionAllById.apply(this, arguments);\n}\n\nfunction _getSwapPositionAllById() {\n  _getSwapPositionAllById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(query) {\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            return _context10.abrupt(\"return\", request({\n              url: '/api/accounts/getSwapPositionAllById',\n              method: 'get',\n              params: query\n            }));\n\n          case 1:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getSwapPositionAllById.apply(this, arguments);\n}",{"version":3,"sources":["/data/www/kit/www/Public/kit-test/src/api/accounts.js"],"names":["request","getWalletById","query","url","method","params","getSpotBalanceById","getMarginInfoById","getMarginBalanceById","getFutureBalanceById","getFuturePositionById","getFuturePositionAllById","getSwapBalanceById","getSwapPositionById","getSwapPositionAllById"],"mappings":"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","sourcesContent":["import request from '../utils/rpcRequest';\n\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\nexport async function getWalletById(query) {\n    return request({\n        url: '/api/accounts/getWalletById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\nexport async function getSpotBalanceById(query) {\n    return request({\n        url: '/api/accounts/getSpotBalanceById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid => 1, mode => all]\n * @returns {AxiosPromise<any>}\n */\nexport async function getMarginInfoById(query) {\n    return request({\n        url: '/api/accounts/getMarginInfoById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\nexport async function getMarginBalanceById(query) {\n    return request({\n        url: '/api/accounts/getMarginBalanceById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\nexport async function getFutureBalanceById(query) {\n    return request({\n        url: '/api/accounts/getFutureBalanceById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid, symbol, contract]\n * @returns {AxiosPromise<any>}\n */\nexport async function getFuturePositionById(query) {\n    return request({\n        url: '/api/accounts/getFuturePositionById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid]\n * @returns {AxiosPromise<any>}\n */\nexport async function getFuturePositionAllById(query) {\n    return request({\n        url: '/api/accounts/getFuturePositionAllById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid => 1]\n * @returns {AxiosPromise<any>}\n */\nexport async function getSwapBalanceById(query) {\n    return request({\n        url: '/api/accounts/getSwapBalanceById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid, symbol]\n * @returns {AxiosPromise<any>}\n */\nexport async function getSwapPositionById(query) {\n    return request({\n        url: '/api/accounts/getSwapPositionById',\n        method: 'get',\n        params: query\n    });\n}\n\n/**\n *\n * @param query [taid]\n * @returns {AxiosPromise<any>}\n */\nexport async function getSwapPositionAllById(query) {\n    return request({\n        url: '/api/accounts/getSwapPositionAllById',\n        method: 'get',\n        params: query\n    });\n}\n\n\n\n\n\n\n"]}]}