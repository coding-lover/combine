{"remainingRequest":"/data/www/combine/node_modules/thread-loader/dist/cjs.js!/data/www/combine/node_modules/babel-loader/lib/index.js!/data/www/combine/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/www/combine/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/www/combine/src/components/page/Combine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/www/combine/src/components/page/Combine.vue","mtime":1665580045865},{"path":"/data/www/combine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/combine/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/combine/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/www/combine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/combine/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.last-index-of\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.filter\";\nimport _toConsumableArray from \"/data/www/combine/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ElTableDraggable from 'element-ui-el-table-draggable';\n\nvar iconv = require('iconv-lite');\n\nvar jschardet = require(\"jschardet\");\n\nexport default {\n  data: function data() {\n    var _this = this;\n\n    return {\n      activeName: 'first',\n      fileList: [],\n      tmpFileNames: [],\n      nodeList: [],\n      nodeNum: 2,\n      replaceHis: [],\n      specialFileList: [],\n      specialKey: 99,\n      form: {\n        fileHeader: '',\n        fileFooter: '',\n        fileName: '',\n        fileSuffix: \".nc\",\n        fileSuffixOptions: [{\n          value: \".nc\",\n          name: \".nc\"\n        }, {\n          value: \".pim\",\n          name: \".pim\"\n        }],\n        ready: true,\n        delivery: true\n      },\n      dragOptions: {\n        animation: 120,\n        scroll: true,\n        group: 'sortlist',\n        ghostClass: 'ghost-style'\n      },\n      curId: 0,\n      combineFileList: [],\n      dragList: [],\n      dragConfig: {\n        optionVal: 0,\n        options: [{\n          value: 0,\n          label: \"文件头删除行数\"\n        }, {\n          value: 1,\n          label: \"文件尾删除行数\"\n        }],\n        setVal: 1\n      },\n      formRules: {\n        fileHeader: [{\n          required: true,\n          message: '请输入文件头',\n          trigger: 'blur'\n        }],\n        fileFooter: [{\n          required: true,\n          message: '请输入文件尾',\n          trigger: 'change'\n        }],\n        fileName: [{\n          required: true,\n          message: '请输入完整文件名',\n          trigger: 'change',\n          validator: function validator(rule, value, callback) {\n            if (!_this.form.fileName) {\n              return callback(new Error('请输入完整文件名'));\n            }\n\n            if (_this.form.fileSuffix === '') {\n              return callback(new Error('请选择文件后缀'));\n            }\n\n            callback();\n          }\n        }],\n        fileSuffix: [{\n          required: true,\n          message: '请选择文件后缀',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  components: {\n    ElTableDraggable: ElTableDraggable\n  },\n  computed: {\n    replaceFlag: function replaceFlag() {\n      var _this2 = this;\n\n      return function (idx) {\n        if (!_this2.nodeList.hasOwnProperty(idx)) {\n          return false;\n        }\n\n        var node = _this2.nodeList[idx];\n\n        var replaceKey = _this2.createReplaceKey(node.search, node.replace);\n\n        return node.replaceHis.indexOf(replaceKey) != -1;\n      };\n    },\n    totalNum: function totalNum() {\n      var num = 0;\n      this.nodeList.map(function (node) {\n        num += node.fileList.length;\n      });\n      return num;\n    },\n    specialNum: function specialNum() {\n      return this.specialFileList.length;\n    },\n    getFileList: {\n      get: function get() {\n        var fileList = [];\n\n        if (this.form.delivery) {\n          this.nodeList.map(function (node, nodeIdx) {\n            node.fileList.map(function (file, fileIdx) {\n              file.nodeIdx = nodeIdx;\n              file.fileIdx = fileIdx;\n              fileList.push(file);\n            });\n          });\n        } else {\n          //debugger\n          fileList.push.apply(fileList, _toConsumableArray(this.specialFileList));\n        }\n\n        return fileList;\n      },\n      set: function set(value) {\n        console.warn(value);\n      }\n    },\n    getFileBadge: function getFileBadge() {\n      var _this3 = this;\n\n      return function (rawName) {\n        return rawName + (_this3.totalNum > 0 ? '<el-badge value=\"' + _this3.totalNum + '\" class=\"large-btn\"  />' : '');\n      };\n    }\n  },\n  watch: {//nodeList: {\n    // immediate: true,\n    // //deep: true,\n    // handler(nodeList) {\n    //\n    // }\n    //},\n  },\n  mounted: function mounted() {\n    this.initNodeList();\n    console.log(iconv.encodingExists('windows-1252'));\n  },\n  methods: {\n    combineFile: function combineFile() {\n      var _this4 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (!valid) {\n          return false;\n        }\n\n        var rawList = [];\n        var rawIds = [];\n\n        _this4.nodeList.map(function (node) {\n          node.fileList.map(function (file) {\n            rawIds.push(file.id);\n            rawList.push(file);\n          });\n        });\n\n        rawList.push.apply(rawList, _toConsumableArray(_this4.specialFileList));\n\n        if (_this4.dragList.length != rawList.length) {\n          _this4.dragList = rawList;\n        }\n\n        if (_this4.dragList.length == 0) {\n          _this4.$message.info('请上传要合并的文件');\n\n          return false;\n        }\n\n        var promiseList = [];\n\n        _this4.dragList.map(function (file) {\n          //debugger\n          if (_this4.form.delivery && rawIds.indexOf(file.id) == -1) {\n            return false;\n          }\n\n          if (!_this4.form.delivery && rawIds.indexOf(file.id) != -1) {\n            return false;\n          }\n\n          var p = _this4.readFile(file, function (res) {\n            res = res.split(\"\\n\").filter(function (res) {\n              return res;\n            });\n            res.splice(0, file.headerDeleteLine);\n            res.splice(res.length - file.footerDeleteLine, file.footerDeleteLine);\n            return res.join(\"\\n\");\n          });\n\n          promiseList.push(p);\n        });\n\n        if (promiseList.length == 0) {\n          _this4.$message.info('请上传文件');\n\n          return false;\n        }\n\n        _this4.form.ready = false;\n        Promise.all([].concat(promiseList)).then(function (res) {\n          console.log(res);\n          res.unshift(_this4.form.fileHeader);\n          res.push(_this4.form.fileFooter);\n          res = res.filter(function (res) {\n            return res;\n          });\n          res = res.join(\"\\n\");\n          console.log(res);\n          _this4.form.ready = true;\n\n          _this4.downloadFileByContent(res, _this4.form.fileName + _this4.form.fileSuffix);\n\n          _this4.$message.success(\"合并成功，文件：\" + _this4.form.fileName + _this4.form.fileSuffix);\n        });\n        console.log('content');\n      });\n    },\n    test: function test(flag) {\n      return new Promise(function (resolve, reject) {\n        var time = Math.ceil(Math.random() * 10000);\n        console.warn('执行 ' + flag);\n        setTimeout(function () {\n          resolve(time + '-' + flag);\n        }, time);\n      });\n    },\n    readFile: function readFile(file, callback) {\n      var _this5 = this;\n\n      return new Promise(function (resolve, reject) {\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (event) {\n          console.warn(event);\n          console.warn(_this5.detectCharset(event.target.result));\n          resolve(callback(_this5.fileContentDecode(event.target.result)));\n        };\n\n        fileReader.readAsBinaryString(file.raw);\n      });\n    },\n    fileConfigAdd: function fileConfigAdd() {\n      this.dispatchFileConfig(true);\n    },\n    fileConfigReduce: function fileConfigReduce() {\n      this.dispatchFileConfig(false);\n    },\n    dispatchFileConfig: function dispatchFileConfig() {\n      var _this6 = this;\n\n      var isAdd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.form.delivery) {\n        this.nodeList.map(function (node) {\n          node.fileList.map(function (file) {\n            _this6.doUpdateDeletedLine(file, isAdd);\n          });\n        });\n      } else {\n        this.specialFileList.map(function (file) {\n          _this6.doUpdateDeletedLine(file, isAdd);\n        });\n      }\n    },\n    doUpdateDeletedLine: function doUpdateDeletedLine(file) {\n      var isAdd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var key = this.dragConfig.optionVal == 0 ? 'headerDeleteLine' : 'footerDeleteLine';\n      file[key] = file[key] == undefined ? 0 : file[key];\n\n      if (isAdd) {\n        file[key] += this.dragConfig.setVal;\n      } else {\n        file[key] -= this.dragConfig.setVal;\n      }\n\n      file[key] = file[key] < 0 ? 0 : file[key];\n      this.updateDeletedLine(file.id, key, file[key]);\n    },\n    updateDeletedLine: function updateDeletedLine(id, mode, value) {\n      var key = this.createDeleteKey(id, mode);\n      this.$refs[key].setCurrentValue(value);\n    },\n    dragChange: function dragChange(log) {\n      this.dragList = log.list;\n      console.log(log);\n    },\n    formReset: function formReset() {\n      this.$refs.form.resetFields();\n\n      for (var key in this.form) {\n        if (key == 'fileSuffixOptions') {\n          continue;\n        }\n\n        if (this.form.hasOwnProperty(key)) {\n          this.form[key] = key == 'ready' || key == \"delivery\" ? true : '';\n        }\n      }\n    },\n    removeHandle: function removeHandle(event) {\n      console.log(event);\n      this.$message.success(\"\\u4ECE \".concat(event.from.id, \" \\u79FB\\u52A8\\u5230 \").concat(event.to.id, \" \"));\n    },\n    addNode: function addNode() {\n      this.nodeList.push(this.initNode());\n    },\n    batchReplace: function batchReplace() {\n      var _this7 = this;\n\n      this.nodeList.map(function (node, idx) {\n        _this7.doReplace(idx);\n      });\n    },\n    batchDownload: function batchDownload() {\n      var _this8 = this;\n\n      this.nodeList.map(function (node, idx) {\n        _this8.downloadFile(idx);\n      });\n    },\n    getReplaceHis: function getReplaceHis(idx) {\n      if (this.nodeList[idx].replaceHis.length == 0) {\n        this.$message.info('没有替换历史');\n        return false;\n      }\n\n      var hisHtml = '';\n      this.nodeList[idx].replaceHis.map(function (his, key) {\n        hisHtml += \"<p>#\".concat(key, \" \").concat(his, \"<p>\");\n      });\n      this.$alert(hisHtml, '替换历史', {\n        dangerouslyUseHTMLString: true\n      });\n    },\n    doReplace: function doReplace(idx) {\n      var _this9 = this;\n\n      if (this.nodeList[idx].fileList.length == 0) {\n        this.$message.info(\"请先上传文件！\");\n        return false;\n      }\n\n      var node = this.nodeList[idx];\n      var replaceKey = this.createReplaceKey(node.search, node.replace);\n      node.replaceHis.push(replaceKey);\n      var promiseList = [];\n      node.fileList.map(function (file) {\n        var p = _this9.readFile(file, function (res) {\n          res = res.replaceAll(node.search, node.replace);\n          file.raw = new File([res], file.name, {\n            name: file.name,\n            size: res.length,\n            type: file.type,\n            lastModified: file.lastModified\n          });\n\n          _this9.$message({\n            message: file.name + ' 替换成功',\n            type: 'success'\n          });\n\n          return res;\n        });\n\n        promiseList.push(p);\n      });\n      Promise.all([].concat(promiseList)).then(function (res) {\n        console.log('replace res: ', res);\n      });\n    },\n    fileContentDecode: function fileContentDecode(binaryStr) {\n      return iconv.decode(binaryStr, this.detectCharset(binaryStr));\n    },\n    detectCharset: function detectCharset(binaryStr) {\n      var collect = jschardet.detectAll(binaryStr);\n      var result = '';\n      var confidence = 0;\n      console.error(collect);\n\n      for (var idx in collect) {\n        if (collect[idx].confidence > confidence) {\n          result = collect[idx].encoding;\n          confidence = collect[idx].confidence;\n        }\n      }\n\n      if (['TIS-620', 'windows-1252'].indexOf(result) != -1) {\n        result = 'gbk';\n      }\n\n      return result;\n    },\n    downloadFileByContent: function downloadFileByContent(content, fileName) {\n      var file = new File([content], fileName, {\n        type: 'text/plain'\n      });\n      console.warn(file);\n      this.downloadBlob(URL.createObjectURL(file), fileName);\n    },\n    downloadFile: function downloadFile(idx) {\n      var _this10 = this;\n\n      if (!this.nodeList.hasOwnProperty(idx)) {\n        this.$message.info(\"请上传文件！\");\n        return false;\n      }\n\n      this.nodeList[idx].fileList.map(function (file) {\n        var url = URL.createObjectURL(file.raw);\n        var name = file.name.substring(0, file.name.lastIndexOf(\".\"));\n        var suffix = file.name.substring(file.name.lastIndexOf(\".\"));\n\n        if (_this10.nodeList[idx].replaceHis.length > 0) {\n          name += \"(\" + _this10.nodeList[idx].replaceHis.join(\",\") + \")\";\n        }\n\n        console.warn(file.name);\n\n        _this10.downloadBlob(url, name + suffix);\n      });\n    },\n    initNodeList: function initNodeList() {\n      for (var i = 0; i < this.nodeNum; i++) {\n        this.nodeList.push(this.initNode());\n      }\n    },\n    initNode: function initNode() {\n      return {\n        search: '',\n        replace: '',\n        fileNum: 0,\n        fileList: [//{name: \"test.json\", uid: 55555, id:1}\n        ],\n        isReplace: false,\n        replaceHis: []\n      };\n    },\n    handleClick: function handleClick(tab, event) {\n      console.log(tab, event);\n    },\n    handleRemove: function handleRemove(idx) {\n      var _this11 = this;\n\n      return function (file, fileList) {\n        console.log(file, fileList);\n\n        for (var key in fileList) {\n          if (file.name == fileList[key].name) {\n            return false;\n          }\n        }\n\n        if (idx == _this11.specialKey) {\n          _this11.specialFileList = fileList;\n        } else {\n          _this11.nodeList[idx].fileNum--;\n          _this11.nodeList[idx].fileList = fileList;\n\n          if (fileList.length == 0) {\n            _this11.nodeList[idx].replaceHis = [];\n          }\n        }\n\n        var nameIdx = _this11.tmpFileNames[idx].indexOf(file.name);\n\n        delete _this11.tmpFileNames[idx][nameIdx];\n      };\n    },\n    handlePreview: function handlePreview(file) {\n      console.log(file);\n    },\n    handleProgress: function handleProgress(event, file, fileList) {\n      console.log(event, file);\n    },\n    myHandleChange: function myHandleChange(idx) {\n      var _this12 = this;\n\n      return function (file, fileList) {\n        if (!_this12.tmpFileNames.hasOwnProperty(idx)) {\n          _this12.tmpFileNames[idx] = [];\n        }\n\n        if (_this12.tmpFileNames[idx].indexOf(file.name) != -1) {\n          _this12.$message.warning(\"出现重复文件： \" + file.name + \", 取消当前上传！\");\n\n          console.log(_this12.createUploadKey(idx));\n          console.log(_this12.$refs[_this12.createUploadKey(idx)]);\n\n          if (idx == _this12.specialKey) {\n            _this12.$refs[_this12.createUploadKey(idx)].handleRemove(file, file.raw);\n          } else {\n            _this12.$refs[_this12.createUploadKey(idx)][0].handleRemove(file, file.raw);\n          }\n\n          return false;\n        }\n\n        file.id = _this12.createId();\n        file.headerDeleteLine = 1;\n        file.footerDeleteLine = 1; //file.\n\n        if (idx == _this12.specialKey) {\n          //debugger\n          _this12.specialFileList = fileList;\n          console.log(_this12.specialFileList);\n        } else {\n          _this12.nodeList[idx].fileNum++;\n          _this12.nodeList[idx].fileList = fileList;\n        }\n\n        _this12.tmpFileNames[idx].push(file.name);\n      };\n    },\n    downloadBlob: function downloadBlob(blobUrl, fileName, revokeObjectURL) {\n      var downloadElement = document.createElement('a');\n      downloadElement.href = blobUrl; //下载后文件名\n\n      downloadElement.download = fileName;\n      console.log(fileName);\n      document.body.appendChild(downloadElement); //点击下载\n\n      downloadElement.click(); //下载完成移除元素\n\n      document.body.removeChild(downloadElement);\n\n      if (revokeObjectURL == null || revokeObjectURL) {\n        //释放掉blob对象\n        window.URL.revokeObjectURL(blobUrl);\n      }\n    },\n    createUploadKey: function createUploadKey(idx) {\n      return 'upload' + idx;\n    },\n    createReplaceKey: function createReplaceKey(search, replace) {\n      return search + ' = ' + replace;\n    },\n    createId: function createId() {\n      return this.curId++;\n    },\n    createDeleteKey: function createDeleteKey(id, mode) {\n      return id + '-' + mode;\n    }\n  }\n};",{"version":3,"sources":["Combine.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <el-row :gutter=\"10\">\r\n        <el-col :span=\"18\" :offset=\"3\" class=\"wrap\">\r\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n\r\n                <el-tab-pane  name=\"first\" class=\"wrap-padding\">\r\n                    <span slot=\"label\">文件替换<el-badge :value=\"totalNum\" class=\"large-btn\" :hidden=\"totalNum > 0 ? false : true\" ></el-badge></span>\r\n\r\n                    <el-col :span=\"12\" class=\"margin-bottom-10\" v-for=\"(item, idx) in nodeList\">\r\n                        <el-card class=\"box-card\">\r\n                            <div slot=\"header\" class=\"clearfix\">\r\n                                <el-col :span=\"6\">\r\n                                    <el-input v-model=\"item.search\" prefix-icon=\"el-icon-search\" placeholder=\"要替换字符\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"6\">\r\n                                    <el-input v-model=\"item.replace\" prefix-icon=\"el-icon-edit\" placeholder=\"替换后字符\"></el-input>\r\n                                </el-col>\r\n                                <el-badge :value=\"item.fileNum\" class=\"\" :hidden=\"item.fileNum > 0 ? false : true\">\r\n                                    <el-button v-show=\"!replaceFlag(idx)\" size=\"small\" class=\"ml-3\" type=\"primary\"\r\n                                               @click=\"doReplace(idx)\">替换\r\n                                    </el-button>\r\n                                    <el-button v-show=\"replaceFlag(idx)\" class=\"ml-3\" size=\"small\" type=\"success\">已替换</el-button>\r\n                                    <el-button size=\"small\" type=\"success\" class=\"ml-3\" @click=\"getReplaceHis(idx)\">替换历史</el-button>\r\n                                </el-badge>\r\n                                <el-button size=\"small\" type=\"primary\" class=\"margin-left-3\" @click=\"downloadFile(idx)\">下载</el-button>\r\n\r\n                            </div>\r\n                            <div class=\"content-overflow\">\r\n                                <el-upload\r\n                                        class=\"upload-demo\"\r\n                                        drag\r\n                                        :ref=\"createUploadKey(idx)\"\r\n                                        action=\"\"\r\n                                        :on-preview=\"handlePreview\"\r\n                                        :on-remove=\"handleRemove(idx)\"\r\n                                        :on-progress=\"handleProgress\"\r\n                                        :on-change=\"myHandleChange(idx)\"\r\n                                        :file-list=\"fileList\"\r\n                                        :auto-upload=\"false\"\r\n                                        multiple>\r\n                                    <i class=\"el-icon-upload\" v-show=\"item.fileNum == 0\"></i>\r\n                                    <div class=\"el-upload__text\" v-show=\"item.fileNum == 0\">将文件拖到此处，或<em>点击上传</em></div>\r\n                                </el-upload>\r\n                            </div>\r\n\r\n                        </el-card>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"12\" class=\"margin-bottom-10\">\r\n                        <div class=\"my-avatar-uploader content-overflow\" @click=\"addNode\">\r\n                            <i class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                        </div>\r\n\r\n                        <el-row class=\"mt-10\">\r\n                            <el-badge :value=\"totalNum\" class=\"large-btn\" :hidden=\"totalNum > 0 ? false : true\" >\r\n                                <el-button type=\"danger\" size=\"medium\" class=\"large-btn\" @click=\"batchReplace\">批量替换</el-button>\r\n                            </el-badge>\r\n                        </el-row>\r\n\r\n                        <el-row class=\"mt-10\">\r\n                            <el-button type=\"primary\" size=\"medium\" class=\"large-btn\" @click=\"batchDownload\">批量下载</el-button>\r\n                        </el-row>\r\n\r\n                    </el-col>\r\n\r\n\r\n                </el-tab-pane>\r\n\r\n\r\n                <el-tab-pane label=\"文件合并\" name=\"second\">\r\n                    <el-col :span=\"10\">\r\n                        <el-form ref=\"form\" :rules=\"formRules\" :model=\"form\" label-width=\"90px\">\r\n                            <el-form-item label=\"使用替换\">\r\n                                <el-switch v-model=\"form.delivery\">\r\n                                </el-switch>\r\n                                <span style=\"color: #F56C6C;margin-left: 5px;display: inline-block;\">使用已经替换的文件或者重新上传文件</span>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"上传\" v-show=\"!form.delivery\">\r\n                                <span slot=\"label\">上传<el-badge :value=\"specialNum\" :hidden=\"specialNum > 0 ? false : true\" ></el-badge></span>\r\n                                <el-upload\r\n                                        class=\"\"\r\n                                        drag\r\n                                        action=\"\"\r\n                                        :ref=\"createUploadKey(specialKey)\"\r\n                                        :on-change=\"myHandleChange(specialKey)\"\r\n                                        :on-remove=\"handleRemove(specialKey)\"\r\n                                        :auto-upload=\"false\"\r\n                                        multiple>\r\n                                    <i class=\"el-icon-upload\"></i>\r\n                                    <div class=\"el-upload__text\">\r\n\r\n                                        <p>将文件拖到此处，或<em>点击上传</em></p>\r\n                                    </div>\r\n                                </el-upload>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件头\" prop=\"fileHeader\">\r\n                                <el-input type=\"textarea\" v-model=\"form.fileHeader\"></el-input>\r\n                            </el-form-item>\r\n\r\n\r\n                            <el-form-item label=\"文件尾\" prop=\"fileFooter\">\r\n                                <el-input type=\"textarea\" v-model=\"form.fileFooter\"></el-input>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件名\" prop=\"fileName\">\r\n                                <el-input placeholder=\"请输入内容\" v-model=\"form.fileName\" class=\"input-with-select\">\r\n                                    <el-select v-model=\"form.fileSuffix\" slot=\"append\" placeholder=\"请选择\" prop=\"fileSuffix\">\r\n                                        <el-option\r\n                                                v-for=\"item in form.fileSuffixOptions\"\r\n                                                :key=\"item.value\"\r\n                                                :label=\"item.name\"\r\n                                                :value=\"item.value\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </el-input>\r\n\r\n                            </el-form-item>\r\n\r\n                            <el-form-item>\r\n                                <el-button v-show=\"form.ready\" type=\"primary\" @click=\"combineFile\">立即合并</el-button>\r\n                                <el-button v-show=\"!form.ready\" type=\"primary\" :loading=\"true\">合并中</el-button>\r\n                                <el-button @click=\"formReset()\">取消</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </el-col>\r\n                    <el-col :span=\"14\">\r\n\r\n                        <div class=\"drag-box\">\r\n                            <div class=\"drag-box-item\">\r\n                                <el-empty v-show=\"getFileList.length == 0\" description=\"未上传文件\"></el-empty>\r\n                                <el-table-draggable handle=\".allowDrag\" @drop=\"dragChange\">\r\n                                    <el-table\r\n                                            ref=\"dragTable\"\r\n                                            :data=\"getFileList\"\r\n                                            style=\"width: 100%\" v-show=\"getFileList.length > 0\">\r\n                                        <el-table-column\r\n                                                prop=\"id\"\r\n                                                label=\"拖拽\"\r\n                                                width=\"50\">\r\n                                            <template slot-scope=\"{row}\">\r\n                                                <i class=\"el-icon-rank allowDrag\" style=\"cursor:pointer\" /> {{row.id}}\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column\r\n                                                prop=\"name\"\r\n                                                label=\"文件名\"\r\n                                                width=\"230\" >\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span class=\"overflow-text\">{{scope.row.name}}</span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column\r\n                                                prop=\"option\"\r\n                                                label=\"操作\">\r\n                                            <template slot=\"header\" slot-scope=\"scope\">\r\n                                                <el-select class=\"\" v-model=\"dragConfig.optionVal\" placeholder=\"请选择\" size=\"mini\">\r\n                                                    <el-option\r\n                                                            v-for=\"item in dragConfig.options\"\r\n                                                            :key=\"item.value\"\r\n                                                            :label=\"item.label\"\r\n                                                            :value=\"item.value\">\r\n                                                    </el-option>\r\n                                                </el-select>\r\n\r\n                                                <el-input-number class=\" ml-3\" size=\"mini\" v-model=\"dragConfig.setVal\" controls-position=\"right\"  :min=\"0\" :max=\"10\" placeholder=\"值\"></el-input-number>\r\n\r\n                                                <el-button type=\"primary\" size=\"mini\" class=\"ml-3\" @click=\"fileConfigAdd\">加</el-button>\r\n                                                <el-button type=\"primary\" size=\"mini\" @click=\"fileConfigReduce\">减</el-button>\r\n                                            </template>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <el-input-number :controls=\"false\" :ref=\"createDeleteKey(scope.row.id, 'headerDeleteLine')\" size=\"mini\" v-model=\"scope.row.headerDeleteLine\" controls-position=\"right\"  :min=\"0\"  placeholder=\"文件头删除行数\"></el-input-number>\r\n                                                <el-input-number :controls=\"false\" :ref=\"createDeleteKey(scope.row.id, 'footerDeleteLine')\" class=\"ml-3\" size=\"mini\" v-model=\"scope.row.footerDeleteLine\" controls-position=\"right\" :min=\"0\" placeholder=\"文件尾删除行数\"></el-input-number>\r\n                                            </template>\r\n\r\n                                        </el-table-column>\r\n\r\n                                    </el-table>\r\n                                </el-table-draggable>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </el-col>\r\n\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n<script>\r\n    import ElTableDraggable from 'element-ui-el-table-draggable';\r\n    const iconv = require('iconv-lite');\r\n    const jschardet = require(\"jschardet\")\r\n\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                activeName: 'first',\r\n                fileList: [],\r\n                tmpFileNames: [],\r\n                nodeList: [],\r\n                nodeNum: 2,\r\n                replaceHis: [],\r\n                specialFileList: [],\r\n                specialKey: 99,\r\n                form: {\r\n                    fileHeader: '',\r\n                    fileFooter: '',\r\n                    fileName: '',\r\n                    fileSuffix: \".nc\",\r\n                    fileSuffixOptions: [\r\n                        {value: \".nc\", name: \".nc\"},\r\n                        {value: \".pim\", name: \".pim\"},\r\n                    ],\r\n                    ready: true,\r\n                    delivery: true,\r\n                },\r\n                dragOptions:{\r\n                    animation: 120,\r\n                    scroll: true,\r\n                    group: 'sortlist',\r\n                    ghostClass: 'ghost-style'\r\n                },\r\n                curId: 0,\r\n                combineFileList : [\r\n                ],\r\n\r\n                dragList: [],\r\n                dragConfig: {\r\n                    optionVal: 0,\r\n                    options: [\r\n                        {value: 0, label: \"文件头删除行数\"},\r\n                        {value: 1, label: \"文件尾删除行数\"}\r\n                    ],\r\n\r\n                    setVal: 1,\r\n                },\r\n\r\n                formRules: {\r\n                    fileHeader: [\r\n                        { required: true, message: '请输入文件头', trigger: 'blur' },\r\n                    ],\r\n                    fileFooter: [\r\n                        { required: true, message: '请输入文件尾', trigger: 'change' }\r\n                    ],\r\n                    fileName: [\r\n                        { required: true, message: '请输入完整文件名', trigger: 'change', validator: (rule, value, callback) => {\r\n                            if(!this.form.fileName) {\r\n                                return callback(new Error('请输入完整文件名'));\r\n                            }\r\n\r\n                            if(this.form.fileSuffix === '') {\r\n                                return callback(new Error('请选择文件后缀'));\r\n                            }\r\n\r\n                            callback();\r\n                        }}\r\n                    ],\r\n                    fileSuffix: [\r\n                        { required: true, message: '请选择文件后缀', trigger: 'change' }\r\n                    ],\r\n                }\r\n            };\r\n        },\r\n        components:{\r\n            ElTableDraggable\r\n        },\r\n        computed: {\r\n            replaceFlag: function () {\r\n                return (idx) => {\r\n                    if (!this.nodeList.hasOwnProperty(idx)) {\r\n                        return false;\r\n                    }\r\n\r\n                    let node = this.nodeList[idx];\r\n                    let replaceKey = this.createReplaceKey(node.search, node.replace);\r\n                    return node.replaceHis.indexOf(replaceKey) != -1;\r\n                };\r\n            },\r\n            totalNum: function() {\r\n                let num = 0;\r\n                this.nodeList.map(node => {\r\n                    num += node.fileList.length;\r\n                });\r\n\r\n                return num;\r\n            },\r\n            specialNum: function() {\r\n                return this.specialFileList.length;\r\n            },\r\n            getFileList: {\r\n                get() {\r\n                    let fileList = [];\r\n\r\n                    if(this.form.delivery) {\r\n                        this.nodeList.map((node, nodeIdx) => {\r\n                            node.fileList.map((file, fileIdx) => {\r\n                                file.nodeIdx = nodeIdx;\r\n                                file.fileIdx = fileIdx;\r\n                                fileList.push(file);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        //debugger\r\n                        fileList.push(...this.specialFileList);\r\n                    }\r\n\r\n                    return fileList;\r\n                },\r\n                set(value) {\r\n                    console.warn(value)\r\n                },\r\n            },\r\n            getFileBadge: function() {\r\n                return (rawName) => {\r\n                    return rawName + (this.totalNum > 0 ? '<el-badge value=\"' + this.totalNum + '\" class=\"large-btn\"  />' : '');\r\n                };\r\n            },\r\n        },\r\n        watch: {\r\n            //nodeList: {\r\n            // immediate: true,\r\n            // //deep: true,\r\n            // handler(nodeList) {\r\n            //\r\n            // }\r\n            //},\r\n        },\r\n        mounted() {\r\n            this.initNodeList();\r\n\r\n            console.log(iconv.encodingExists('windows-1252'));\r\n        },\r\n\r\n        methods: {\r\n            combineFile() {\r\n                this.$refs['form'].validate((valid) => {\r\n                    if (!valid) {\r\n                        return false;\r\n                    }\r\n\r\n                    let rawList = [];\r\n                    let rawIds = [];\r\n                    this.nodeList.map(node => {\r\n                        node.fileList.map(file => {\r\n                            rawIds.push(file.id);\r\n                            rawList.push(file);\r\n                        });\r\n                    });\r\n\r\n                    rawList.push(...this.specialFileList);\r\n\r\n                    if(this.dragList.length != rawList.length) {\r\n                        this.dragList = rawList;\r\n                    }\r\n\r\n                    if(this.dragList.length == 0) {\r\n                        this.$message.info('请上传要合并的文件');\r\n                        return false;\r\n                    }\r\n\r\n                    let promiseList = [];\r\n                    this.dragList.map(file => {\r\n                        //debugger\r\n                        if(this.form.delivery && rawIds.indexOf(file.id) == -1) {\r\n                            return false;\r\n                        }\r\n\r\n                        if(!this.form.delivery && rawIds.indexOf(file.id) != -1) {\r\n                            return false;\r\n                        }\r\n\r\n                        let p = this.readFile(file, res => {\r\n                            res = res.split(\"\\n\").filter(res => res);\r\n                            res.splice(0, file.headerDeleteLine);\r\n                            res.splice(res.length - file.footerDeleteLine, file.footerDeleteLine);\r\n                            return res.join(\"\\n\");\r\n                        });\r\n\r\n                        promiseList.push(p);\r\n                    });\r\n\r\n                    if(promiseList.length == 0) {\r\n                        this.$message.info('请上传文件');\r\n                        return false;\r\n                    }\r\n\r\n                    this.form.ready = false;\r\n                    Promise.all([...promiseList]).then(res => {\r\n                        console.log(res)\r\n                        res.unshift(this.form.fileHeader);\r\n                        res.push(this.form.fileFooter);\r\n                        res = res.filter(res => res);\r\n                        res = res.join(\"\\n\");\r\n\r\n                        console.log(res)\r\n                        this.form.ready = true;\r\n                        this.downloadFileByContent(res, this.form.fileName + this.form.fileSuffix);\r\n                        this.$message.success(\"合并成功，文件：\" + this.form.fileName + this.form.fileSuffix);\r\n                    });\r\n\r\n                    console.log('content')\r\n                });\r\n            },\r\n\r\n            test(flag) {\r\n                return new Promise((resolve, reject) => {\r\n                    let time = Math.ceil(Math.random() * 10000);\r\n                    console.warn('执行 ' + flag);\r\n                    setTimeout(() => {\r\n                        resolve(time + '-' + flag);\r\n                    }, time);\r\n                });\r\n            },\r\n\r\n            readFile(file, callback) {\r\n                return new Promise((resolve, reject) => {\r\n                    let fileReader = new FileReader();\r\n                    fileReader.onloadend =  (event) => {\r\n                        console.warn(event)\r\n                        console.warn(this.detectCharset(event.target.result))\r\n                        resolve(callback(this.fileContentDecode(event.target.result)));\r\n                    };\r\n\r\n                    fileReader.readAsBinaryString(file.raw);\r\n                });\r\n            },\r\n            fileConfigAdd() {\r\n                this.dispatchFileConfig(true);\r\n            },\r\n\r\n            fileConfigReduce() {\r\n                this.dispatchFileConfig(false);\r\n            },\r\n\r\n            dispatchFileConfig(isAdd = true) {\r\n                if(this.form.delivery) {\r\n                    this.nodeList.map(node => {\r\n                        node.fileList.map(file => {\r\n                            this.doUpdateDeletedLine(file, isAdd);\r\n                        });\r\n                    });\r\n                } else {\r\n                    this.specialFileList.map(file => {\r\n                        this.doUpdateDeletedLine(file, isAdd);\r\n                    });\r\n                }\r\n            },\r\n\r\n            doUpdateDeletedLine(file, isAdd = true) {\r\n                let key = this.dragConfig.optionVal == 0 ? 'headerDeleteLine' : 'footerDeleteLine';\r\n                file[key] = file[key] == undefined ? 0 : file[key];\r\n                if(isAdd) {\r\n                    file[key] += this.dragConfig.setVal;\r\n                } else {\r\n                    file[key] -= this.dragConfig.setVal;\r\n                }\r\n\r\n                file[key] = file[key] < 0 ? 0 : file[key];\r\n                this.updateDeletedLine(file.id, key, file[key]);\r\n            },\r\n\r\n            updateDeletedLine(id, mode, value) {\r\n                let key = this.createDeleteKey(id, mode);\r\n                this.$refs[key].setCurrentValue(value);\r\n            },\r\n\r\n            dragChange(log) {\r\n                this.dragList = log.list;\r\n                console.log(log)\r\n\r\n            },\r\n            formReset() {\r\n                this.$refs.form.resetFields();\r\n                for(let key in this.form) {\r\n                    if(key == 'fileSuffixOptions') {\r\n                        continue;\r\n                    }\r\n\r\n                    if(this.form.hasOwnProperty(key)) {\r\n                        this.form[key] = key == 'ready' || key == \"delivery\" ? true : '';\r\n                    }\r\n                }\r\n            },\r\n            removeHandle(event){\r\n                console.log(event);\r\n                this.$message.success(`从 ${event.from.id} 移动到 ${event.to.id} `);\r\n            },\r\n            addNode() {\r\n                this.nodeList.push(this.initNode());\r\n            },\r\n\r\n            batchReplace() {\r\n                this.nodeList.map((node, idx) => {\r\n                    this.doReplace(idx);\r\n                });\r\n            },\r\n\r\n            batchDownload() {\r\n                this.nodeList.map((node, idx) => {\r\n                    this.downloadFile(idx);\r\n                });\r\n            },\r\n\r\n            getReplaceHis(idx) {\r\n                if(this.nodeList[idx].replaceHis.length == 0) {\r\n                    this.$message.info('没有替换历史');\r\n                    return false;\r\n                }\r\n\r\n                let hisHtml = '';\r\n                this.nodeList[idx].replaceHis.map((his, key) => {\r\n                    hisHtml += `<p>#${key} ${his}<p>`;\r\n                });\r\n\r\n                this.$alert(hisHtml, '替换历史', {\r\n                    dangerouslyUseHTMLString: true\r\n                });\r\n            },\r\n\r\n            doReplace(idx) {\r\n\r\n                if(this.nodeList[idx].fileList.length == 0) {\r\n                    this.$message.info(\"请先上传文件！\");\r\n                    return false;\r\n                }\r\n\r\n                let node = this.nodeList[idx];\r\n                let replaceKey = this.createReplaceKey(node.search, node.replace);\r\n                node.replaceHis.push(replaceKey);\r\n\r\n                let promiseList = [];\r\n                node.fileList.map(file => {\r\n                    let p = this.readFile(file, res => {\r\n                        res = res.replaceAll(node.search, node.replace);\r\n                        file.raw = new File([res], file.name, {\r\n                            name: file.name,\r\n                            size: res.length,\r\n                            type: file.type,\r\n                            lastModified: file.lastModified,\r\n                        });\r\n\r\n                        this.$message({\r\n                            message: file.name + ' 替换成功',\r\n                            type: 'success'\r\n                        });\r\n\r\n                        return res;\r\n                    });\r\n\r\n                    promiseList.push(p);\r\n                });\r\n\r\n                Promise.all([...promiseList]).then(res => {\r\n                    console.log('replace res: ', res);\r\n                });\r\n            },\r\n\r\n            fileContentDecode(binaryStr) {\r\n                return iconv.decode(binaryStr, this.detectCharset(binaryStr));\r\n            },\r\n\r\n            detectCharset(binaryStr) {\r\n                let collect = jschardet.detectAll(binaryStr);\r\n                let result = '';\r\n                let confidence = 0;\r\n                console.error(collect);\r\n                for(let idx in collect) {\r\n                    if(collect[idx].confidence > confidence) {\r\n                        result = collect[idx].encoding;\r\n                        confidence = collect[idx].confidence;\r\n                    }\r\n                }\r\n\r\n                if(['TIS-620', 'windows-1252'].indexOf(result) != -1) {\r\n                    result = 'gbk';\r\n                }\r\n\r\n                return result;\r\n            },\r\n\r\n            downloadFileByContent(content, fileName) {\r\n               let file = new File([content], fileName, {\r\n                   type: 'text/plain',\r\n               });\r\n               console.warn(file)\r\n               this.downloadBlob(URL.createObjectURL(file), fileName);\r\n            },\r\n\r\n            downloadFile(idx) {\r\n                if(!this.nodeList.hasOwnProperty(idx)) {\r\n                    this.$message.info(\"请上传文件！\");\r\n                    return false;\r\n                }\r\n\r\n                this.nodeList[idx].fileList.map(file => {\r\n                    let url = URL.createObjectURL(file.raw);\r\n                    let name = file.name.substring(0, file.name.lastIndexOf(\".\"));\r\n                    let suffix = file.name.substring(file.name.lastIndexOf(\".\"));\r\n                    if(this.nodeList[idx].replaceHis.length > 0) {\r\n                        name += \"(\" + this.nodeList[idx].replaceHis.join(\",\") + \")\";\r\n                    }\r\n\r\n                    console.warn(file.name)\r\n                    this.downloadBlob(url, name + suffix);\r\n                });\r\n            },\r\n            initNodeList() {\r\n                for (let i = 0; i < this.nodeNum; i++) {\r\n                    this.nodeList.push(this.initNode());\r\n                }\r\n            },\r\n            initNode() {\r\n                return {\r\n                    search: '',\r\n                    replace: '',\r\n                    fileNum: 0,\r\n                    fileList: [\r\n                        //{name: \"test.json\", uid: 55555, id:1}\r\n                    ],\r\n                    isReplace: false,\r\n                    replaceHis: [],\r\n                };\r\n            },\r\n            handleClick(tab, event) {\r\n                console.log(tab, event);\r\n            },\r\n\r\n            handleRemove(idx) {\r\n                return (file, fileList) => {\r\n                    console.log(file, fileList)\r\n                    for(var key in fileList) {\r\n                        if(file.name == fileList[key].name) {\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    if(idx == this.specialKey) {\r\n                        this.specialFileList = fileList;\r\n                    } else {\r\n                        this.nodeList[idx].fileNum--;\r\n                        this.nodeList[idx].fileList = fileList;\r\n\r\n                        if(fileList.length == 0) {\r\n                            this.nodeList[idx].replaceHis = [];\r\n                        }\r\n                    }\r\n\r\n                    let nameIdx = this.tmpFileNames[idx].indexOf(file.name);\r\n                    delete this.tmpFileNames[idx][nameIdx];\r\n                };\r\n            },\r\n\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            handleProgress(event, file, fileList) {\r\n                console.log(event, file);\r\n            },\r\n\r\n            myHandleChange(idx) {\r\n                return (file, fileList) => {\r\n                    if (!this.tmpFileNames.hasOwnProperty(idx)) {\r\n                        this.tmpFileNames[idx] = [];\r\n                    }\r\n\r\n                    if (this.tmpFileNames[idx].indexOf(file.name) != -1) {\r\n                        this.$message.warning(\"出现重复文件： \" + file.name + \", 取消当前上传！\");\r\n                        console.log(this.createUploadKey(idx))\r\n                        console.log(this.$refs[this.createUploadKey(idx)])\r\n\r\n                        if(idx == this.specialKey) {\r\n                            this.$refs[this.createUploadKey(idx)].handleRemove(file, file.raw);\r\n                        } else {\r\n                            this.$refs[this.createUploadKey(idx)][0].handleRemove(file, file.raw);\r\n                        }\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    file.id = this.createId();\r\n                    file.headerDeleteLine = 1;\r\n                    file.footerDeleteLine = 1;\r\n\r\n                    //file.\r\n                    if(idx == this.specialKey) {\r\n                        //debugger\r\n                        this.specialFileList = fileList;\r\n                        console.log(this.specialFileList)\r\n                    } else {\r\n                        this.nodeList[idx].fileNum++;\r\n                        this.nodeList[idx].fileList = fileList;\r\n                    }\r\n\r\n                    this.tmpFileNames[idx].push(file.name);\r\n                };\r\n            },\r\n\r\n            downloadBlob(blobUrl, fileName, revokeObjectURL) {\r\n                let downloadElement = document.createElement('a');\r\n                downloadElement.href = blobUrl;\r\n                //下载后文件名\r\n                downloadElement.download = fileName;\r\n                console.log(fileName)\r\n                document.body.appendChild(downloadElement);\r\n                //点击下载\r\n                downloadElement.click();\r\n                //下载完成移除元素\r\n                document.body.removeChild(downloadElement);\r\n                if (revokeObjectURL == null || revokeObjectURL) {\r\n                    //释放掉blob对象\r\n                    window.URL.revokeObjectURL(blobUrl)\r\n                }\r\n            },\r\n\r\n            createUploadKey(idx) {\r\n                return 'upload' + idx;\r\n            },\r\n\r\n            createReplaceKey(search, replace) {\r\n                return search + ' = ' + replace;\r\n            },\r\n\r\n            createId() {\r\n                return this.curId++;\r\n            },\r\n\r\n            createDeleteKey(id, mode) {\r\n                return id + '-' + mode;\r\n            },\r\n\r\n        }\r\n    };\r\n</script>\r\n<style>\r\n    .wrap {\r\n        border: 1px solid #ebebeb;\r\n        border-radius: 3px;\r\n        transition: .2s;\r\n        padding: 10px;\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .content-overflow {\r\n        height: 200px;\r\n        overflow-y: scroll;\r\n        overflow-x: hidden;\r\n    }\r\n\r\n    .content-overflow::-webkit-scrollbar{\r\n        width: 0;\r\n    }\r\n\r\n    .margin-bottom-10 {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .text {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .item {\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    .clearfix:before,\r\n    .clearfix:after {\r\n        display: table;\r\n        content: \"\";\r\n    }\r\n\r\n    .clearfix:after {\r\n        clear: both\r\n    }\r\n\r\n    .box-card {\r\n    }\r\n\r\n    /** upload icon*/\r\n    .my-avatar-uploader {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n        text-align: center;\r\n    }\r\n\r\n    .my-avatar-uploader:hover {\r\n        border-color: #409EFF;\r\n    }\r\n\r\n    .my-avatar-uploader .avatar-uploader-icon {\r\n        font-size: 50px;\r\n        color: #8c939d;\r\n        text-align: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        line-height: 210px;\r\n\r\n    }\r\n\r\n    .my-avatar-uploader .avatar {\r\n        width: 178px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n\r\n    .upload-demo {\r\n        position: relative;\r\n    }\r\n\r\n    .upload-demo .el-upload {\r\n        position: absolute;\r\n        z-index: 99;\r\n        border: 0px !important;\r\n        background: none;\r\n        width: 100%;\r\n    }\r\n\r\n    .upload-demo .el-upload .el-upload-dragger {\r\n\r\n        border: 0px !important;\r\n        background: none;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .upload-demo .el-icon-close {\r\n        position: absolute;\r\n        z-index: 999;\r\n        display: block;\r\n    }\r\n\r\n\r\n    #app {\r\n        overflow: scroll;\r\n    }\r\n\r\n    .margin-left-3 {\r\n        margin-left: 3px;\r\n    }\r\n\r\n    .margin-left-10 {\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .ml-3 {\r\n        margin-left: 3px !important;\r\n    }\r\n    .mt-10 {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .mb-3 {\r\n        margin-bottom: 3px;\r\n    }\r\n\r\n    .large-btn {\r\n        width: 100%;\r\n    }\r\n\r\n\r\n    .drag-box{\r\n        display: flex;\r\n        user-select: none;\r\n    }\r\n    .drag-box-item {\r\n        flex: 1;\r\n        background-color: #eff1f5;\r\n        margin-right: 16px;\r\n        border-radius: 6px;\r\n        border: 1px #e1e4e8 solid;\r\n    }\r\n    .item-title{\r\n        padding: 8px 8px 8px 12px;\r\n        font-size: 14px;\r\n        line-height: 1.5;\r\n        color: #24292e;\r\n        font-weight: 600;\r\n    }\r\n    .item-ul{\r\n        padding: 0 8px 8px;\r\n        max-height: 1000px;\r\n        overflow-y: scroll;\r\n    }\r\n    .item-ul::-webkit-scrollbar{\r\n        width: 0;\r\n    }\r\n\r\n    .overflow-text {\r\n        display: block;\r\n        color: #606266;\r\n        overflow: hidden;\r\n        max-width: 250px;\r\n        padding-left: 4px;\r\n        text-overflow: ellipsis;\r\n        transition: color .3s;\r\n        white-space: nowrap;\r\n        line-height: 30px;\r\n    }\r\n\r\n    .drag-list {\r\n        border: 1px #e1e4e8 solid;\r\n        padding: 10px;\r\n        margin: 5px 0 10px;\r\n        list-style: none;\r\n        background-color: #fff;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        -webkit-transition: border .3s ease-in;\r\n        transition: border .3s ease-in;\r\n    }\r\n    .drag-list:hover {\r\n        border: 1px solid #20a0ff;\r\n    }\r\n    .drag-title {\r\n        font-weight: 400;\r\n        line-height: 25px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .ghost-style{\r\n        display: block;\r\n        color: transparent;\r\n        border-style: dashed\r\n    }\r\n\r\n    .el-select .el-input {\r\n        width: 130px;\r\n    }\r\n\r\n    .el-message-box {\r\n        z-index: 99999;\r\n        position: relative;\r\n    }\r\n\r\n    .min-with-80 {\r\n        width: 80px;\r\n    }\r\n\r\n    .el-upload--text {\r\n        border: 0;\r\n    }\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/page"}]}