{"remainingRequest":"/data/www/kit/www/Public/kit-test/node_modules/thread-loader/dist/cjs.js!/data/www/kit/www/Public/kit-test/node_modules/babel-loader/lib/index.js!/data/www/kit/www/Public/kit-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/data/www/kit/www/Public/kit-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/www/kit/www/Public/kit-test/src/components/common/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/www/kit/www/Public/kit-test/src/components/common/Home.vue","mtime":1618905572735},{"path":"/data/www/kit/www/Public/kit-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport vHead from \"./Header.vue\";\nimport vSidebar from \"./Sidebar.vue\";\nimport vTags from \"./Tags.vue\";\nimport bus from \"./bus\";\nexport default {\n  data: function data() {\n    return {\n      tagsList: [],\n      collapse: false\n    };\n  },\n  components: {\n    vHead: vHead,\n    vSidebar: vSidebar,\n    vTags: vTags\n  },\n  created: function created() {\n    var _this = this;\n\n    bus.$on('collapse-content', function (msg) {\n      _this.collapse = msg;\n    }); // 只有在标签页列表里的页面才使用keep-alive，即关闭标签之后就不保存到内存中了。\n\n    bus.$on('tags', function (msg) {\n      var arr = [];\n\n      for (var i = 0, len = msg.length; i < len; i++) {\n        msg[i].name && arr.push(msg[i].name);\n      }\n\n      _this.tagsList = arr;\n    });\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,OAAA,KAAA;AACA,OAAA,QAAA;AACA,OAAA,KAAA;AACA,OAAA,GAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,KAAA,EAAA;AAHA,GAPA;AAYA,EAAA,OAZA,qBAYA;AAAA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,GAAA;AACA,KAFA,EADA,CAKA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA,GAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACA;;AACA,MAAA,KAAA,CAAA,QAAA,GAAA,GAAA;AACA,KANA;AAOA;AAzBA,CAAA","sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n        <v-head></v-head>\r\n        <v-sidebar></v-sidebar>\r\n        <div class=\"content-box\" :class=\"{'content-collapse':collapse}\">\r\n            <v-tags></v-tags>\r\n            <div class=\"content\">\r\n                <transition name=\"move\" mode=\"out-in\">\r\n                    <keep-alive :include=\"tagsList\">\r\n                        <router-view></router-view>\r\n                    </keep-alive>\r\n                </transition>\r\n                <el-backtop target=\".content\"></el-backtop>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport vHead from './Header.vue';\r\nimport vSidebar from './Sidebar.vue';\r\nimport vTags from './Tags.vue';\r\nimport bus from './bus';\r\nexport default {\r\n    data() {\r\n        return {\r\n            tagsList: [],\r\n            collapse: false\r\n        };\r\n    },\r\n    components: {\r\n        vHead,\r\n        vSidebar,\r\n        vTags\r\n    },\r\n    created() {\r\n        bus.$on('collapse-content', msg => {\r\n            this.collapse = msg;\r\n        });\r\n\r\n        // 只有在标签页列表里的页面才使用keep-alive，即关闭标签之后就不保存到内存中了。\r\n        bus.$on('tags', msg => {\r\n            let arr = [];\r\n            for (let i = 0, len = msg.length; i < len; i++) {\r\n                msg[i].name && arr.push(msg[i].name);\r\n            }\r\n            this.tagsList = arr;\r\n        });\r\n    }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components/common"}]}