{"remainingRequest":"/data/www/combine/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/www/combine/src/components/page/Combine.vue?vue&type=style&index=0&id=3362c3a2&lang=css&","dependencies":[{"path":"/data/www/combine/src/components/page/Combine.vue","mtime":1666243653904},{"path":"/data/www/combine/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/data/www/combine/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/data/www/combine/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/data/www/combine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/combine/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":["\n #tab-first {\n     border: none !important;;\n     outline:none !important;\n }\n .wrap {\n     border: 1px solid #ebebeb;\n     border-radius: 3px;\n     transition: .2s;\n     margin-top: 20px;\n     padding: 20px !important;\n }\n\n .wrap div {\n     outline:none !important;\n     -webkit-tap-highlight-color:rgba(0,0,0,0);\n }\n\n .wrap *:focus {\n     outline:none !important;\n     -webkit-tap-highlight-color:rgba(0,0,0,0);\n }\n\n *:focus {\n     outline: none;\n     -webkit-tap-highlight-color:rgba(0,0,0,0);\n }\n\n .content-overflow {\n     height: 200px;\n     overflow-y: scroll;\n     overflow-x: hidden;\n }\n\n .content-overflow::-webkit-scrollbar{\n     width: 0;\n }\n\n .margin-bottom-10 {\n     margin-bottom: 10px;\n }\n\n .text {\n     font-size: 14px;\n }\n\n .item {\n     margin-bottom: 18px;\n }\n\n .clearfix:before,\n .clearfix:after {\n     display: table;\n     content: \"\";\n }\n\n .clearfix:after {\n     clear: both\n }\n\n .box-card {\n }\n\n /** upload icon*/\n .my-avatar-uploader {\n     border: 1px dashed #d9d9d9;\n     border-radius: 6px;\n     cursor: pointer;\n     position: relative;\n     overflow: hidden;\n     text-align: center;\n }\n\n .my-avatar-uploader:hover {\n     border-color: #409EFF;\n }\n\n .my-avatar-uploader .avatar-uploader-icon {\n     font-size: 50px;\n     color: #8c939d;\n     text-align: center;\n     width: 50px;\n     height: 50px;\n     line-height: 210px;\n\n }\n\n .my-avatar-uploader .avatar {\n     width: 178px;\n     height: 178px;\n     display: block;\n }\n\n .sr-upload-demo {\n     position: relative;\n     height: 100%;\n     width: 100%;\n }\n\n .sr-upload-demo .el-upload {\n     position: absolute;\n     z-index: 99;\n     border: 0px !important;\n     background: none;\n     width: 100%;\n }\n\n .sr-upload-demo .el-upload .el-upload-dragger {\n\n     border: 0px !important;\n     background: none;\n     width: 100%;\n     height: 100%;\n }\n\n .sr-upload-demo .el-icon-close {\n     position: absolute;\n     z-index: 999;\n     display: block;\n }\n\n .upload-demo {\n     position: relative;\n }\n\n .upload-demo .el-upload {\n     position: absolute;\n     z-index: 99;\n     border: 0px !important;\n     background: none;\n     width: 100%;\n }\n\n .upload-demo .el-upload .el-upload-dragger {\n\n     border: 0px !important;\n     background: none;\n     width: 100%;\n     height: 100%;\n }\n\n .upload-demo .el-icon-close {\n     position: absolute;\n     z-index: 999;\n     display: block;\n }\n\n\n #app {\n     overflow: scroll;\n }\n\n .margin-left-3 {\n     margin-left: 3px !important;\n }\n\n .margin-left-10 {\n     margin-left: 10px;\n }\n\n .ml-3 {\n     margin-left: 3px !important;\n }\n .mt-10 {\n     margin-top: 10px;\n }\n\n .mb-3 {\n     margin-bottom: 3px;\n }\n\n .large-btn {\n     width: 100%;\n }\n\n\n .drag-box{\n     display: flex;\n     user-select: none;\n }\n .drag-box-item {\n     flex: 1;\n     background-color: #eff1f5;\n     margin-right: 16px;\n     border-radius: 6px;\n     border: 1px #e1e4e8 solid;\n }\n .item-title{\n     padding: 8px 8px 8px 12px;\n     font-size: 14px;\n     line-height: 1.5;\n     color: #24292e;\n     font-weight: 600;\n }\n .item-ul{\n     padding: 0 8px 8px;\n     max-height: 1000px;\n     overflow-y: scroll;\n }\n .item-ul::-webkit-scrollbar{\n     width: 0;\n }\n\n .overflow-text {\n     display: block;\n     color: #606266;\n     overflow: hidden;\n     max-width: 250px;\n     padding-left: 4px;\n     text-overflow: ellipsis;\n     transition: color .3s;\n     white-space: nowrap;\n     line-height: 30px;\n }\n\n .drag-list {\n     border: 1px #e1e4e8 solid;\n     padding: 10px;\n     margin: 5px 0 10px;\n     list-style: none;\n     background-color: #fff;\n     border-radius: 6px;\n     cursor: pointer;\n     -webkit-transition: border .3s ease-in;\n     transition: border .3s ease-in;\n }\n .drag-list:hover {\n     border: 1px solid #20a0ff;\n }\n .drag-title {\n     font-weight: 400;\n     line-height: 25px;\n     margin: 10px 0;\n     font-size: 22px;\n     color: #1f2f3d;\n }\n .ghost-style{\n     display: block;\n     color: transparent;\n     border-style: dashed\n }\n\n .el-select .el-input {\n     width: 130px;\n }\n\n .el-message-box {\n     z-index: 99999;\n     position: relative;\n }\n\n .min-with-80 {\n     width: 80px;\n }\n\n .el-upload--text {\n     border: 0;\n }\n\n .third-box {\n     margin-top: 10px;\n }\n\n .third-box .box-card{\n     background: #eff1f5;\n }\n\n .third-box .el-card__body{\n     padding: 10px;\n }\n\n .third-box .content-overflow {\n     background: white;\n     height: 450px;\n     margin-top: 5px;\n     border-radius: 5px;\n }\n\n .third-box .box-operator {\n     margin-top: 15px;\n }\n\n .third-box .upload-demo,.el-upload {\n     width: 100%;\n     height: 100%;\n }\n\n .third-box .upload-demo .el-icon-close {\n     position: absolute;\n     z-index: 999;\n     display: block;\n }\n\n .third-box .upload-demo .el-upload-list__item-status-label {\n     z-index: 998;\n     display: none;\n }\n\n .third-box .special-input {\n     width: auto;\n }\n\n .third-box .search {\n     width: 130px;\n }\n\n .third-box .s-input {\n     width: 90%;\n }\n\n .third-box .s-radio {\n     width: 100%;\n     height: 50px;\n }\n\n .third-box .t-close {\n     font-size: 20px;\n     margin-top: -10px;\n }\n .third-box .t-close i{\n     display: inline-block;\n     width: 100%;\n     height: 100%;\n }\n\n.third-box .box-card-title {\n     display: block;\n     position: absolute;\n     top: 0px;\n     z-index: 999;\n     background: white;\n }\n\n .third-box .folder-content {\n     border-radius: 5px;\n     border: 1px solid #8080805e;\n     height: 450px;\n     overflow: scroll;\n     margin-top: 10px;\n }\n\n .third-box .folder-select-title {\n     font-weight: bold;\n }\n\n\n\n",{"version":3,"sources":["Combine.vue"],"names":[],"mappings":";AA8tfile":"Combine.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <el-row :gutter=\"10\">\r\n        <el-col :span=\"24\" :offset=\"0\" class=\"wrap\">\r\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n\r\n                <el-tab-pane  name=\"first\" class=\"wrap-padding\">\r\n                    <span slot=\"label\">程式替换<el-badge :value=\"totalNum\" class=\"large-btn\" :hidden=\"totalNum > 0 ? false : true\" ></el-badge></span>\r\n\r\n                    <el-col :span=\"12\" class=\"margin-bottom-10\" v-for=\"(item, idx) in nodeList\">\r\n                        <el-card class=\"box-card\">\r\n                            <div slot=\"header\" class=\"clearfix\">\r\n                                <el-col :span=\"5\">\r\n                                    <el-input v-model=\"item.search\" prefix-icon=\"el-icon-search\" placeholder=\"查找\"></el-input>\r\n                                </el-col>\r\n                                <el-col :span=\"5\">\r\n                                    <el-input v-model=\"item.replace\" prefix-icon=\"el-icon-edit\" placeholder=\"替换\"></el-input>\r\n                                </el-col>\r\n                                <el-badge :value=\"item.fileNum\" class=\"\" :hidden=\"item.fileNum > 0 ? false : true\">\r\n                                    <el-button v-show=\"!replaceFlag(idx)\" size=\"small\" class=\"ml-3\" type=\"primary\"\r\n                                               @click=\"doReplace(idx)\">替换\r\n                                    </el-button>\r\n                                    <el-button v-show=\"replaceFlag(idx)\" class=\"ml-3\" size=\"small\" type=\"success\">已替换</el-button>\r\n                                </el-badge>\r\n                                <el-button size=\"small\" type=\"primary\" class=\"margin-left-3\" @click=\"downloadFile(idx)\">下载</el-button>\r\n                                <el-button size=\"small\" type=\"danger\" class=\"margin-left-3\" @click=\"clearSearchReplace(idx)\">清空</el-button>\r\n                                <el-button size=\"small\" type=\"success\" class=\"ml-3\" @click=\"getReplaceHis(idx)\">替换历史</el-button>\r\n\r\n                            </div>\r\n                            <div class=\"content-overflow\">\r\n                                <el-upload\r\n                                        class=\"sr-upload-demo\"\r\n                                        drag\r\n                                        :ref=\"createUploadKey(idx)\"\r\n                                        action=\"\"\r\n                                        :on-preview=\"handlePreview\"\r\n                                        :on-remove=\"handleRemove(idx)\"\r\n                                        :on-progress=\"handleProgress\"\r\n                                        :on-change=\"myHandleChange(idx)\"\r\n                                        :auto-upload=\"false\"\r\n                                        multiple>\r\n                                    <i class=\"el-icon-upload\" v-show=\"item.fileNum == 0\"></i>\r\n                                    <div class=\"el-upload__text\" v-show=\"item.fileNum == 0\">将文件拖到此处，或<em>点击上传</em></div>\r\n                                </el-upload>\r\n                            </div>\r\n\r\n                        </el-card>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"12\" class=\"margin-bottom-10\">\r\n                        <div class=\"my-avatar-uploader content-overflow\" @click=\"addNode\">\r\n                            <i class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                        </div>\r\n\r\n                        <el-row class=\"mt-10\">\r\n                            <el-badge :value=\"totalNum\" class=\"large-btn\" :hidden=\"totalNum > 0 ? false : true\" >\r\n                                <el-button type=\"danger\" size=\"medium\" class=\"large-btn\" @click=\"batchReplace\">批量替换</el-button>\r\n                            </el-badge>\r\n                        </el-row>\r\n\r\n                        <el-row class=\"mt-10\">\r\n                            <el-button type=\"primary\" size=\"medium\" class=\"large-btn\" @click=\"batchDownload\">批量下载</el-button>\r\n                        </el-row>\r\n\r\n                    </el-col>\r\n\r\n\r\n                </el-tab-pane>\r\n\r\n\r\n                <!--<el-tab-pane label=\"文件合并\" name=\"second\" v-show=\"false\">\r\n                    <el-col :span=\"10\">\r\n                        <el-form ref=\"form\" :rules=\"formRules\" :model=\"form\" label-width=\"90px\">\r\n                            <el-form-item label=\"使用替换\">\r\n                                <el-switch v-model=\"form.delivery\">\r\n                                </el-switch>\r\n                                <span style=\"color: #F56C6C;margin-left: 5px;display: inline-block;\">使用已经替换的文件或者重新上传文件</span>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"上传\" v-show=\"!form.delivery\">\r\n                                <span slot=\"label\">上传<el-badge :value=\"specialNum\" :hidden=\"specialNum > 0 ? false : true\" ></el-badge></span>\r\n                                <el-upload\r\n                                        class=\"\"\r\n                                        drag\r\n                                        action=\"\"\r\n                                        :ref=\"createUploadKey(specialKey)\"\r\n                                        :on-change=\"myHandleChange(specialKey)\"\r\n                                        :on-remove=\"handleRemove(specialKey)\"\r\n                                        :auto-upload=\"false\"\r\n                                        multiple>\r\n                                    <i class=\"el-icon-upload\"></i>\r\n                                    <div class=\"el-upload__text\">\r\n\r\n                                        <p>将文件拖到此处，或<em>点击上传</em></p>\r\n                                    </div>\r\n                                </el-upload>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件头\" prop=\"fileHeader\">\r\n                                <el-input type=\"textarea\" v-model=\"form.fileHeader\"></el-input>\r\n                            </el-form-item>\r\n\r\n\r\n                            <el-form-item label=\"文件尾\" prop=\"fileFooter\">\r\n                                <el-input type=\"textarea\" v-model=\"form.fileFooter\"></el-input>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件名\" prop=\"fileName\">\r\n                                <el-input placeholder=\"请输入内容\" v-model=\"form.fileName\" class=\"input-with-select\">\r\n                                    <el-select v-model=\"form.fileSuffix\" slot=\"append\" placeholder=\"请选择\" prop=\"fileSuffix\">\r\n                                        <el-option\r\n                                                v-for=\"item in form.fileSuffixOptions\"\r\n                                                :key=\"item.value\"\r\n                                                :label=\"item.name\"\r\n                                                :value=\"item.value\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </el-input>\r\n\r\n                            </el-form-item>\r\n\r\n                            <el-form-item>\r\n                                <el-button v-show=\"form.ready\" type=\"primary\" @click=\"combineFile\">立即合并</el-button>\r\n                                <el-button v-show=\"!form.ready\" type=\"primary\" :loading=\"true\">合并中</el-button>\r\n                                <el-button @click=\"formReset()\">取消</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </el-col>\r\n                    <el-col :span=\"14\">\r\n\r\n                        <div class=\"drag-box\">\r\n                            <div class=\"drag-box-item\">\r\n                                <el-empty v-show=\"getFileList.length == 0\" description=\"未上传文件\"></el-empty>\r\n                                <el-table-draggable handle=\".allowDrag\" @drop=\"dragChange\">\r\n                                    <el-table\r\n                                            ref=\"dragTable\"\r\n                                            :data=\"getFileList\"\r\n                                            style=\"width: 100%\" v-show=\"getFileList.length > 0\">\r\n                                        <el-table-column\r\n                                                prop=\"id\"\r\n                                                label=\"拖拽\"\r\n                                                width=\"50\">\r\n                                            <template slot-scope=\"{row}\">\r\n                                                <i class=\"el-icon-rank allowDrag\" style=\"cursor:pointer\" /> {{row.id}}\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column\r\n                                                prop=\"name\"\r\n                                                label=\"文件名\"\r\n                                                width=\"230\" >\r\n                                            <template slot-scope=\"scope\">\r\n                                                <span class=\"overflow-text\">{{scope.row.name}}</span>\r\n                                            </template>\r\n                                        </el-table-column>\r\n                                        <el-table-column\r\n                                                prop=\"option\"\r\n                                                label=\"操作\">\r\n                                            <template slot=\"header\" slot-scope=\"scope\">\r\n                                                <el-select class=\"\" v-model=\"dragConfig.optionVal\" placeholder=\"请选择\" size=\"mini\">\r\n                                                    <el-option\r\n                                                            v-for=\"item in dragConfig.options\"\r\n                                                            :key=\"item.value\"\r\n                                                            :label=\"item.label\"\r\n                                                            :value=\"item.value\">\r\n                                                    </el-option>\r\n                                                </el-select>\r\n\r\n                                                <el-input-number class=\" ml-3\" size=\"mini\" v-model=\"dragConfig.setVal\" controls-position=\"right\"  :min=\"0\" :max=\"10\" placeholder=\"值\"></el-input-number>\r\n\r\n                                                <el-button type=\"primary\" size=\"mini\" class=\"ml-3\" @click=\"fileConfigAdd\">加</el-button>\r\n                                                <el-button type=\"primary\" size=\"mini\" @click=\"fileConfigReduce\">减</el-button>\r\n                                            </template>\r\n                                            <template slot-scope=\"scope\">\r\n                                                <el-input-number :controls=\"false\" :ref=\"createDeleteKey(scope.row.id, 'headerDeleteLine')\" size=\"mini\" v-model=\"scope.row.headerDeleteLine\" controls-position=\"right\"  :min=\"0\"  placeholder=\"文件头删除行数\"></el-input-number>\r\n                                                <el-input-number :controls=\"false\" :ref=\"createDeleteKey(scope.row.id, 'footerDeleteLine')\" class=\"ml-3\" size=\"mini\" v-model=\"scope.row.footerDeleteLine\" controls-position=\"right\" :min=\"0\" placeholder=\"文件尾删除行数\"></el-input-number>\r\n                                            </template>\r\n\r\n                                        </el-table-column>\r\n\r\n                                    </el-table>\r\n                                </el-table-draggable>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </el-col>\r\n\r\n                </el-tab-pane>-->\r\n\r\n                <el-tab-pane label=\"程式串联\" name=\"third\" style=\"margin-top: 10px;\" class=\"third-box\">\r\n                    <el-col :span=\"10\">\r\n                        <el-card class=\"box-card\" shadow=\"never\" >\r\n                            <span class=\"box-card-title\">要串联的程式</span>\r\n\r\n                            <div class=\"content-overflow\">\r\n                                <el-upload v-show=\"!form.delivery\"\r\n                                        class=\"upload-demo\"\r\n                                        drag\r\n                                        :ref=\"createUploadKey(specialBoxKey)\"\r\n                                        action=\"\"\r\n                                        :on-preview=\"handlePreview\"\r\n                                        :on-remove=\"handleRemove(specialBoxKey)\"\r\n                                        :on-progress=\"handleProgress\"\r\n                                        :on-change=\"myHandleChange(specialBoxKey)\"\r\n                                        :auto-upload=\"false\"\r\n                                        :disabled=\"false\"\r\n                                        multiple>\r\n                                    <i class=\"el-icon-upload\" v-show=\"specialBoxFileList.length == 0\"></i>\r\n                                    <div class=\"el-upload__text\" v-show=\"specialBoxFileList == 0\">将文件拖到此处，或<em>点击上传</em></div>\r\n                                </el-upload>\r\n\r\n                                <ul class=\"el-upload-list el-upload-list--text\" v-show=\"form.delivery\">\r\n                                    <el-empty description=\"请在程式替换页面上传文件\" v-show=\"getFileList.length == 0\">\r\n                                        <el-button type=\"primary\" plain @click=\"activeName='first'\">去上传</el-button>\r\n                                    </el-empty>\r\n\r\n                                    <li tabindex=\"0\" class=\"el-upload-list__item is-ready\" v-for=\"file in getFileList\">\r\n                                        <a class=\"el-upload-list__item-name\"><i class=\"el-icon-document\"></i>{{file.name}}</a>\r\n                                        <label class=\"el-upload-list__item-status-label\">\r\n                                            <i class=\"el-icon-upload-success el-icon-circle-check\"></i>\r\n                                        </label>\r\n                                        <i class=\"el-icon-close\" @click=\"deleteNodeListFile(file.nodeIdx, file.id)\"></i>\r\n                                        <i class=\"el-icon-close-tip\">按 delete 键可删除</i>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                            <div class=\"box-operator clearfix\">\r\n                                <el-col :span=\"12\">\r\n                                    <el-badge :value=\"specialBoxNum\" class=\"large-btn\" :hidden=\"specialBoxNum > 0 ? false : true\" >\r\n                                        <el-button type=\"primary\" v-show=\"form.ready\" size=\"medium\" class=\"large-btn\" @click=\"combineFile\">合并</el-button>\r\n                                        <el-button v-show=\"!form.ready\" type=\"primary\"  size=\"medium\" class=\"large-btn\" :loading=\"true\">合并中</el-button>\r\n                                    </el-badge>\r\n                                </el-col>\r\n                                <el-col :span=\"12\"><el-button type=\"danger\" size=\"medium\" class=\"large-btn\" @click=\"clearBoxFileList\">清空</el-button></el-col>\r\n                            </div>\r\n\r\n                        </el-card>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"14\">\r\n                        <el-form ref=\"form\" :rules=\"formRules\" :model=\"form\" label-width=\"150px\">\r\n                            <el-form-item label=\"使用替换\">\r\n                                <el-switch v-model=\"form.delivery\">\r\n                                </el-switch>\r\n                                <span style=\"color: #F56C6C;margin-left: 5px;display: inline-block;\">使用已经替换的程式或者重新上传程式</span>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件头删除行数\" prop=\"fileHeaderDeletedLine\">\r\n                                <el-select v-model=\"form.fileHeaderDeletedLine\"  placeholder=\"请选择\" >\r\n                                    <el-option\r\n                                            v-for=\"num in 20\"\r\n                                            :key=\"num\"\r\n                                            :label=\"num\"\r\n                                            :value=\"num\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件尾删除行数\" prop=\"fileFooterDeletedLine\">\r\n                                <el-select v-model=\"form.fileFooterDeletedLine\"  placeholder=\"请选择\" >\r\n                                    <el-option\r\n                                            v-for=\"num in 20\"\r\n                                            :key=\"num\"\r\n                                            :label=\"num\"\r\n                                            :value=\"num\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件头增加\" prop=\"fileHeader\">\r\n                                <el-input type=\"textarea\" v-model=\"form.fileHeader\"></el-input>\r\n                            </el-form-item>\r\n\r\n\r\n                            <el-form-item label=\"文件尾增加\" prop=\"fileFooter\" class=\"clearfix\">\r\n                                <el-col :span=\"14\">\r\n                                    <el-input type=\"textarea\" v-model=\"form.fileFooter\" :autosize=\"{ minRows: 6}\"></el-input>\r\n                                </el-col>\r\n\r\n                                <el-col :span=\"10\">\r\n                                    <el-input placeholder=\"模板名\" class=\"margin-bottom-10\" v-model=\"form.templateName\"></el-input>\r\n\r\n                                    <el-button icon=\"el-icon-document\" @click=\"showTemplate\">选择模板</el-button>\r\n                                    <el-button icon=\"el-icon-document-add\" type=\"primary\" plain @click=\"saveTemplate\">保存模板</el-button>\r\n                                </el-col>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"串联程式新名\" prop=\"fileName\">\r\n                                <el-input placeholder=\"串联程式新名\" v-model=\"form.fileName\" class=\"input-with-select\">\r\n                                    <el-select v-model=\"form.fileSuffix\" slot=\"append\" placeholder=\"请选择\" prop=\"fileSuffix\">\r\n                                        <el-option\r\n                                                v-for=\"item in form.fileSuffixOptions\"\r\n                                                :key=\"item.value\"\r\n                                                :label=\"item.name\"\r\n                                                :value=\"item.value\">\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </el-input>\r\n\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"文件保存路径\" prop=\"filePath\">\r\n                                <el-input placeholder=\"文件保存路径\" v-model=\"form.filePath\" class=\"input-with-select\" readonly>\r\n                                    <el-button slot=\"append\" icon=\"el-icon-folder\" type=\"success\" @click=\"openFolder\"></el-button>\r\n                                </el-input>\r\n                            </el-form-item>\r\n\r\n                            <el-form-item>\r\n                                <!--<el-button v-show=\"form.ready\" type=\"primary\" @click=\"combineFile\">立即合并</el-button>\r\n                                <el-button v-show=\"!form.ready\" type=\"primary\" :loading=\"true\">合并中</el-button>\r\n                                <el-button @click=\"formReset()\">取消</el-button>-->\r\n                            </el-form-item>\r\n                        </el-form>\r\n\r\n                    </el-col>\r\n\r\n                    <el-dialog title=\"选择文件尾模板\" :visible.sync=\"dialogFormVisible\">\r\n                        <el-form >\r\n                            <div v-for=\"(item,key) in getTemplate\">\r\n                                <el-form-item label=\"\" prop=\"fileName\">\r\n                                    <el-col :span=\"10\">\r\n                                        <el-radio v-model=\"form.selectedTemplate\" :label=\"key\" border class=\"s-radio\">\r\n                                            <el-input   placeholder=\"模板名称\" v-model=\"item.name\" class=\"s-input\"></el-input>\r\n                                        </el-radio>\r\n\r\n                                    </el-col>\r\n\r\n                                    <el-col :span=\"13\">\r\n                                        <el-input placeholder=\"文件尾增加内容\" v-model=\"item.value\" type=\"textarea\" :autosize=\"{ minRows: 6}\">\r\n\r\n                                        </el-input>\r\n\r\n                                    </el-col>\r\n                                    <el-col :span=\"1\"  title=\"删除\" >\r\n                                        <i class=\"el-icon-close t-close\" @click=\"deleteTemplate(key)\"></i>\r\n                                    </el-col>\r\n\r\n                                </el-form-item>\r\n                                <el-divider class=\"clearfix\"></el-divider>\r\n                            </div>\r\n\r\n                        </el-form>\r\n\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button  @click=\"addTemplate\">增 加</el-button>\r\n                            <el-button type=\"primary\" @click=\"dialogSaveTemplate\">保 存</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n\r\n<!--                    选择文件夹-->\r\n                    <el-dialog title=\"选择保存的目录\" :visible.sync=\"dialogFolderSelectVisible\">\r\n                        <div>\r\n                            <span class=\"folder-select-title\">当前选中: </span>\r\n                            <span v-show=\"getCurFolder.length == 0\" style=\"color:red;\">未选中文件夹</span>\r\n                            <span v-show=\"getCurFolder.length > 0\">{{getCurFolder}}</span>\r\n                        </div>\r\n                        <div class=\"folder-content\">\r\n                            <v-folder :data=\"folderData\"  :ajax=\"ajax\" :conf=\"folderConfig\" @change=\"folderChange\"></v-folder>\r\n                        </div>\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button type=\"primary\" @click=\"dialogSaveFolder\">保 存</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n<script>\r\n    import ElTableDraggable from 'element-ui-el-table-draggable';\r\n    const iconv = require('iconv-lite');\r\n    const jschardet = require(\"jschardet\")\r\n    import { invoke, window } from '@tauri-apps/api';\r\n\r\n\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                activeName: 'first',\r\n                cacheFile: 'web.conf.json',\r\n                isWinOs: false,\r\n                folderData: {\r\n                    // root\r\n                    sourceDir: '/',\r\n                    // children\r\n                    files: [],\r\n                    dirs: []\r\n                },\r\n                folderData2: {\r\n                    sourceDir: 'root',\r\n                    dirs: [{\r\n                        sourceDir: 'subroot-1',\r\n                        dirs: ['empty 1', 'empty 2', 'empty 3'],\r\n                        files: ['file1234', 'file5678', 'filexyzw']\r\n                    }, {\r\n                        sourceDir: 'subroot-2',\r\n                        dirs: ['empty 1', 'empty 2', 'empty 3'],\r\n                        files: ['file1234', 'file5678', 'filexyzw']\r\n                    }, {\r\n                        sourceDir: 'subroot-3',\r\n                        dirs: ['empty 1', 'empty 2', 'empty 3'],\r\n                        files: ['file1234', 'file5678', 'filexyzw']\r\n                    }],\r\n                    files: ['a.js', 'b.js', 'c.js']\r\n                },\r\n\r\n                folderConfig: {\r\n                    // tree node name\r\n                    node: 'sourceDir',\r\n                    // KEY NAME of dirs/branches/parents etc.. .\r\n                    branch: 'dirs',\r\n                    // KEY NAME of  files/leafs/children etc...\r\n                    leaf: 'files'\r\n                },\r\n                ajax: (node) => {\r\n\r\n                    return this.readFolder(node);\r\n\r\n                    console.log(node)\r\n                    return {\r\n                        sourceDir: 'subroot-99',\r\n                        dirs: [\"xxx\", 'empty 2', 'empty 3'], ///仅支持当前层\r\n                        files: ['file1234', 'file5678', 'filexyzw']\r\n                    }\r\n                },\r\n\r\n                dialogFolderSelectVisible: false,\r\n                dialogFormVisible: false,\r\n                selectedFolder: [],\r\n                fileList: [],\r\n                tmpFileNames: [],\r\n                nodeList: [],\r\n                nodeNum: 2,\r\n                replaceHis: [],\r\n                specialFileList: [],\r\n                specialBoxFileList: [\r\n                ],\r\n                specialKey: 99,\r\n                specialBoxKey: 98,\r\n                form: {\r\n                    fileHeader: '',\r\n                    fileFooter: '',\r\n                    fileName: '',\r\n                    filePath: '',\r\n                    fileHeaderDeletedLine: 1,\r\n                    fileFooterDeletedLine: 1,\r\n                    fileSuffix: \".nc\",\r\n                    fileSuffixOptions: [\r\n                        {value: \".nc\", name: \".nc\"},\r\n                        {value: \".pim\", name: \".pim\"},\r\n                    ],\r\n                    templateList: [],\r\n                    selectedTemplate: 0,\r\n                    templateName: '',\r\n                    ready: true,\r\n                    delivery: true,\r\n                },\r\n                dragOptions:{\r\n                    animation: 120,\r\n                    scroll: true,\r\n                    group: 'sortlist',\r\n                    ghostClass: 'ghost-style'\r\n                },\r\n                curId: 0,\r\n                combineFileList : [\r\n                ],\r\n\r\n                dragList: [],\r\n                dragConfig: {\r\n                    optionVal: 0,\r\n                    options: [\r\n                        {value: 0, label: \"文件头删除行数\"},\r\n                        {value: 1, label: \"文件尾删除行数\"}\r\n                    ],\r\n\r\n                    setVal: 1,\r\n                },\r\n\r\n                formRules: {\r\n                    fileHeader: [\r\n                        { required: true, message: '请输入文件头', trigger: 'blur' },\r\n                    ],\r\n                    fileFooter: [\r\n                        { required: true, message: '请输入文件尾', trigger: 'change' }\r\n                    ],\r\n                    fileName: [\r\n                        { required: true, message: '请输入完整文件名', trigger: 'change', validator: (rule, value, callback) => {\r\n                            if(!this.form.fileName) {\r\n                                return callback(new Error('请输入完整文件名'));\r\n                            }\r\n\r\n                            if(this.form.fileSuffix === '') {\r\n                                return callback(new Error('请选择文件后缀'));\r\n                            }\r\n\r\n                            callback();\r\n                        }}\r\n                    ],\r\n                    fileSuffix: [\r\n                        { required: true, message: '请选择文件后缀', trigger: 'change' }\r\n                    ],\r\n                    filePath: [\r\n                        { required: true, message: '请选择文件路径', trigger: 'blur' }\r\n                    ],\r\n\r\n                }\r\n            };\r\n        },\r\n        components:{\r\n            ElTableDraggable\r\n        },\r\n        computed: {\r\n            getCurFolder: function() {\r\n                return this.selectedFolder.join(',');\r\n            },\r\n            replaceFlag: function () {\r\n                return (idx) => {\r\n                    if (!this.nodeList.hasOwnProperty(idx)) {\r\n                        return false;\r\n                    }\r\n\r\n                    let node = this.nodeList[idx];\r\n                    let replaceKey = this.createReplaceKey(node.search, node.replace);\r\n                    return node.replaceHis.indexOf(replaceKey) != -1;\r\n                };\r\n            },\r\n            totalNum: function() {\r\n                let num = 0;\r\n                this.nodeList.map(node => {\r\n                    num += node.fileList.length;\r\n                });\r\n\r\n                return num;\r\n            },\r\n            specialNum: function() {\r\n                return this.specialFileList.length;\r\n            },\r\n            specialBoxNum: function() {\r\n                return this.specialBoxFileList.length;\r\n            },\r\n\r\n            getTemplate: function() {\r\n                return this.form.templateList;\r\n            },\r\n\r\n            getFileList: {\r\n                get() {\r\n                    let fileList = [];\r\n\r\n                    if(this.form.delivery) {\r\n                        this.nodeList.map((node, nodeIdx) => {\r\n                            node.fileList.map((file, fileIdx) => {\r\n                                file.nodeIdx = nodeIdx;\r\n                                file.fileIdx = fileIdx;\r\n                                fileList.push(file);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        //debugger\r\n                        //fileList.push(...this.specialFileList);\r\n                    }\r\n\r\n                    return fileList;\r\n                },\r\n                set(value) {\r\n                    console.warn(value)\r\n                },\r\n            },\r\n            getFileBadge: function() {\r\n                return (rawName) => {\r\n                    return rawName + (this.totalNum > 0 ? '<el-badge value=\"' + this.totalNum + '\" class=\"large-btn\"  />' : '');\r\n                };\r\n            },\r\n        },\r\n\r\n        watch: {\r\n            //nodeList: {\r\n            // immediate: true,\r\n            // //deep: true,\r\n            // handler(nodeList) {\r\n            //\r\n            // }\r\n            //},\r\n            \"form.selectedTemplate\": {\r\n                immediate: false,\r\n                handler(value) {\r\n                    this.selectTemplate(value);\r\n                },\r\n            }\r\n        },\r\n        created() {\r\n            //this.initParams();\r\n        },\r\n        mounted() {\r\n            this.initNodeList();\r\n            this.initParams();\r\n\r\n            if(navigator.userAgent.toLowerCase().indexOf('windows') != -1) {\r\n                this.isWinOs = true;\r\n                this.folderData.dirs = ['C:/', 'D:/', 'E:/', 'F:/'];\r\n            }\r\n        },\r\n\r\n        methods: {\r\n            deleteNodeListFile(nodeIdx, fileId) {\r\n                let fileList = this.nodeList[nodeIdx].fileList.slice(0);\r\n                fileList.map(file => {\r\n                    if(file.id == fileId) {\r\n                        this.closeUploadedFile(nodeIdx, file, true)\r\n                    }\r\n                });\r\n            },\r\n            dialogSaveFolder() {\r\n                this.dialogFolderSelectVisible = false;\r\n                this.form.filePath = this.selectedFolder.join(',');\r\n                this.updateLocalStorage();\r\n            },\r\n            openFolder() {\r\n                this.dialogFolderSelectVisible = true;\r\n            },\r\n            basename(str) {\r\n                var idx = str.lastIndexOf('/')\r\n                idx = idx > -1 ? idx : str.lastIndexOf('\\\\')\r\n                if (idx < 0) {\r\n                    return str\r\n                }\r\n                return str.substring(idx + 1);\r\n            },\r\n\r\n            readFolder(node) {\r\n                return this.wmcReadDir(node.path).then(res => {\r\n                    let realPath = {\r\n                        sourceDir: this.basename(node.path),\r\n                        dirs: [], ///仅支持当前层\r\n                        files: []\r\n                    };\r\n                    res.map(item => {\r\n                        if(item.is_dir) {\r\n                            realPath.dirs.push(this.basename(item.path));\r\n                        }\r\n                    });\r\n\r\n                    return realPath;\r\n                });\r\n            },\r\n\r\n            writeContent(path, content) {\r\n                return this.wmcReadDir(node.path).then(res => {\r\n                    let realPath = {\r\n                        sourceDir: this.basename(node.path),\r\n                        dirs: [], ///仅支持当前层\r\n                        files: []\r\n                    };\r\n                    res.map(item => {\r\n                        if(item.is_dir) {\r\n                            realPath.dirs.push(this.basename(item.path));\r\n                        }\r\n                    });\r\n\r\n                    return realPath;\r\n                });\r\n            },\r\n\r\n            folderChange(value) {\r\n                console.warn(value)\r\n                if(this.isWinOs) {\r\n                    value = value.map(res => {\r\n                        return res.slice(1);\r\n                    });\r\n                }\r\n\r\n                this.selectedFolder = value;\r\n            },\r\n\r\n            wmcReadDir(path) {\r\n                return invoke('wmc_read_dir', { path: path }).then(res => {\r\n                    console.log(res)\r\n\r\n                    let content = JSON.parse(res)\r\n                    if(!content || content.length == 0) {\r\n                        return [];\r\n                    }\r\n\r\n                    console.warn(content)\r\n                    content = content.map(item => {\r\n                        let parsed = item.split(',');\r\n                        return {\r\n                            path: this.fixWinsDir(parsed[0]),\r\n                            is_dir: parsed[1] == 'true' ? true : false,\r\n                        };\r\n                    });\r\n\r\n                    return content;\r\n                });\r\n            },\r\n\r\n            fixWinsDir(dir) {\r\n                if(!this.isWinOs) {\r\n                    return dir;\r\n                }\r\n\r\n                dir = dir.replace(new RegExp(\"//\", \"g\"), '/');\r\n                dir = dir.replace(new RegExp(\"\\\\\\\\\", \"g\"), '/');\r\n\r\n                return dir;\r\n            },\r\n\r\n            wmcWrite(path, content) {\r\n                return invoke('wmc_write', { path: path , content: content}).then(res => {\r\n                    console.log('wmc_write: ' + res)\r\n\r\n                    return JSON.parse(res);\r\n                });\r\n            },\r\n\r\n            //保存到本地文件\r\n            cacheRead() {\r\n                return this.wmcRead(this.cacheFile);\r\n            },\r\n\r\n            cacheWrite(json) {\r\n                this.cacheRead().then(res => {\r\n                    res = typeof res == 'object' ? res : {};\r\n                    res = Object.assign({}, res, json);\r\n                    this.wmcWrite(this.cacheFile, JSON.stringify(res))\r\n                })\r\n            },\r\n\r\n            wmcRead(path) {\r\n                return invoke('wmc_read', { path: path}).then(res => {\r\n                    console.log('wmc_read: ' + res)\r\n\r\n                    return res;\r\n                });\r\n            },\r\n\r\n            triggerFile(event) {\r\n                console.log(event.target.files)\r\n            },\r\n            deleteTemplate(idx)  {\r\n\r\n                this.form.templateList = this.form.templateList.filter((t,key) => {return key != idx;});\r\n                console.log(this.form.templateList.length)\r\n                console.log(this.form.templateList)\r\n                if(this.form.templateList == null) {\r\n                    this.form.templateList = [];\r\n                }\r\n            },\r\n            initParams() {\r\n                let formCache = localStorage.getItem('form');\r\n                formCache = JSON.parse(formCache);\r\n                if(!formCache) {\r\n                    return \"\";\r\n                }\r\n\r\n                if(formCache != null) {\r\n                    for(let key in formCache) {\r\n                        this.form[key] = formCache[key];\r\n                    }\r\n                }\r\n\r\n                return false;\r\n                this.cacheRead().then(res => {\r\n                    if(!res) {\r\n                        return \"\";\r\n                    }\r\n\r\n                    let formCache = JSON.parse(res);\r\n                    console.log(formCache)\r\n                    if(formCache != null) {\r\n                        for(let key in formCache) {\r\n                            this.form[key] = formCache[key];\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n            dialogSaveTemplate() {\r\n                this.updateLocalStorage();\r\n                this.dialogFormVisible = false;\r\n                this.selectTemplate(this.form.selectedTemplate);\r\n            },\r\n            updateLocalStorage() {\r\n                localStorage.setItem('form', JSON.stringify(this.form));\r\n                //this.cacheWrite(this.form)\r\n            },\r\n            selectTemplate(idx) {\r\n                this.form.templateList = this.form.templateList.filter(t => t); // remove null\r\n                if(!this.form.templateList.hasOwnProperty(idx)) {\r\n                    return false;\r\n                }\r\n\r\n                let cur = this.form.templateList[idx];\r\n                this.form.fileFooter = cur.value;\r\n                this.form.templateName = cur.name;\r\n            },\r\n\r\n            addTemplate() {\r\n                let template = {name: '', value: ''};\r\n                this.form.templateList.push(template);\r\n            },\r\n\r\n            showTemplate() {\r\n                this.dialogFormVisible = true;\r\n            },\r\n\r\n            saveTemplate() {\r\n                let template = {\r\n                    value: this.form.fileFooter,\r\n                    name: this.form.templateName,\r\n                };\r\n\r\n                if(!template.value) {\r\n                    this.$message.info('请输入文件尾内容');\r\n                    return false;\r\n                }\r\n\r\n                if(!template.name) {\r\n                    this.$message.info('请输要保存模板名称');\r\n                    return false;\r\n                }\r\n\r\n                for(let idx in this.form.templateList)  {\r\n                    if(this.form.templateList[idx].name == template.name) {\r\n                        this.form.templateList[idx].value = template.value;\r\n                        this.$message.success('模板保存成功');\r\n                        this.updateLocalStorage();\r\n                        return  false;\r\n                    }\r\n                }\r\n\r\n                this.form.templateList.push(template);\r\n                this.updateLocalStorage();\r\n            },\r\n\r\n            combineFile() {\r\n                this.$refs['form'].validate((valid) => {\r\n                    if (!valid) {\r\n                        return false;\r\n                    }\r\n\r\n                    let rawList = [];\r\n                    let rawIds = [];\r\n\r\n                    if(this.form.delivery) {\r\n                        this.nodeList.map(node => {\r\n                            node.fileList.map(file => {\r\n                                rawIds.push(file.id);\r\n                                rawList.push(file);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        rawList.push(...this.specialFileList);\r\n                        rawList.push(...this.specialBoxFileList);\r\n                    }\r\n\r\n                    if(rawList.length == 0) {\r\n                        this.$message.info('请上传要合并的文件');\r\n                        return false;\r\n                    }\r\n\r\n                    let promiseList = [];\r\n                    rawList.map(file => {\r\n                        //debugger\r\n                        /*if(this.form.delivery && rawIds.indexOf(file.id) == -1) {\r\n                            return false;\r\n                        }\r\n\r\n                        if(!this.form.delivery && rawIds.indexOf(file.id) != -1) {\r\n                            return false;\r\n                        }*/\r\n\r\n                        let p = this.readFile(file, res => {\r\n                            //debugger\r\n                            console.warn('***********res***********')\r\n                            console.warn(res)\r\n                            res = res.split(\"\\n\").filter(res => res);\r\n                            res.splice(0, this.form.fileHeaderDeletedLine);\r\n                            res.splice(res.length - this.form.fileFooterDeletedLine, this.form.fileFooterDeletedLine);\r\n                            return res.join(\"\\n\");\r\n                        });\r\n\r\n                        promiseList.push(p);\r\n                    });\r\n\r\n                    if(promiseList.length == 0) {\r\n                        this.$message.info('请上传要合并的文件11');\r\n                        return false;\r\n                    }\r\n\r\n                    this.form.ready = false;\r\n                    Promise.all([...promiseList]).then(res => {\r\n                        console.log(res)\r\n                        res.unshift(this.fixTextArea(this.form.fileHeader));\r\n                        res.push(this.fixTextArea(this.form.fileFooter));\r\n                        res = res.filter(res => res);\r\n                        console.log(\"raw res: \", res)\r\n                        res = res.join(\"\\n\");\r\n\r\n                        console.log(res)\r\n                        this.form.ready = true;\r\n                        //this.downloadFileByContent(res, this.form.fileName + this.form.fileSuffix);\r\n                        this.wmcWrite(this.getFormFilePath(), res).then(res => {\r\n                            console.log('合并结果', res);\r\n                            if(res) {\r\n                                this.$message.success(\"合并成功，文件：\" + this.getFormFilePath());\r\n                                this.updateLocalStorage();\r\n                                return true;\r\n                            }\r\n\r\n                            this.$message.error(\"合并失败，文件：\" + this.getFormFilePath() + ', 请检查文件路径是否存在或者是否有写入权限');\r\n                        })\r\n                    });\r\n\r\n                    console.log('content')\r\n                });\r\n            },\r\n\r\n            fixTextArea(content) {\r\n                if(!this.isWinOs) {\r\n                    return content;\r\n                }\r\n\r\n                return content.replace(new RegExp(\"\\n\", \"g\"), \"\\r\\n\");\r\n            },\r\n\r\n            combineFile_bak() {\r\n                this.$refs['form'].validate((valid) => {\r\n                    if (!valid) {\r\n                        return false;\r\n                    }\r\n\r\n                    let rawList = [];\r\n                    let rawIds = [];\r\n                    this.nodeList.map(node => {\r\n                        node.fileList.map(file => {\r\n                            rawIds.push(file.id);\r\n                            rawList.push(file);\r\n                        });\r\n                    });\r\n\r\n                    rawList.push(...this.specialFileList);\r\n                    rawList.push(...this.specialBoxFileList);\r\n\r\n                    if(this.dragList.length != rawList.length) {\r\n                        this.dragList = rawList;\r\n                    }\r\n\r\n                    if(this.dragList.length == 0) {\r\n                        this.$message.info('请上传要合并的文件11');\r\n                        return false;\r\n                    }\r\n\r\n                    let promiseList = [];\r\n                    this.dragList.map(file => {\r\n                        //debugger\r\n                        /*if(this.form.delivery && rawIds.indexOf(file.id) == -1) {\r\n                            return false;\r\n                        }\r\n\r\n                        if(!this.form.delivery && rawIds.indexOf(file.id) != -1) {\r\n                            return false;\r\n                        }*/\r\n\r\n                        let p = this.readFile(file, res => {\r\n                            res = res.split(\"\\n\").filter(res => res);\r\n                            res.splice(0, file.headerDeleteLine);\r\n                            res.splice(res.length - file.footerDeleteLine, file.footerDeleteLine);\r\n                            return res.join(\"\\n\");\r\n                        });\r\n\r\n                        promiseList.push(p);\r\n                    });\r\n\r\n                    if(promiseList.length == 0) {\r\n                        this.$message.info('请上传文件33');\r\n                        return false;\r\n                    }\r\n\r\n                    this.form.ready = false;\r\n                    Promise.all([...promiseList]).then(res => {\r\n                        console.log(res)\r\n                        res.unshift(this.form.fileHeader);\r\n                        res.push(this.form.fileFooter);\r\n                        res = res.filter(res => res);\r\n                        res = res.join(\"\\n\");\r\n\r\n                        console.log(res)\r\n                        this.form.ready = true;\r\n                        //this.downloadFileByContent(res, this.form.fileName + this.form.fileSuffix);\r\n                        this.wmcWrite(this.getFormFilePath(), res).then(res => {\r\n                            console.log('合并结果', res);\r\n                            if(res) {\r\n                                this.$message.success(\"合并成功，文件：\" + this.getFormFilePath());\r\n                                return true;\r\n                            }\r\n\r\n                            this.$message.error(\"合并失败，文件：\" + this.getFormFilePath() + ', 请检查文件路径是否存在或者是否有写入权限');\r\n                        })\r\n                    });\r\n\r\n                    console.log('content')\r\n                });\r\n            },\r\n\r\n            getFormFilePath() {\r\n                return this.form.filePath + '/' + this.form.fileName + this.form.fileSuffix;\r\n            },\r\n\r\n            test(flag) {\r\n                return new Promise((resolve, reject) => {\r\n                    let time = Math.ceil(Math.random() * 10000);\r\n                    console.warn('执行 ' + flag);\r\n                    setTimeout(() => {\r\n                        resolve(time + '-' + flag);\r\n                    }, time);\r\n                });\r\n            },\r\n\r\n            readFile(file, callback) {\r\n                return new Promise((resolve, reject) => {\r\n                    let fileReader = new FileReader();\r\n                    fileReader.onloadend =  (event) => {\r\n                        console.warn(event)\r\n                        console.warn(this.detectCharset(event.target.result))\r\n                        resolve(callback(this.fileContentDecode(event.target.result)));\r\n                    };\r\n\r\n                    fileReader.readAsBinaryString(file.raw);\r\n                });\r\n            },\r\n            fileConfigAdd() {\r\n                this.dispatchFileConfig(true);\r\n            },\r\n\r\n            fileConfigReduce() {\r\n                this.dispatchFileConfig(false);\r\n            },\r\n\r\n            dispatchFileConfig(isAdd = true) {\r\n                if(this.form.delivery) {\r\n                    this.nodeList.map(node => {\r\n                        node.fileList.map(file => {\r\n                            this.doUpdateDeletedLine(file, isAdd);\r\n                        });\r\n                    });\r\n                } else {\r\n                    this.specialFileList.map(file => {\r\n                        this.doUpdateDeletedLine(file, isAdd);\r\n                    });\r\n                }\r\n            },\r\n\r\n            doUpdateDeletedLine(file, isAdd = true) {\r\n                let key = this.dragConfig.optionVal == 0 ? 'headerDeleteLine' : 'footerDeleteLine';\r\n                file[key] = file[key] == undefined ? 0 : file[key];\r\n                if(isAdd) {\r\n                    file[key] += this.dragConfig.setVal;\r\n                } else {\r\n                    file[key] -= this.dragConfig.setVal;\r\n                }\r\n\r\n                file[key] = file[key] < 0 ? 0 : file[key];\r\n                this.updateDeletedLine(file.id, key, file[key]);\r\n            },\r\n\r\n            updateDeletedLine(id, mode, value) {\r\n                let key = this.createDeleteKey(id, mode);\r\n                this.$refs[key].setCurrentValue(value);\r\n            },\r\n\r\n            dragChange(log) {\r\n                this.dragList = log.list;\r\n                console.log(log)\r\n\r\n            },\r\n            formReset() {\r\n                this.$refs.form.resetFields();\r\n                for(let key in this.form) {\r\n                    if(key == 'fileSuffixOptions') {\r\n                        continue;\r\n                    }\r\n\r\n                    if(this.form.hasOwnProperty(key)) {\r\n                        this.form[key] = key == 'ready' || key == \"delivery\" ? true : '';\r\n                    }\r\n                }\r\n            },\r\n            removeHandle(event){\r\n                console.log(event);\r\n                this.$message.success(`从 ${event.from.id} 移动到 ${event.to.id} `);\r\n            },\r\n            addNode() {\r\n                this.nodeList.push(this.initNode());\r\n            },\r\n\r\n            batchReplace() {\r\n                this.nodeList.map((node, idx) => {\r\n                    if(node.fileList.length == 0) {\r\n                        return false;\r\n                    }\r\n\r\n                    this.doReplace(idx, true);\r\n                });\r\n            },\r\n\r\n            batchDownload() {\r\n                this.nodeList.map((node, idx) => {\r\n                    if(node.fileList.length == 0) {\r\n                        return false;\r\n                    }\r\n\r\n                    this.downloadFile(idx);\r\n                });\r\n            },\r\n\r\n            clearBoxFileList() {\r\n                if(this.form.delivery) {\r\n                    for(let idx in this.nodeList) {\r\n                        this.clearSearchReplace(idx);\r\n                    }\r\n                } else {\r\n                    let deletedList = this.specialBoxFileList.slice(0);\r\n                    deletedList.map((file, key) => {\r\n                        this.closeUploadedFile(this.specialBoxKey, file, false);\r\n                    })\r\n                }\r\n            },\r\n\r\n            clearSearchReplace(idx) {\r\n\r\n                //debugger\r\n                if(this.nodeList[idx].fileList.length == 0) {\r\n                    return false;\r\n                }\r\n\r\n                let deletedList = this.nodeList[idx].fileList.slice(0);\r\n                console.log(deletedList)\r\n                deletedList.map((file, key) => {\r\n                    //debugger\r\n                    console.warn(file.name, key)\r\n                    this.closeUploadedFile(idx, file)\r\n                })\r\n\r\n                /*let node = this.initNode();\r\n                for(let key in node) {\r\n                    this.nodeList[idx][key] = node[key];\r\n                }*/\r\n            },\r\n\r\n            closeUploadedFile(idx, file, isMulti = true) {\r\n                let ref = this.$refs[this.createUploadKey(idx)];\r\n                if(isMulti) {\r\n                    ref = ref[0]\r\n                }\r\n\r\n                ref.handleRemove(file, file.raw);\r\n            },\r\n            getReplaceHis(idx) {\r\n                if(this.nodeList[idx].replaceHis.length == 0) {\r\n                    this.$message.info('没有替换历史');\r\n                    return false;\r\n                }\r\n\r\n                let hisHtml = '';\r\n                this.nodeList[idx].replaceHis.map((his, key) => {\r\n                    hisHtml += `<p>#${key} ${his}<p>`;\r\n                });\r\n\r\n                this.$alert(hisHtml, '替换历史', {\r\n                    dangerouslyUseHTMLString: true\r\n                });\r\n            },\r\n\r\n            doReplace(idx, isBatch = false) {\r\n\r\n                if(this.nodeList[idx].fileList.length == 0) {\r\n                    if(!isBatch) {\r\n                        this.$message.info(\"请先上传文件！\");\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                let node = this.nodeList[idx];\r\n                let replaceKey = this.createReplaceKey(node.search, node.replace);\r\n                node.replaceHis.push(replaceKey);\r\n\r\n                let promiseList = [];\r\n                node.fileList.map(file => {\r\n                    let p = this.readFile(file, res => {\r\n                        res = res.replace(new RegExp(node.search, 'g'), node.replace);\r\n                        //debugger\r\n                        file.raw = new File([res], file.name, {\r\n                            name: file.name,\r\n                            size: res.length,\r\n                            type: file.type,\r\n                            uid: file.uid,\r\n                            lastModified: file.lastModified,\r\n                        });\r\n\r\n                        file.raw.uid = file.uid;\r\n                        this.$message({\r\n                            message: file.name + ' 替换成功',\r\n                            type: 'success'\r\n                        });\r\n\r\n                        return res;\r\n                    });\r\n\r\n                    promiseList.push(p);\r\n                });\r\n\r\n                Promise.all([...promiseList]).then(res => {\r\n                    console.log('replace res: ', res);\r\n                });\r\n            },\r\n\r\n            fileContentDecode(binaryStr) {\r\n                return iconv.decode(binaryStr, this.detectCharset(binaryStr));\r\n            },\r\n\r\n            detectCharset(binaryStr) {\r\n                let collect = jschardet.detectAll(binaryStr);\r\n                let result = '';\r\n                let confidence = 0;\r\n\r\n                for(let idx in collect) {\r\n                    if(collect[idx].confidence > confidence) {\r\n                        result = collect[idx].encoding;\r\n                        confidence = collect[idx].confidence;\r\n                    }\r\n                }\r\n\r\n                if(['TIS-620', 'windows-1252'].indexOf(result) != -1) {\r\n                    result = 'GBK';\r\n                }\r\n\r\n                console.error(collect, result);\r\n\r\n                return result;\r\n            },\r\n\r\n            downloadFileByContent(content, fileName) {\r\n               let file = new File([content], fileName, {\r\n                   type: 'text/plain',\r\n               });\r\n               console.warn(file)\r\n               this.downloadBlob(URL.createObjectURL(file), fileName);\r\n            },\r\n\r\n            downloadFile(idx) {\r\n                if(!this.nodeList.hasOwnProperty(idx)) {\r\n                    this.$message.info(\"请上传文件！\");\r\n                    return false;\r\n                }\r\n\r\n                if(!this.form.filePath) {\r\n                    this.$message.info(\"程式保存路径未配置，请到程式串联页面配置\");\r\n                    return false;\r\n                }\r\n\r\n                this.nodeList[idx].fileList.map(file => {\r\n                    let name = file.name.substring(0, file.name.lastIndexOf(\".\"));\r\n                    let suffix = file.name.substring(file.name.lastIndexOf(\".\"));\r\n                    if(this.nodeList[idx].replaceHis.length > 0) {\r\n                        name += \"(\" + this.nodeList[idx].replaceHis.join(\",\") + \")\";\r\n                    }\r\n\r\n                    console.warn(file.name)\r\n                    //this.downloadBlob(url, name + suffix);\r\n                    this.readFile(file, res => {\r\n                        let path = this.form.filePath + \"/\" + name + suffix;\r\n                        this.wmcWrite(path, res);\r\n                        this.$message.success(\"程式保存成功，程式名： \" + path)\r\n                    })\r\n                });\r\n            },\r\n            initNodeList() {\r\n                for (let i = 0; i < this.nodeNum; i++) {\r\n                    this.nodeList.push(this.initNode());\r\n                }\r\n            },\r\n            initNode() {\r\n                return {\r\n                    search: '',\r\n                    replace: '',\r\n                    fileNum: 0,\r\n                    fileList: [\r\n                        //{name: \"test.json\", uid: 55555, id:1}\r\n                    ],\r\n                    isReplace: false,\r\n                    replaceHis: [],\r\n                };\r\n            },\r\n            handleClick(tab, event) {\r\n                console.log(tab, event);\r\n            },\r\n\r\n            handleRemove(idx) {\r\n                return (file, fileList) => {\r\n                    console.log(idx, file, fileList)\r\n                    /*for(var key in fileList) {\r\n                        if(file.name == fileList[key].name) {\r\n                            return false;\r\n                        }\r\n                    }*/\r\n\r\n                    if(idx == this.specialKey) {\r\n                        this.specialFileList = fileList;\r\n                    } else if(idx == this.specialBoxKey) {\r\n                        this.specialBoxFileList = fileList;\r\n                    } else {\r\n                        this.nodeList[idx].fileNum--;\r\n                        this.nodeList[idx].fileList = fileList;\r\n\r\n                        if(fileList.length == 0) {\r\n                            this.nodeList[idx].replaceHis = [];\r\n                        }\r\n                    }\r\n\r\n                    let nameIdx = this.tmpFileNames[idx].indexOf(file.name);\r\n                    delete this.tmpFileNames[idx][nameIdx];\r\n                };\r\n            },\r\n\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            handleProgress(event, file, fileList) {\r\n                console.log(event, file);\r\n            },\r\n\r\n            myHandleChange(idx) {\r\n                return (file, fileList) => {\r\n                    if (!this.tmpFileNames.hasOwnProperty(idx)) {\r\n                        this.tmpFileNames[idx] = [];\r\n                    }\r\n\r\n                    if (this.tmpFileNames[idx].indexOf(file.name) != -1) {\r\n                        this.$message.warning(\"出现重复文件： \" + file.name + \", 取消当前上传！\");\r\n                        console.log(this.createUploadKey(idx))\r\n                        console.log(this.$refs[this.createUploadKey(idx)])\r\n\r\n                        if(idx == this.specialKey || idx == this.specialBoxKey) {\r\n                            this.$refs[this.createUploadKey(idx)].handleRemove(file, file.raw);\r\n                        } else {\r\n                            this.$refs[this.createUploadKey(idx)][0].handleRemove(file, file.raw);\r\n                        }\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    file.id = this.createId();\r\n                    file.headerDeleteLine = 1;\r\n                    file.footerDeleteLine = 1;\r\n\r\n                    //file.\r\n                    if(idx == this.specialKey) {\r\n                        //debugger\r\n                        this.specialFileList = fileList;\r\n                        console.log(this.specialFileList)\r\n                    } else if(idx == this.specialBoxKey) {\r\n                        this.specialBoxFileList = fileList;\r\n                        console.log(fileList)\r\n                    } else {\r\n                        this.nodeList[idx].fileNum++;\r\n                        this.nodeList[idx].fileList = fileList;\r\n                    }\r\n\r\n                    this.tmpFileNames[idx].push(file.name);\r\n                };\r\n            },\r\n\r\n            downloadBlob(blobUrl, fileName, revokeObjectURL) {\r\n                let downloadElement = document.createElement('a');\r\n                downloadElement.href = blobUrl;\r\n                //下载后文件名\r\n                downloadElement.download = fileName;\r\n                console.log(fileName)\r\n                document.body.appendChild(downloadElement);\r\n                //点击下载\r\n                downloadElement.click();\r\n                //下载完成移除元素\r\n                document.body.removeChild(downloadElement);\r\n                if (revokeObjectURL == null || revokeObjectURL) {\r\n                    //释放掉blob对象\r\n                    window.URL.revokeObjectURL(blobUrl)\r\n                }\r\n            },\r\n\r\n            createUploadKey(idx) {\r\n                return 'upload' + idx;\r\n            },\r\n\r\n            createReplaceKey(search, replace) {\r\n                return search + ' = ' + replace;\r\n            },\r\n\r\n            createId() {\r\n                return this.curId++;\r\n            },\r\n\r\n            createDeleteKey(id, mode) {\r\n                return id + '-' + mode;\r\n            },\r\n\r\n        }\r\n    };\r\n</script>\r\n<style>\r\n    #tab-first {\r\n        border: none !important;;\r\n        outline:none !important;\r\n    }\r\n    .wrap {\r\n        border: 1px solid #ebebeb;\r\n        border-radius: 3px;\r\n        transition: .2s;\r\n        margin-top: 20px;\r\n        padding: 20px !important;\r\n    }\r\n\r\n    .wrap div {\r\n        outline:none !important;\r\n        -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n    }\r\n\r\n    .wrap *:focus {\r\n        outline:none !important;\r\n        -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n    }\r\n\r\n    *:focus {\r\n        outline: none;\r\n        -webkit-tap-highlight-color:rgba(0,0,0,0);\r\n    }\r\n\r\n    .content-overflow {\r\n        height: 200px;\r\n        overflow-y: scroll;\r\n        overflow-x: hidden;\r\n    }\r\n\r\n    .content-overflow::-webkit-scrollbar{\r\n        width: 0;\r\n    }\r\n\r\n    .margin-bottom-10 {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .text {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .item {\r\n        margin-bottom: 18px;\r\n    }\r\n\r\n    .clearfix:before,\r\n    .clearfix:after {\r\n        display: table;\r\n        content: \"\";\r\n    }\r\n\r\n    .clearfix:after {\r\n        clear: both\r\n    }\r\n\r\n    .box-card {\r\n    }\r\n\r\n    /** upload icon*/\r\n    .my-avatar-uploader {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n        text-align: center;\r\n    }\r\n\r\n    .my-avatar-uploader:hover {\r\n        border-color: #409EFF;\r\n    }\r\n\r\n    .my-avatar-uploader .avatar-uploader-icon {\r\n        font-size: 50px;\r\n        color: #8c939d;\r\n        text-align: center;\r\n        width: 50px;\r\n        height: 50px;\r\n        line-height: 210px;\r\n\r\n    }\r\n\r\n    .my-avatar-uploader .avatar {\r\n        width: 178px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n\r\n    .sr-upload-demo {\r\n        position: relative;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .sr-upload-demo .el-upload {\r\n        position: absolute;\r\n        z-index: 99;\r\n        border: 0px !important;\r\n        background: none;\r\n        width: 100%;\r\n    }\r\n\r\n    .sr-upload-demo .el-upload .el-upload-dragger {\r\n\r\n        border: 0px !important;\r\n        background: none;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .sr-upload-demo .el-icon-close {\r\n        position: absolute;\r\n        z-index: 999;\r\n        display: block;\r\n    }\r\n\r\n    .upload-demo {\r\n        position: relative;\r\n    }\r\n\r\n    .upload-demo .el-upload {\r\n        position: absolute;\r\n        z-index: 99;\r\n        border: 0px !important;\r\n        background: none;\r\n        width: 100%;\r\n    }\r\n\r\n    .upload-demo .el-upload .el-upload-dragger {\r\n\r\n        border: 0px !important;\r\n        background: none;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .upload-demo .el-icon-close {\r\n        position: absolute;\r\n        z-index: 999;\r\n        display: block;\r\n    }\r\n\r\n\r\n    #app {\r\n        overflow: scroll;\r\n    }\r\n\r\n    .margin-left-3 {\r\n        margin-left: 3px !important;\r\n    }\r\n\r\n    .margin-left-10 {\r\n        margin-left: 10px;\r\n    }\r\n\r\n    .ml-3 {\r\n        margin-left: 3px !important;\r\n    }\r\n    .mt-10 {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .mb-3 {\r\n        margin-bottom: 3px;\r\n    }\r\n\r\n    .large-btn {\r\n        width: 100%;\r\n    }\r\n\r\n\r\n    .drag-box{\r\n        display: flex;\r\n        user-select: none;\r\n    }\r\n    .drag-box-item {\r\n        flex: 1;\r\n        background-color: #eff1f5;\r\n        margin-right: 16px;\r\n        border-radius: 6px;\r\n        border: 1px #e1e4e8 solid;\r\n    }\r\n    .item-title{\r\n        padding: 8px 8px 8px 12px;\r\n        font-size: 14px;\r\n        line-height: 1.5;\r\n        color: #24292e;\r\n        font-weight: 600;\r\n    }\r\n    .item-ul{\r\n        padding: 0 8px 8px;\r\n        max-height: 1000px;\r\n        overflow-y: scroll;\r\n    }\r\n    .item-ul::-webkit-scrollbar{\r\n        width: 0;\r\n    }\r\n\r\n    .overflow-text {\r\n        display: block;\r\n        color: #606266;\r\n        overflow: hidden;\r\n        max-width: 250px;\r\n        padding-left: 4px;\r\n        text-overflow: ellipsis;\r\n        transition: color .3s;\r\n        white-space: nowrap;\r\n        line-height: 30px;\r\n    }\r\n\r\n    .drag-list {\r\n        border: 1px #e1e4e8 solid;\r\n        padding: 10px;\r\n        margin: 5px 0 10px;\r\n        list-style: none;\r\n        background-color: #fff;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        -webkit-transition: border .3s ease-in;\r\n        transition: border .3s ease-in;\r\n    }\r\n    .drag-list:hover {\r\n        border: 1px solid #20a0ff;\r\n    }\r\n    .drag-title {\r\n        font-weight: 400;\r\n        line-height: 25px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .ghost-style{\r\n        display: block;\r\n        color: transparent;\r\n        border-style: dashed\r\n    }\r\n\r\n    .el-select .el-input {\r\n        width: 130px;\r\n    }\r\n\r\n    .el-message-box {\r\n        z-index: 99999;\r\n        position: relative;\r\n    }\r\n\r\n    .min-with-80 {\r\n        width: 80px;\r\n    }\r\n\r\n    .el-upload--text {\r\n        border: 0;\r\n    }\r\n\r\n    .third-box {\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .third-box .box-card{\r\n        background: #eff1f5;\r\n    }\r\n\r\n    .third-box .el-card__body{\r\n        padding: 10px;\r\n    }\r\n\r\n    .third-box .content-overflow {\r\n        background: white;\r\n        height: 450px;\r\n        margin-top: 5px;\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .third-box .box-operator {\r\n        margin-top: 15px;\r\n    }\r\n\r\n    .third-box .upload-demo,.el-upload {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .third-box .upload-demo .el-icon-close {\r\n        position: absolute;\r\n        z-index: 999;\r\n        display: block;\r\n    }\r\n\r\n    .third-box .upload-demo .el-upload-list__item-status-label {\r\n        z-index: 998;\r\n        display: none;\r\n    }\r\n\r\n    .third-box .special-input {\r\n        width: auto;\r\n    }\r\n\r\n    .third-box .search {\r\n        width: 130px;\r\n    }\r\n\r\n    .third-box .s-input {\r\n        width: 90%;\r\n    }\r\n\r\n    .third-box .s-radio {\r\n        width: 100%;\r\n        height: 50px;\r\n    }\r\n\r\n    .third-box .t-close {\r\n        font-size: 20px;\r\n        margin-top: -10px;\r\n    }\r\n    .third-box .t-close i{\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n   .third-box .box-card-title {\r\n        display: block;\r\n        position: absolute;\r\n        top: 0px;\r\n        z-index: 999;\r\n        background: white;\r\n    }\r\n\r\n    .third-box .folder-content {\r\n        border-radius: 5px;\r\n        border: 1px solid #8080805e;\r\n        height: 450px;\r\n        overflow: scroll;\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .third-box .folder-select-title {\r\n        font-weight: bold;\r\n    }\r\n\r\n\r\n\r\n</style>\r\n"]}]}