{"remainingRequest":"/data/www/kit/www/Public/kit-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/data/www/kit/www/Public/kit-test/src/components/page/Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/data/www/kit/www/Public/kit-test/src/components/page/Upload.vue","mtime":1609993657334},{"path":"/data/www/kit/www/Public/kit-test/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/data/www/kit/www/Public/kit-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueCropper  from 'vue-cropperjs';\nexport default {\n    name: 'upload',\n    data: function(){\n        return {\n            defaultSrc: require('../../assets/img/img.jpg'),\n            fileList: [],\n            imgSrc: '',\n            cropImg: '',\n            dialogVisible: false,\n        }\n    },\n    components: {\n        VueCropper\n    },\n    methods:{\n        setImage(e){\n            const file = e.target.files[0];\n            if (!file.type.includes('image/')) {\n                return;\n            }\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                this.dialogVisible = true;\n                this.imgSrc = event.target.result;\n                this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\n            };\n            reader.readAsDataURL(file);\n        },\n        cropImage () {\n            this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n        },\n        cancelCrop(){\n            this.dialogVisible = false;\n            this.cropImg = this.defaultSrc;\n        },\n        imageuploaded(res) {\n            console.log(res)\n        },\n        handleError(){\n            this.$notify.error({\n                title: '上传失败',\n                message: '图片上传接口上传失败，可更改为自己的服务器接口'\n            });\n        }\n    },\n    created(){\n        this.cropImg = this.defaultSrc;\n    }\n}\n",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item><i class=\"el-icon-lx-calendar\"></i> 表单</el-breadcrumb-item>\r\n                <el-breadcrumb-item>图片上传</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"content-title\">支持拖拽</div>\r\n            <div class=\"plugins-tips\">\r\n                Element UI自带上传组件。\r\n                访问地址：<a href=\"http://element.eleme.io/#/zh-CN/component/upload\" target=\"_blank\">Element UI Upload</a>\r\n            </div>\r\n            <el-upload\r\n                class=\"upload-demo\"\r\n                drag\r\n                action=\"http://jsonplaceholder.typicode.com/api/posts/\"\r\n                multiple>\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n            </el-upload>\r\n            <div class=\"content-title\">支持裁剪</div>\r\n            <div class=\"plugins-tips\">\r\n                vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\r\n                访问地址：<a href=\"https://github.com/Agontuk/vue-cropperjs\" target=\"_blank\">vue-cropperjs</a>\r\n            </div>\r\n            <div class=\"crop-demo\">\r\n                <img :src=\"cropImg\" class=\"pre-img\">\r\n                <div class=\"crop-demo-btn\">选择图片\r\n                    <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change=\"setImage\"/>\r\n                </div>\r\n            </div>\r\n        \r\n            <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n                <vue-cropper ref='cropper' :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width:100%;height:300px;\"></vue-cropper>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelCrop\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VueCropper  from 'vue-cropperjs';\r\n    export default {\r\n        name: 'upload',\r\n        data: function(){\r\n            return {\r\n                defaultSrc: require('../../assets/img/img.jpg'),\r\n                fileList: [],\r\n                imgSrc: '',\r\n                cropImg: '',\r\n                dialogVisible: false,\r\n            }\r\n        },\r\n        components: {\r\n            VueCropper\r\n        },\r\n        methods:{\r\n            setImage(e){\r\n                const file = e.target.files[0];\r\n                if (!file.type.includes('image/')) {\r\n                    return;\r\n                }\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    this.dialogVisible = true;\r\n                    this.imgSrc = event.target.result;\r\n                    this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            },\r\n            cropImage () {\r\n                this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\r\n            },\r\n            cancelCrop(){\r\n                this.dialogVisible = false;\r\n                this.cropImg = this.defaultSrc;\r\n            },\r\n            imageuploaded(res) {\r\n                console.log(res)\r\n            },\r\n            handleError(){\r\n                this.$notify.error({\r\n                    title: '上传失败',\r\n                    message: '图片上传接口上传失败，可更改为自己的服务器接口'\r\n                });\r\n            }\r\n        },\r\n        created(){\r\n            this.cropImg = this.defaultSrc;\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .content-title{\r\n        font-weight: 400;\r\n        line-height: 50px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .pre-img{   \r\n        width: 100px;\r\n        height: 100px;\r\n        background: #f8f8f8;\r\n        border: 1px solid #eee;\r\n        border-radius: 5px;\r\n    }\r\n    .crop-demo{\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n    .crop-demo-btn{\r\n        position: relative;\r\n        width: 100px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 20px;\r\n        margin-left: 30px;\r\n        background-color: #409eff;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n    }\r\n    .crop-input{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 40px;\r\n        left: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n</style>"]}]}