{"version":3,"file":"form-create.min.js","sources":["../../../node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","../../utils/src/index.js","../src/components/checkbox/index.jsx","../../../node_modules/style-inject/dist/style-inject.es.js","../src/components/frame/index.jsx","../src/components/radio/index.jsx","../src/components/select/index.jsx","../src/components/tree/index.jsx","../src/components/upload/index.jsx","../../core/src/components/formCreate.js","../../core/src/core/mergeJsxProps.js","../../core/src/factory/vData.js","../../core/src/factory/creator.js","../../core/src/core/util.js","../../core/src/factory/maker.js","../../core/src/factory/vNode.js","../../core/src/factory/parser.js","../../core/src/core/render.js","../../core/src/core/api.js","../../core/src/core/handle.js","../../core/src/components/fragment.jsx","../../core/src/core/index.js","../../core/src/factory/form.js","../src/components/group/index.jsx","../src/components/index.js","../src/parsers/checkbox/parser.js","../src/parsers/checkbox/index.js","../src/parsers/datePicker/parser.js","../src/parsers/datePicker/index.js","../src/parsers/frame/parser.js","../src/parsers/frame/index.js","../src/parsers/hidden/index.js","../src/parsers/input/parser.js","../src/parsers/input/index.js","../src/parsers/radio/parser.js","../src/parsers/radio/index.js","../src/parsers/select/parser.js","../src/parsers/select/index.js","../src/parsers/slider/parser.js","../src/parsers/slider/index.js","../src/parsers/switch/parser.js","../src/parsers/switch/index.js","../src/parsers/timePicker/parser.js","../src/parsers/timePicker/index.js","../src/parsers/tree/parser.js","../src/parsers/tree/index.js","../src/parsers/upload/parser.js","../src/parsers/upload/index.js","../src/parsers/index.js","../src/core/config.js","../src/core/nodes.js","../src/core/form.js","../src/makers/datePicker.js","../src/makers/frame.js","../src/makers/input.js","../src/makers/select.js","../src/makers/slider.js","../src/makers/timePicker.js","../src/makers/tree.js","../src/makers/upload.js","../src/makers/index.js","../src/core/index.js","../src/index.js"],"sourcesContent":["\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone) {\n                    clone = clone._clone();\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone);\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-checkbox';\n\nexport default {\n    name: NAME,\n    props: {\n        options: {\n            type: Array,\n            default: () => []\n        },\n        children: {\n            type: Array,\n            default: () => []\n        },\n        ctx: {\n            type: Object,\n            default: () => ({})\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        type: String\n    },\n    watch: {\n        value() {\n            this.update();\n        }\n    },\n    data() {\n        return {\n            trueValue: [],\n            unique: uniqueId()\n        }\n    },\n    methods: {\n        onInput(n) {\n            this.$emit('input', this.options.filter((opt) => n.indexOf(opt.label) !== -1).map((opt) => opt.value));\n        },\n        update() {\n            this.trueValue = this.value ? this.options.filter((opt) => this.value.indexOf(opt.value) !== -1)\n                .map((option) => option.label) : []\n        }\n    },\n    created() {\n        this.update();\n    },\n    render() {\n        return <ElCheckboxGroup {...this.ctx} v-model={this.trueValue}\n            on-input={this.onInput}>{this.options.map((opt, index) => {\n                const props = {...opt};\n                const Type = this.type === 'button' ? 'ElCheckboxButton' : 'ElCheckbox';\n                delete props.value;\n                return <Type {...{props}} key={NAME + Type + index + this.unique}/>\n            }).concat(this.chlidren)}</ElCheckboxGroup>\n    }\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import style from '../../style/index.css';\nimport {isUndef, toArray, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-frame';\n\nexport default {\n    name: NAME,\n    props: {\n        type: {\n            type: String,\n            default: 'input'\n        },\n        field: {\n            type: String,\n            default: ''\n        },\n        helper: {\n            type: Boolean,\n            default: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        src: {\n            type: String,\n            required: true\n        },\n        icon: {\n            type: String,\n            default: 'el-icon-upload2'\n        },\n        width: {\n            type: String,\n            default: '500px'\n        },\n        height: {\n            type: String,\n            default: '370px'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        okBtnText: {\n            type: String,\n            default: '确定'\n        },\n        closeBtnText: {\n            type: String,\n            default: '关闭'\n        },\n        modalTitle: String,\n        handleIcon: {\n            type: [String, Boolean],\n            default: undefined\n        },\n        title: String,\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        onOpen: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onOk: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onCancel: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onLoad: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onBeforeRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onRemove: {\n            type: Function,\n            default: () => {\n            }\n        },\n        onHandle: {\n            type: Function,\n            default(src) {\n                this.previewImage = this.getSrc(src);\n                this.previewVisible = true;\n            }\n        },\n        modal: {\n            type: Object,\n            default: () => ({})\n        },\n        srcKey: {\n            type: [String, Number]\n        },\n        value: [Array, String, Number, Object],\n        previewMask: undefined,\n        footer: {\n            type: Boolean,\n            default: true\n        },\n        reload: {\n            type: Boolean,\n            default: true\n        },\n        closeBtn: {\n            type: Boolean,\n            default: true\n        },\n        okBtn: {\n            type: Boolean,\n            default: true\n        },\n\n    },\n    data() {\n        return {\n            fileList: toArray(this.value),\n            unique: uniqueId(),\n            previewVisible: false,\n            frameVisible: false,\n            previewImage: ''\n        }\n    },\n    watch: {\n        value(n) {\n            this.fileList = toArray(n);\n        },\n        fileList(n) {\n            const val = this.maxLength === 1 ? (n[0] || '') : n;\n            this.$emit('input', val);\n            this.$emit('change', val);\n        },\n        src(n) {\n            this.modalVm && (this.modalVm.src = n);\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        closeModel(close) {\n            this.$emit(close ? '$close' : '$ok');\n            if (this.reload) {\n                this.$off('$ok');\n                this.$off('$close');\n            }\n            this.frameVisible = false;\n        },\n        handleCancel() {\n            this.previewVisible = false;\n        },\n\n        showModel() {\n            if (this.disabled || false === this.onOpen()) return;\n            this.frameVisible = true;\n        },\n\n        makeInput() {\n            const props = {\n                type: 'text',\n                value: (this.fileList.map(v => this.getSrc(v))).toString(),\n                readonly: true\n            };\n\n            return <ElInput props={props} key={this.key('input')}>\n                {this.fileList.length ? <i slot=\"suffix\" class=\"el-input__icon el-icon-circle-close\"\n                    on-click={() => this.fileList = []}/> : null}\n                <ElButton icon={this.icon} on={{'click': () => this.showModel()}} slot=\"append\"/>\n            </ElInput>\n        },\n\n        makeGroup(children) {\n            if (!this.maxLength || this.fileList.length < this.maxLength)\n                children.push(this.makeBtn());\n            return <div class={style['fc-upload']} key={this.key('group')}>{...children}</div>\n        },\n\n        makeItem(index, children) {\n            return <div class={style['fc-files']} key={this.key('file' + index)}>{...children}</div>;\n        },\n        valid(field) {\n            if (field !== this.field)\n                throw new Error('frame 无效的字段值');\n        },\n\n        makeIcons(val, index) {\n            if (this.handleIcon !== false || this.allowRemove === true) {\n                const icons = [];\n                if ((this.type !== 'file' && this.handleIcon !== false) || (this.type === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(val, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(val, index));\n\n                return <div class={style['fc-upload-cover']} key={this.key('uc')}>{icons}</div>\n            }\n        },\n        makeHandleIcon(val, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(val)} key={this.key('hi' + index)}/>\n        },\n\n        makeRemoveIcon(val, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.handleRemove(val)} key={this.key('ri' + index)}/>\n        },\n\n        makeFiles() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<i class=\"el-icon-tickets\"\n                    on-click={() => this.handleClick(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeImages() {\n            return this.makeGroup(this.fileList.map((src, index) => {\n                return this.makeItem(index, [<img src={this.getSrc(src)}/>, this.makeIcons(src, index)])\n            }))\n        },\n        makeBtn() {\n            return <div class={style['fc-upload-btn']} on-click={() => this.showModel()} key={this.key('btn')}>\n                <i class={this.icon}/>\n            </div>\n        },\n        handleClick(src) {\n            if (this.disabled) return;\n            return this.onHandle(src);\n        },\n        handleRemove(src) {\n            if (this.disabled) return;\n            if (false !== this.onBeforeRemove(src)) {\n                this.fileList.splice(this.fileList.indexOf(src), 1);\n                this.onRemove(src);\n            }\n        },\n        getSrc(src) {\n            return isUndef(this.srcKey) ? src : src[this.srcKey];\n        },\n        frameLoad(iframe) {\n            this.onLoad(iframe);\n            try {\n                if (this.helper === true) {\n                    iframe['form_create_helper'] = {\n                        close: (field) => {\n                            this.valid(field);\n                            this.closeModel();\n                        },\n                        set: (field, value) => {\n                            this.valid(field);\n                            if (!this.disabled)\n                                this.$emit('input', value);\n\n                        },\n                        get: (field) => {\n                            this.valid(field);\n                            return this.value;\n                        },\n                        onOk: fn => this.$on('$ok', fn),\n                        onClose: fn => this.$on('$close', fn)\n                    };\n\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        },\n        makeFooter() {\n            const {okBtnText, closeBtnText, closeBtn, okBtn, footer} = this.$props;\n\n            if (!footer) return;\n            return <div slot=\"footer\">\n                {closeBtn ? <ElButton\n                    on-click={() => (this.onCancel() !== false && this.closeModel(true))}>{closeBtnText}</ElButton> : null}\n                {okBtn ? <ElButton type=\"primary\"\n                    on-click={() => (this.onOk() !== false && this.closeModel())}>{okBtnText}</ElButton> : null}\n            </div>\n        }\n    },\n    render() {\n        const type = this.type;\n\n        let node;\n        if (type === 'input')\n            node = this.makeInput();\n        else if (type === 'image')\n            node = this.makeImages();\n        else\n            node = this.makeFiles();\n\n        const {width = '30%', height, src, title, modalTitle} = this.$props;\n        this.$nextTick(() => {\n            if (this.$refs.frame) {\n                this.frameLoad(this.$refs.frame.contentWindow || {});\n            }\n        });\n        return <div>{node}\n            <el-dialog modal={this.previewMask} title={modalTitle} visible={this.previewVisible}\n                on-close={this.handleCancel}>\n                <img alt=\"example\" style=\"width: 100%\" src={this.previewImage}/>\n            </el-dialog>\n            <el-dialog props={{width, title, ...this.modal}} visible={this.frameVisible}\n                on-close={() => (this.closeModel(true))}>\n                {(this.frameVisible || !this.reload) ? <iframe ref=\"frame\" src={src} frameBorder=\"0\" style={{\n                    'height': height,\n                    'border': '0 none',\n                    'width': '100%'\n                }}/> : null}\n                {this.makeFooter()}\n            </el-dialog>\n        </div>\n    }\n}\n","import {uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-radio';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        type: String,\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElRadioGroup {...ctx.data}>{ctx.props.options.map((opt, index) => {\n            const props = {...opt};\n            const Type = ctx.props.type === 'button' ? 'ElRadioButton' : 'ElRadio';\n            delete props.value;\n            return <Type {...{props}} key={NAME + Type + index + ctx.unique}/>;\n        }).concat(ctx.chlidren)}</ElRadioGroup>\n    }\n}\n","import {toDefSlot, uniqueId} from '@form-create/utils';\n\nconst NAME = 'fc-elm-select';\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        options: {\n            type: Array,\n            default: () => ([])\n        },\n        unique: {\n            default: () => uniqueId()\n        },\n    },\n    render(h, ctx) {\n        return <ElSelect {...ctx.data}>{ctx.props.options.map((props, index) => {\n\n            const slot = props.slot ? toDefSlot(props.slot, h) : [];\n\n            return <ElOption {...{props}}\n                key={NAME + index + ctx.props.unique}>{slot}</ElOption>\n        }).concat(ctx.chlidren)}</ElSelect>;\n    }\n}","import {toArray} from '@form-create/utils';\n\n\nexport default {\n    name: 'fc-elm-tree',\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        type: {\n            type: String,\n            default: 'checked'\n        },\n        value: {\n            type: [Array, String, Number],\n            default: () => ([])\n        }\n    },\n    watch: {\n        value() {\n            this.setValue();\n        }\n    },\n    methods: {\n        makeTree() {\n            return <ElTree ref=\"tree\" on-check-change={() => this.updateValue()}\n                on-node-click={() => this.updateValue()} {...this.ctx}>{this.children}</ElTree>;\n        },\n        onChange() {\n            this.updateValue()\n        },\n\n        updateValue() {\n            const type = (this.type).toLocaleLowerCase();\n            let value;\n\n            if (type === 'selected')\n                value = this.$refs.tree.getCurrentKey();\n            else\n                value = this.$refs.tree.getCheckedKeys();\n\n            this.$emit('input', value);\n        },\n        setValue() {\n            const type = (this.type).toLocaleLowerCase();\n\n            if (type === 'selected')\n                this.$refs.tree.setCurrentKey(this.value);\n            else\n                this.$refs.tree.setCheckedKeys(toArray(this.value));\n        }\n    },\n    render() {\n        return this.makeTree();\n    },\n    mounted() {\n        this.setValue();\n        this.updateValue();\n    }\n}","import {hasSlot, toArray, toString, uniqueId} from '@form-create/utils';\nimport style from '../../style/index.css';\n\nfunction parseFile(file, i) {\n    return {\n        url: file,\n        name: getFileName(file),\n        uid: i\n    };\n}\n\nfunction getFileName(file) {\n    return toString(file).split('/').pop()\n}\n\nconst NAME = 'fc-elm-upload';\n\nexport default {\n    name: NAME,\n\n    props: {\n        ctx: {\n            type: Object,\n            default: () => ({props: {}})\n        },\n        children: {\n            type: Array,\n            default: () => ([])\n        },\n        onHandle: {\n            type: Function,\n            default(file) {\n                this.previewImage = file.url;\n                this.previewVisible = true;\n            }\n        },\n        uploadType: {\n            type: String,\n            default: 'file'\n        },\n        maxLength: {\n            type: Number,\n            default: 0\n        },\n        allowRemove: {\n            type: Boolean,\n            default: true\n        },\n        previewMask: undefined,\n        modalTitle: String,\n        handleIcon: [String, Boolean],\n        value: [Array, String]\n    },\n    data() {\n        return {\n            uploadList: [],\n            unique: uniqueId(),\n            previewVisible: false,\n            previewImage: ''\n        }\n    },\n    created() {\n        if (this.ctx.props.showFileList === undefined)\n            this.ctx.props.showFileList = false;\n        this.ctx.props.fileList = toArray(this.value).map(parseFile);\n    },\n    watch: {\n        value(n) {\n            if (this.$refs.upload.uploadFiles.every(file => {\n                return !file.status || file.status === 'success';\n            })) {\n                this.$refs.upload.uploadFiles = toArray(n).map(parseFile);\n                this.uploadList = this.$refs.upload.uploadFiles;\n            }\n        },\n        maxLength(n, o) {\n            if (o === 1 || n === 1)\n                this.update();\n        }\n    },\n    methods: {\n        key(unique) {\n            return NAME + unique + this.unique;\n        },\n        isDisabled() {\n            return this.ctx.props.disabled === true;\n        },\n        onRemove(file) {\n            if (this.isDisabled()) return;\n            this.$refs.upload.handleRemove(file);\n        },\n        handleClick(file) {\n            this.onHandle(file);\n        },\n\n        makeDefaultBtn() {\n            return <div class={style['fc-upload-btn']}>\n                <i class=\"el-icon-upload2\"/>\n            </div>\n        },\n        makeItem(file, index) {\n            return this.uploadType === 'image'\n                ? <img src={file.url} key={this.key('img' + index)}/>\n                : <i class=\"el-icon-tickets\" key={this.key('i' + index)}/>\n        },\n        makeRemoveIcon(file, index) {\n            return <i class=\"el-icon-delete\" on-click={() => this.onRemove(file)} key={this.key('ri' + index)}/>;\n        },\n        makeHandleIcon(file, index) {\n            return <i\n                class={(this.handleIcon === true || this.handleIcon === undefined) ? 'el-icon-view' : this.handleIcon}\n                on-click={() => this.handleClick(file)} key={this.key('hi' + index)}/>;\n        },\n        makeProgress(file, index) {\n            return <ElProgress props={{percentage: file.percentage, type: 'circle', width: 52}} style=\"margin-top:2px;\"\n                key={this.key('pg' + index)}/>\n        },\n        makeIcons(file, index) {\n            const icons = [];\n            if (this.allowRemove || this.handleIcon !== false) {\n                if ((this.uploadType !== 'file' && this.handleIcon !== false) || (this.uploadType === 'file' && this.handleIcon))\n                    icons.push(this.makeHandleIcon(file, index));\n                if (this.allowRemove)\n                    icons.push(this.makeRemoveIcon(file, index));\n\n                return <div class={style['fc-upload-cover']}>{icons}</div>;\n            }\n        },\n        makeFiles() {\n            return this.uploadList.map((file, index) => <div key={this.key(index)}\n                class={style['fc-files']}>{(file.percentage !== undefined && file.status !== 'success') ? this.makeProgress(file, index) : [this.makeItem(file, index), this.makeIcons(file, index)]}</div>);\n        },\n        makeUpload() {\n            return <ElUpload ref=\"upload\"\n                style={{display: 'inline-block'}} {...this.ctx}\n                key={this.key('upload')}>{this.children}</ElUpload>;\n        },\n        initChildren() {\n            if (!hasSlot(this.children, 'default'))\n                this.children.push(this.makeDefaultBtn());\n        },\n        update() {\n            let files = this.$refs.upload.uploadFiles.map((file) => file.url).filter((url) => url !== undefined);\n            this.$emit('input', this.maxLength === 1 ? (files[0] || '') : files);\n        },\n        handleCancel() {\n            this.previewVisible = false;\n        },\n    },\n    render() {\n        const isShow = (!this.maxLength || this.maxLength > this.uploadList.length);\n\n        if (this.$refs.upload) {\n            if (this.ctx.props.showFileList === undefined)\n                this.ctx.props.showFileList = this.$refs.upload.showFileList;\n            this.ctx.props.fileList = this.$refs.upload.fileList;\n        }\n\n        this.initChildren();\n\n        return (\n            <div class={{\n                [style['fc-upload']]: true,\n                [style['fc-hide-btn']]: !isShow\n            }}>{[this.ctx.props.showFileList ? [] : this.makeFiles(), this.makeUpload()]}\n                <el-dialog modal={this.previewMask} title={this.modalTitle} visible={this.previewVisible}\n                    on-close={this.handleCancel}>\n                    <img alt=\"example\" style=\"width: 100%\" src={this.previewImage}/>\n                </el-dialog>\n            </div>);\n    },\n    mounted() {\n        this.uploadList = this.$refs.upload.uploadFiles;\n        this.$watch(() => this.$refs.upload.uploadFiles, () => {\n            this.update();\n        }, {deep: true});\n    }\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            this.formCreate.mounted();\n            this.$emit('input', this.$f);\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, deepExtend, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = deepExtend({}, this._data);\n        return clone;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import {deepExtend, isUndef} from '@form-create/utils';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nexport function toJson(obj) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return PREFIX + val + SUFFIX;\n    });\n}\n\nfunction makeFn(fn) {\n    return eval('(function(){return ' + fn + ' })()')\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v) || !v.indexOf) return v;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                return makeFn(v.indexOf('function') === -1 && v.indexOf('(') !== 0 ? 'function ' + v : v);\n            } else if (!mode && v.indexOf('function') > -1)\n                return makeFn(v)\n        } catch (e) {\n            console.error(`[form-create]解析失败:${v}`);\n            return undefined;\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\nexport function copyRule(rule, mode) {\n    return copyRules([rule], mode)[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], rules, mode);\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.updateKey(id);\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n        this.parent = null;\n\n        this.update(handle);\n        this.init();\n    }\n\n    updateKey(id, parent) {\n        this.key = 'key_' + id;\n        parent && this.parent && this.parent.updateKey(uniqueId(), parent);\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) {\n            if (clear && parser.parent)\n                this.clearCache(parser.parent, clear);\n            return;\n        }\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            return this.renderParser(this.$handle.parsers[id]);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (parser.type === 'hidden') return;\n        if ((!parser.isDef || parser.rule.native !== false) && parser.rule.hidden) return;\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        const model = this.$handle.modelEvent(parser);\n        if (!custom)\n            data.on(model.event || model, (value) => {\n                this.onInput(parser, value);\n            }).props(model.prop || 'value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (!this.$handle.isset(child) && child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject, isUndef} from '@form-create/utils';\nimport {toJson} from './util';\nimport {getRule} from './handle';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在\\nrule: ` + JSON.stringify(getRule(rule)) + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在\\nrule: ` + JSON.stringify(getRule(rule)) + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm).filter(field => {\n                    const sub = subForm[field];\n                    return Array.isArray(sub) ? sub.length : !isUndef(sub);\n                }), len = keys.length, subLen;\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n                if (parser.type === 'hidden') {\n                    parser.rule.value = parser.defaultValue;\n                    return;\n                }\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = this.fc = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n        this.issetRule = [];\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    isset(rule) {\n        return this.issetRule.indexOf(rule) > -1;\n    }\n\n    loadRule(rules, parent) {\n        rules.map((_rule, index) => {\n            if (parent && isString(_rule)) return;\n\n            if (!_rule || !_rule.type)\n                return console.error('未定义生成规则的 type 字段\\nrule: ' + JSON.stringify(_rule ? getRule(_rule) : _rule) + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (!parser.deleted && (parser.vm !== this.vm || this.parsers[parser.id])) {\n                    rules[index] = _rule = copyRule(_rule);\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field)) {\n                this.issetRule.push(_rule);\n                return console.error(`${rule.field} 字段已存在\\nrule: ` + JSON.stringify(rule) + errMsg());\n            }\n            parser.parent = parent || null;\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, parser);\n            }\n\n            if (!parent) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                    this.vm.$emit('set-value', parser.field, value, this.fCreateApi);\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        return new (this.fc.parsers[toString(rule.type).toLocaleLowerCase()] || BaseParser)(this, rule, '' + uniqueId());\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (!({}).hasOwnProperty.call(rule, k)) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const _fieldKey = toLine(`${emitKey}-${eventName}`);\n            const fieldKey = _fieldKey.replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n                this.vm.$emit('emit-event', fieldKey, ...arg);\n                if (_fieldKey !== fieldKey) {\n                    this.vm.$emit(_fieldKey, ...arg);\n                    this.vm.$emit('emit-event', fieldKey, ...arg);\n                }\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        return this.fieldList[id] || this.customData[id] || this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'hidden' && (!parser.isDef || parser.rule.native !== false))\n                        parser.updateKey(uniqueId(), true);\n                    else if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value, this.fCreateApi)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                //TODO 位置可自定义\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                parser.parent && this.$render.clearCache(parser.parent);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field, name} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (name && this.customData[name]) {\n            $del(this.customData, name);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser, true)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue, options) {\n            if (options && isPlainObject(options))\n                margeGlobal(globalConfig, options);\n\n            if (Vue._installedFormCreate === true) return;\n            Vue._installedFormCreate = true;\n            _vue = Vue;\n\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install: FormCreate.install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser, field = 'col') {\n        let col = parser.rule[field] || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'][field] || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type][field] || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType][field] || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n","import {copyRules} from '@form-create/core';\nimport {deepExtendArgs} from '@form-create/utils';\n\nconst NAME = 'fc-elm-group';\n\nexport default {\n    name: NAME,\n    props: {\n        rule: Object,\n        rules: Array,\n        expand: Number,\n        button: {\n            type: Boolean,\n            default: true\n        },\n        formCreate: Object,\n        max: {\n            type: Number,\n            default: 0\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        value: {\n            type: Array,\n            default: () => []\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        fontSize: {\n            type: Number,\n            default: 28\n        }\n    },\n    data() {\n        return {\n            option: deepExtendArgs({}, this.formCreate.config || {}, {\n                submitBtn: false,\n                resetBtn: false,\n                mounted: undefined,\n                onReload: undefined\n            }),\n            len: 0,\n            cacheRule: {},\n            group$f: {}\n        }\n    },\n    computed: {\n        formRule() {\n            if (this.rule) return [this.rule];\n            else if (this.rules) return this.rules;\n            return [];\n        }\n    },\n    watch: {\n        disabled(n) {\n            const lst = this.group$f;\n            Object.keys(lst).forEach(k => {\n                lst[k].disabled(n);\n            })\n        },\n        value: {\n            handler(n) {\n                let keys = Object.keys(this.cacheRule), total = keys.length, len = total - n.length;\n                if (len < 0) {\n                    for (let i = len; i < 0; i++) {\n                        this.addRule();\n                    }\n                    for (let i = 0; i < total; i++) {\n                        this.setValue(this.group$f[keys[i]], n[i]);\n                    }\n                } else {\n                    if (len > 0) {\n                        for (let i = 0; i < len; i++) {\n                            this.removeRule(keys[total - i - 1]);\n                        }\n                        this.subForm();\n                    }\n\n                    n.forEach((val, i) => {\n                        this.setValue(this.group$f[keys[i]], n[i]);\n                    });\n                }\n            },\n            deep: true\n        }\n    },\n    methods: {\n        formData() {\n            const n = Object.keys(this.group$f).map(key => {\n                return this.group$f[key].formData();\n            })\n            this.$emit('input', n);\n            this.$emit('change', n);\n        },\n        setValue($f, value) {\n            if (this.rule) {\n                const fields = $f.fields();\n                if (!fields[0]) return;\n                $f.setValue(fields[0], value);\n            } else {\n                $f.setValue(value);\n            }\n        },\n        addRule(emit) {\n            const rule = this.copyRule();\n            this.$set(this.cacheRule, ++this.len, rule);\n            if (emit)\n                this.$nextTick(() => this.$emit('add', rule, Object.keys(this.cacheRule).length - 1));\n        },\n        add$f(i, key, $f) {\n            this.group$f[key] = $f;\n            this.setValue($f, this.value[i]);\n            this.subForm();\n            this.$emit('itemMounted', $f, Object.keys(this.cacheRule).indexOf(key));\n            this.formData();\n        },\n        subForm() {\n            this.$emit('fc.subForm', Object.keys(this.group$f).map(k => this.group$f[k]));\n        },\n        removeRule(key, emit) {\n            const index = Object.keys(this.cacheRule).indexOf(key);\n            this.$delete(this.cacheRule, key);\n            this.$delete(this.group$f, key);\n            if (emit)\n                this.$nextTick(() => this.$emit('remove', index));\n        },\n        copyRule() {\n            return copyRules(this.formRule);\n        },\n        add() {\n            (!this.disabled) && this.addRule(true);\n        },\n        del(key) {\n            if (this.disabled) return;\n            this.removeRule(key, true);\n            this.subForm();\n            this.formData();\n        },\n        addIcon(key) {\n            return <i key={`a${key}`} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:${this.fontSize}px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer'};`}\n                on-click={this.add}/>;\n        },\n        delIcon(key) {\n            return <i key={`d${key}`} class=\"el-icon-remove-outline\"\n                style={`font-size:${this.fontSize}px;cursor:${this.disabled ? 'not-allowed;color:#c9cdd4' : 'pointer;color:#606266'};`}\n                on-click={() => this.del(key)}/>;\n        },\n        makeIcon(total, index, key) {\n            if (this.$scopedSlots.button) return this.$scopedSlots.button({\n                total,\n                index,\n                vm: this,\n                key,\n                del: () => this.del(key),\n                add: this.add\n            });\n            if (index === 0) {\n                return [(this.max !== 0 && total >= this.max) ? null : this.addIcon(key), (this.min === 0 || total > this.min) ? this.delIcon(key) : null];\n            } else if (index >= this.min) {\n                return this.delIcon(key);\n            }\n        },\n        emitEvent(name, args, index, key) {\n            this.$emit(name, ...args, this.group$f[key], index);\n        }\n    },\n    created() {\n        const d = (this.expand || 0) - this.value.length;\n        if (d > 0) {\n            for (let i = 0; i < d; i++) {\n                this.value.push({});\n            }\n        }\n        for (let i = 0; i < this.value.length; i++) {\n            this.addRule();\n        }\n    },\n    render() {\n        const keys = Object.keys(this.cacheRule);\n        const button = this.button;\n        return keys.length === 0 ?\n            (this.$scopedSlots.default ? (this.$scopedSlots.default({\n                vm: this,\n                add: this.add\n            })) : <i key={'a_def'} class=\"el-icon-circle-plus-outline\"\n                style={`font-size:${this.fontSize}px;vertical-align:middle;color:${this.disabled ? '#c9cdd4;cursor: not-allowed' : '#606266;cursor:pointer'};`}\n                on-click={this.add}/>) :\n            <div key={'con'}>{keys.map((key, index) => {\n                const rule = this.cacheRule[key];\n                return <ElRow align=\"middle\" type=\"flex\" key={key}\n                    style=\"background-color:#f5f7fa;padding:10px;border-radius:5px;margin-bottom:10px;\">\n                    <ElCol span={button ? 20 : 24}><ElFormItem><FormCreate\n                        on-change={this.formData}\n                        on-set-value={this.formData}\n                        on-on-reload={this.formData}\n                        on-emit-event={(name, ...args) => this.emitEvent(name, args, index, key)}\n                        on-mounted={($f) => this.add$f(index, key, $f)} rule={rule}\n                        option={this.option}/></ElFormItem></ElCol>\n                    {button ? <ElCol span={2} pull={1} push={1}>{this.makeIcon(keys.length, index, key)}</ElCol> : null}\n                </ElRow>\n            })}</div>\n    }\n}\n","import checkbox from './checkbox';\nimport frame from './frame';\nimport radio from './radio';\nimport select from './select';\nimport tree from './tree';\nimport upload from './upload';\nimport group from './group';\n\n\nexport default [\n    checkbox,\n    frame,\n    radio,\n    select,\n    tree,\n    upload,\n    group\n]\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this, true).get();\n        return this.vNode.checkbox({\n            props: {\n                ctx: data,\n                type: data.props.type,\n                options: this.rule.options,\n                value: this.$handle.getFormData(this),\n                children\n            },\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'checkbox';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nconst DEFAULT_FORMATS = {\n    date: 'yyyy-MM-dd',\n    month: 'yyyy-MM',\n    datetime: 'yyyy-MM-dd HH:mm:ss',\n    week: 'yyyywWW',\n    timerange: 'HH:mm:ss',\n    daterange: 'yyyy-MM-dd',\n    monthrange: 'yyyy-MM',\n    datetimerange: 'yyyy-MM-dd HH:mm:ss',\n    year: 'yyyy'\n};\n\nexport default class Parser extends BaseParser {\n\n    init() {\n        const props = this.rule.props;\n        if (!props.valueFormat) props.valueFormat = DEFAULT_FORMATS[props.type] || DEFAULT_FORMATS['date'];\n    }\n}\n","import parser from './parser';\n\nconst name = 'datePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        const data = this.$render.inputVData(this).props('field', this.field);\n\n        return this.vNode.frame(data, children);\n    }\n\n    closeModel() {\n        this.el.closeModel && this.el.closeModel();\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'frame';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nconst name = 'hidden';\n\nclass parser extends BaseParser {\n    render() {\n        return [];\n    }\n}\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {$set} from '@form-create/utils';\n\n\nexport default class Parser extends BaseParser {\n    init() {\n        let {props} = this.rule;\n        if (props && props.autosize && props.autosize.minRows)\n            $set(props, 'rows', props.autosize.minRows || 2);\n    }\n}\n","import parser from './parser';\n\nconst name = 'input';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        return this.rule.options.filter((opt) => opt.value === value).reduce((initial, opt) => opt.label, '')\n    }\n\n    toValue(parseValue) {\n        return this.rule.options.filter((opt) => opt.label === parseValue).reduce((initial, opt) => opt.value, '')\n    }\n\n    render(children) {\n        return this.vNode.radio(this.$render.inputVData(this).props({\n            'options': this.rule.options,\n        }), children);\n    }\n\n}","import parser from './parser';\n\nconst name = 'radio';\n\nexport default {parser, name};","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n        return this.vNode.select(this.$render.inputVData(this).props('options', this.rule.options), children);\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'select';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n    toFormValue(value) {\n        let rule = this.rule, isArr = Array.isArray(value), props = rule.props, min = props.min || 0,\n            parseValue;\n        if (props.range === true) {\n            parseValue = isArr ? value : [min, (parseFloat(value) || min)];\n        } else {\n            parseValue = isArr ? (parseFloat(value[0]) || min) : parseFloat(value);\n        }\n        return parseValue;\n    }\n\n}\n","import parser from './parser';\n\nconst name = 'slider';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class parser extends BaseParser {\n    render(children) {\n        return this.vNode.switch(this.$render.inputVData(this).get(), children);\n    }\n}\n","import parser from './parser';\n\nconst name = 'switch';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\nexport default class Parser extends BaseParser {\n\n    init() {\n        const props = this.rule.props;\n        if (!props.valueFormat) props.valueFormat = 'HH:mm:ss';\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'timePicker';\n\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\nimport {isUndef, $set} from '@form-create/utils';\n\nexport default class Parser extends BaseParser {\n\n    init() {\n        const props = this.rule.props;\n        if (isUndef(props.nodeKey)) $set(props, 'nodeKey', 'id');\n        if (isUndef(props.props)) $set(props, 'props', {\n            label: 'title'\n        });\n    }\n\n    render(children) {\n        const data = this.$render.parserToData(this).get();\n        return this.vNode.tree({\n            props: {\n                ctx: data,\n                children,\n                value: this.$handle.getFormData(this),\n                type: data.props.type\n            },\n            ref: this.refName,\n            key: this.key,\n            on: {\n                input: (value) => {\n                    this.$render.onInput(this, value);\n                }\n            }\n        });\n    }\n}\n","import parser from './parser';\n\nconst name = 'tree';\n\nexport default {parser, name};\n","import {BaseParser} from '@form-create/core';\n\n\nexport default class Parser extends BaseParser {\n\n    render(children) {\n\n        const ctx = this.$render.parserToData(this).get();\n        const {key, refName} = this;\n        delete ctx.props.fileList;\n        const props = {\n            uploadType: ctx.props.uploadType,\n            maxLength: ctx.props.limit,\n            modalTitle: ctx.props.modalTitle,\n            handleIcon: ctx.props.handleIcon,\n            onHandle: ctx.props.onHandle,\n            allowRemove: ctx.props.allowRemove,\n            previewMask: ctx.props.previewMask,\n            value: this.$handle.getFormData(this),\n            ctx,\n            children\n        };\n        return this.vNode.upload({\n            props,\n            key,\n            ref: refName,\n            on: {\n                input: (n) => {\n                    this.$render.onInput(this, n);\n                }\n            }\n        });\n    }\n}\n\n","import parser from './parser';\n\nconst name = 'upload';\n\n\nexport default {parser, name};\n","import checkbox from './checkbox';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport hidden from './hidden';\nimport input from './input';\nimport radio from './radio';\nimport select from './select';\nimport slider from './slider';\nimport iswitch from './switch';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nexport default [\n    checkbox,\n    datePicker,\n    frame,\n    hidden,\n    input,\n    radio,\n    select,\n    slider,\n    iswitch,\n    timePicker,\n    tree,\n    upload\n]","export default function getConfig() {\n    return {\n        form: {\n            inline: false,\n            labelPosition: 'right',\n            labelSuffix: undefined,\n            hideRequiredAsterisk: false,\n            labelWidth: '125px',\n            showMessage: true,\n            inlineMessage: false,\n            statusIcon: false,\n            validateOnRuleChange: true,\n            disabled: false,\n            size: undefined,\n        },\n        row: {\n            gutter: 0,\n            type: undefined,\n            align: undefined,\n            justify: undefined,\n            tag: 'div'\n        },\n        info: {\n            type: 'popover',\n            trigger: 'hover',\n            placement: 'top-start',\n            icon: 'el-icon-warning'\n        },\n        submitBtn: {\n            type: 'primary',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-upload',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '提交',\n            show: true,\n            col: undefined,\n            click: undefined,\n        },\n        resetBtn: {\n            type: 'default',\n            size: 'medium',\n            plain: false,\n            round: false,\n            circle: false,\n            loading: false,\n            disabled: false,\n            icon: 'el-icon-refresh',\n            width: '100%',\n            autofocus: false,\n            nativeType: 'button',\n            innerText: '重置',\n            show: false,\n            col: undefined,\n            click: undefined,\n        },\n    };\n}\n","export default {\n    button: 'el-button',\n    icon: 'i',\n    slider: 'el-slider',\n    rate: 'el-rate',\n    upload: 'fc-elm-upload',\n    cascader: 'el-cascader',\n    colorPicker: 'el-color-picker',\n    timePicker: 'el-time-picker',\n    datePicker: 'el-date-picker',\n    'switch': 'el-switch',\n    select: 'fc-elm-select',\n    checkbox: 'fc-elm-checkbox',\n    radio: 'fc-elm-radio',\n    inputNumber: 'el-input-number',\n    input: 'el-input',\n    formItem: 'el-form-Item',\n    form: 'el-form',\n    frame: 'fc-elm-frame',\n    col: 'el-col',\n    row: 'el-row',\n    tree: 'fc-elm-tree',\n    autoComplete: 'el-autocomplete',\n    group: 'fc-elm-group',\n}\n","import {isFunction, preventDefault, toString, isString, isType} from '@form-create/utils';\nimport {BaseForm} from '@form-create/core';\nimport style from '../style/index.css';\n\nconst upperCaseReg = /[A-Z]/;\n\nexport function isAttr(name, value) {\n    return (!upperCaseReg.test(name) && (isString(value) || isType(value, 'Number')))\n}\n\nfunction isTooltip(info) {\n    return info.type === 'tooltip';\n}\n\nexport default class Form extends BaseForm {\n\n    inputVData(parser) {\n        const props = parser.rule.props || {};\n        parser.vData.attrs(Object.keys(props).reduce((initial, val) => {\n            if (isAttr(val, props[val]))\n                initial[val] = props[val];\n            return initial;\n        }, {}));\n        if (!props.size && this.options.form.size)\n            parser.vData.props('size', this.options.form.size);\n    }\n\n    validate(call) {\n        this.getFormRef().validate((valid) => {\n            call && call(valid);\n        });\n    }\n\n    validateField(field, call) {\n        this.getFormRef().validateField(field, call);\n    }\n\n    resetField(parser) {\n        this.vm.$refs[parser.formItemRefName].resetField();\n    }\n\n    clearValidateState(parser) {\n        const fItem = this.vm.$refs[parser.formItemRefName];\n        if (fItem) {\n            fItem.validateMessage = '';\n            fItem.validateState = '';\n        }\n    }\n\n    beforeRender() {\n        this.propsData = this.vData.props(this.options.form).props({\n            model: this.$handle.formData,\n            rules: this.$handle.validate,\n            key: 'form' + this.unique\n        }).ref(this.refName).nativeOn({submit: preventDefault}).class(this.options.form.className).class('form-create', true).key(this.unique).get();\n    }\n\n    render(vn) {\n        if (vn.length > 0)\n            vn.push(this.makeFormBtn());\n\n        return this.vNode.form(this.propsData, [this.options.row === false ? vn : this.makeRow(vn)]);\n    }\n\n    makeRow(vn) {\n        const _class = {}, row = this.options.row || {};\n\n        if (row.class) _class[row.class] = true;\n        return this.vNode.row({props: row || {}, key: 'fr' + this.unique, class: _class}, vn)\n    }\n\n    container(child, parser) {\n        return this.makeFormItem(parser, child);\n    }\n\n    makeFormItem(parser, child) {\n        let fItemUnique = `fItem${parser.key}${this.unique}`,\n            {rule, field, formItemRefName} = parser,\n            col = this.getGetCol(parser),\n            labelWidth = (!col.labelWidth && !rule.title) ? 0 : col.labelWidth, {inline, col: _col} = this.propsData.props,\n            propsData = this.vData.props({\n                prop: field,\n                // label: rule.title,\n                // labelFor: unique,\n                rules: rule.validate,\n                labelWidth: toString(labelWidth),\n                required: rule.props.required\n            }).key(fItemUnique).ref(formItemRefName).class(rule.className).get(),\n            node = this.vNode.formItem(propsData, [child, this.makeFormPop(parser, fItemUnique)]);\n        return (inline === true || _col === false) ? node : this.makeCol(col, parser, fItemUnique, [node]);\n    }\n\n    makeFormPop({rule}, unique) {\n        if (rule.title) {\n            const titleProp = isString(rule.title) ? {title: rule.title} : rule.title;\n            const info = this.options.info || {}, svn = [titleProp.title || ''];\n            if (rule.info) {\n                svn.push(this.vNode.make(isTooltip(info) ? 'el-tooltip' : 'el-popover', {\n                    props: {...info, content: rule.info},\n                    key: `pop${unique}`\n                }, [\n                    this.vNode.icon({\n                        class: [info.icon || 'el-icon-warning'],\n                        slot: isTooltip(info) ? 'default' : 'reference'\n                    })\n                ]));\n            }\n            return this.vNode.make('span', {...titleProp, slot: 'label'}, svn);\n        }\n    }\n\n    makeCol(col, parser, fItemUnique, VNodeFn) {\n        if (col.span === undefined)\n            col.span = 24;\n        const cls = {\n            [style.__fc_h]: !!parser.rule.hidden,\n            [style.__fc_v]: !!parser.rule.visibility\n        };\n        if (col.class) cls[col.class] = true;\n        return this.vNode.col({\n            props: col, class: cls, key: `${fItemUnique}col1`\n        }, VNodeFn);\n    }\n\n    makeFormBtn() {\n        let btn = [],\n            submitBtnShow = false !== this.vm.buttonProps && false !== this.vm.buttonProps.show,\n            resetBtnShow = false !== this.vm.resetProps && false !== this.vm.resetProps.show;\n        if (submitBtnShow)\n            btn.push(this.makeSubmitBtn(resetBtnShow ? 19 : 24));\n        if (resetBtnShow)\n            btn.push(this.makeResetBtn(4));\n\n        return this.propsData.props.inline === true\n            ? btn\n            : (btn.length ? this.vNode.col({\n                props: {span: 24},\n                key: `${this.unique}col2`\n            }, btn) : []);\n    }\n\n    makeResetBtn(span) {\n        const resetBtn = this.vm.resetProps,\n            props = resetBtn.col || {span: span, push: 1};\n\n        return this.vNode.col({props: props, key: `${this.unique}col3`}, [\n            this.vNode.button({\n                key: `frsbtn${this.unique}`, props: resetBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(resetBtn.click)\n                            ? resetBtn.click(fApi)\n                            : fApi.resetFields();\n                    }\n                }, style: {width: resetBtn.width}\n            }, [resetBtn.innerText])\n        ]);\n    }\n\n    makeSubmitBtn(span) {\n        const submitBtn = this.vm.buttonProps,\n            props = submitBtn.col || {span: span};\n\n        return this.vNode.col({props: props, key: `${this.unique}col4`}, [\n            this.vNode.button({\n                key: `fbtn${this.unique}`, props: submitBtn, on: {\n                    'click': () => {\n                        const fApi = this.$handle.fCreateApi;\n                        isFunction(submitBtn.click)\n                            ? submitBtn.click(fApi)\n                            : fApi.submit();\n                    }\n                }, style: {width: submitBtn.width}\n            }, [submitBtn.innerText])\n        ]);\n    }\n}\n","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'datePicker';\n\nexport default ['year', 'month', 'date', 'dates', 'week', 'datetime', 'datetimeRange', 'dateRange'].reduce((initial, type) => {\n    initial[type] = creatorTypeFactory(name, type.toLowerCase());\n    return initial\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'frame';\n\nconst types = {\n    frameInputs: ['input', 0],\n    frameFiles: ['file', 0],\n    frameImages: ['image', 0],\n    frameInputOne: ['input', 1],\n    frameFileOne: ['file', 1],\n    frameImageOne: ['image', 1]\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({type: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\n\nmaker.frameInput = maker.frameInputs;\nmaker.frameFile = maker.frameFiles;\nmaker.frameImage = maker.frameImages;\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'input';\n\nconst maker = ['password', 'url', 'email', 'text', 'textarea'].reduce((maker, type) => {\n    maker[type] = creatorTypeFactory(name, type);\n    return maker;\n}, {});\n\nmaker.idate = creatorTypeFactory(name, 'date');\n\nexport default maker;","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'select';\n\nexport default {\n    selectMultiple: creatorTypeFactory(name, true, 'multiple'),\n    selectOne: creatorTypeFactory(name, false, 'multiple'),\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'slider';\n\nexport default {\n    sliderRange: creatorTypeFactory(name, true, 'range')\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'timePicker';\n\nexport default {\n    time: creatorTypeFactory(name, (m) => m.props.isRange = false),\n    timeRange: creatorTypeFactory(name, (m) => m.props.isRange = true)\n};","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'tree';\n\nconst types = {'treeSelected': 'selected', 'treeChecked': 'checked'};\n\nexport default Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, types[key]);\n    return maker;\n}, {});","import {creatorTypeFactory} from '@form-create/core';\n\nconst name = 'upload';\n\nconst types = {\n    image: ['image', 0],\n    file: ['file', 0],\n    uploadFileOne: ['file', 1],\n    uploadImageOne: ['image', 1],\n};\n\nconst maker = Object.keys(types).reduce((maker, key) => {\n    maker[key] = creatorTypeFactory(name, m => m.props({uploadType: types[key][0], maxLength: types[key][1]}));\n    return maker\n}, {});\n\nmaker.uploadImage = maker.image;\nmaker.uploadFile = maker.file;\n\nexport default maker;","import {creatorFactory} from '@form-create/core';\nimport datePicker from './datePicker';\nimport frame from './frame';\nimport input from './input';\nimport select from './select';\nimport slider from './slider';\nimport timePicker from './timePicker';\nimport tree from './tree';\nimport upload from './upload';\n\nconst maker = {...datePicker, ...frame, ...input, ...select, ...slider, ...timePicker, ...tree, ...upload},\n    names = ['autoComplete', 'cascader', 'colorPicker', 'datePicker', 'frame', 'inputNumber', 'radio', 'rate', 'group'];\n\nnames.forEach(name => {\n    maker[name] = creatorFactory(name);\n});\n\nmaker.auto = maker.autoComplete;\nmaker.number = maker.inputNumber;\nmaker.color = maker.colorPicker;\nmaker.hidden = (field, value) => creatorFactory('hidden')('', field, value);\n\nexport default maker;\n","import components from '../components';\nimport parsers from '../parsers';\nimport getConfig from './config';\nimport nodes from './nodes';\nimport formRender from './form';\nimport createFormCreate, {VNode} from '@form-create/core';\nimport makers from '../makers';\n\nVNode.use(nodes);\n\nexport const drive = {\n    ui: process.env.UI,\n    version: `${process.env.VERSION}`,\n    formRender,\n    components,\n    parsers,\n    makers,\n    getConfig,\n};\n\nconst {FormCreate, install} = createFormCreate(drive);\n\nif (typeof window !== 'undefined') {\n    window.formCreate = FormCreate;\n    if (window.Vue) {\n        install(window.Vue);\n    }\n}\n\nexport default FormCreate;\n","import FormCreate from './core/index';\n\n\nconst maker = FormCreate.maker;\n\nexport {maker}\n\nexport default FormCreate;\n"],"names":["_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","isArray","_toString","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","substr","toArray","isElement","nodeType","deepExtend","origin","mode","isArr","clone","nst","undefined","_clone","getRule","deepExtendArgs","lst","forEach","id","uniqueId","toDefSlot","slot","$h","preventDefault","hasSlot","slotName","some","child","data","errMsg","NAME","props","options","default","ctx","watch","update","trueValue","unique","methods","onInput","n","$emit","filter","opt","label","map","_this","option","created","render","_this2","index","Type","chlidren","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","helper","Boolean","disabled","src","required","icon","width","height","maxLength","Number","okBtnText","closeBtnText","modalTitle","handleIcon","title","allowRemove","onOpen","Function","onOk","onCancel","onLoad","onBeforeRemove","onRemove","onHandle","previewImage","getSrc","previewVisible","modal","srcKey","previewMask","footer","reload","closeBtn","okBtn","fileList","frameVisible","modalVm","closeModel","close","$off","handleCancel","showModel","makeInput","readonly","makeGroup","push","makeBtn","makeItem","valid","Error","makeIcons","icons","makeHandleIcon","makeRemoveIcon","handleClick","_this3","handleRemove","makeFiles","_this4","makeImages","_this5","_this6","splice","frameLoad","iframe","_this7","get","$on","onClose","console","log","makeFooter","$props","_this8","node","$nextTick","_this9","$refs","frame","contentWindow","functional","setValue","makeTree","updateValue","onChange","toLocaleLowerCase","tree","getCurrentKey","getCheckedKeys","setCurrentKey","setCheckedKeys","mounted","parseFile","file","url","getFileName","uid","split","pop","uploadType","uploadList","showFileList","upload","uploadFiles","every","status","o","isDisabled","makeDefaultBtn","makeProgress","percentage","makeUpload","display","initChildren","files","isShow","$watch","deep","formCreateName","$FormCreate","FormCreate","components","componentName","rule","formData","buttonProps","resetProps","$f","formCreate","_buttonProps","_resetProps","_refresh","handle","reloadRule","beforeCreate","$options","propsData","api","beforeDestroy","$render","clearCacheAll","objects","initial","arrA","arrB","event","hook","fn1","fn2","defVData","on","VData","init","_data","classList","merge","class","keys","keyList","objList","obj","vdataField","baseRule","validate","col","control","emit","template","emitPrefix","native","info","creatorFactory","Creator","creatorTypeFactory","typeName","maker","constructor","keyAttrs","attr","objAttrs","arrAttrs","PREFIX","SUFFIX","toJson","_isVue","__inject","__origin","__emit","makeFn","eval","parseJson","json","parse","k","error","enumerable","writable","configurable","copyRule","copyRules","rules","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","r","defineProperties","find","findField","model","parseVData","domProps","innerHTML","getVNode","VNode","setVm","$createElement","nodeName","VNodeFn","Node","context","nodes","use","fragment","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","updateKey","root","ctrlRule","modelEvent","parent","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","hidden","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","subForm","addSubForm","prop","getFormData","inputVData","__fc__","removeField","isset","vdata","fApi","Api","tidyFields","fields","all","fieldList","getValue","changeValue","changeField","getParser","__origin__","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hiddenStatus","visibility","visibilityStatus","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","once","$once","off","trigger","args","callback","subLen","state","___this","sub","len","validFn","clearValidateState","validateField","resetFields","resetField","refreshControl","defaultValue","submit","successFn","failFn","clearSub","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","issetRule","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","_fieldKey","fieldKey","run","validateControl","submitBtn","immediate","controls","getControl","removeControl","addParserWitch","mountedParser","onReload","delParser","unWatch","className","__field__","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","_installedFormCreate","$formCreate","mount","remove","makers","install","BaseForm","mCol","pCol","expand","button","max","min","fontSize","cacheRule","group$f","computed","formRule","handler","total","addRule","removeRule","add$f","$delete","add","del","addIcon","delIcon","makeIcon","$scopedSlots","checkbox","radio","select","group","input","DEFAULT_FORMATS","date","month","datetime","week","timerange","daterange","monthrange","datetimerange","year","Parser","valueFormat","autosize","minRows","parseValue","range","parseFloat","switch","nodeKey","limit","datePicker","slider","iswitch","timePicker","inline","labelPosition","labelSuffix","hideRequiredAsterisk","labelWidth","showMessage","inlineMessage","statusIcon","validateOnRuleChange","size","row","gutter","align","justify","tag","placement","plain","round","circle","autofocus","nativeType","innerText","click","rate","cascader","colorPicker","inputNumber","formItem","autoComplete","upperCaseReg","isAttr","test","isTooltip","Form","attrs","getFormRef","fItem","validateMessage","validateState","nativeOn","makeFormBtn","makeRow","_class","makeFormItem","fItemUnique","getGetCol","_col","makeFormPop","makeCol","titleProp","svn","content","span","cls","__fc_h","__fc_v","submitBtnShow","resetBtnShow","makeSubmitBtn","makeResetBtn","types","frameInputs","frameFiles","frameImages","frameInputOne","frameFileOne","frameImageOne","m","frameInput","frameFile","frameImage","idate","selectMultiple","selectOne","sliderRange","time","isRange","timeRange","image","uploadFileOne","uploadImageOne","uploadImage","uploadFile","names","auto","number","color","process"],"mappings":";;;;;;uyFAAa,SAASA,kBAAkBA,SAASC,OAAOC,QAAQ,SAASC,OAAO,IAAIC,EAAEC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,QAAQ,IAAIG,KAAKJ,EAAEE,UAAUD,GAAKJ,OAAOQ,UAAUC,eAAeC,KAAKP,EAAEI,KAAKL,EAAEK,GAAGJ,EAAEI,WAAWL,IAAYS,MAAMC,KAAKP,kEAAW,IAAIQ,YAAY,CAAC,QAAQ,QAAQ,YAAYC,aAAa,CAAC,QAAQ,QAAQ,cAAcC,gBAAgB,CAAC,KAAK,YAAYC,cAAc,SAASd,UAAUA,EAAEe,OAAO,SAASb,EAAEF,OAAO,IAAIC,KAAKD,KAAME,EAAED,GAAkB,IAAI,IAAIU,YAAYK,QAAQf,GAAGC,EAAED,GAAGJ,SAAS,GAAGK,EAAED,GAAGD,EAAEC,SAAS,IAAI,IAAIW,aAAaI,QAAQf,GAAG,KAAKI,EAAEH,EAAED,aAAagB,MAAMf,EAAED,GAAG,CAACC,EAAED,IAAIiB,EAAElB,EAAEC,aAAagB,MAAMjB,EAAEC,GAAG,CAACD,EAAEC,IAAIC,EAAED,GAAGI,EAAEc,OAAOD,QAAQ,IAAI,IAAIL,gBAAgBG,QAAQf,OAAQ,IAAImB,KAAKpB,EAAEC,MAAMC,EAAED,GAAGmB,GAAG,KAAKC,EAAEnB,EAAED,GAAGmB,aAAaH,MAAMf,EAAED,GAAGmB,GAAG,CAAClB,EAAED,GAAGmB,IAAIE,EAAEtB,EAAEC,GAAGmB,aAAaH,MAAMjB,EAAEC,GAAGmB,GAAG,CAACpB,EAAEC,GAAGmB,IAAIlB,EAAED,GAAGmB,GAAGC,EAAEF,OAAOG,QAAQpB,EAAED,GAAGmB,GAAGpB,EAAEC,GAAGmB,QAAS,GAAG,QAAQnB,EAAE,IAAI,IAAIsB,KAAKvB,EAAEC,GAAGC,EAAED,GAAGsB,GAAGrB,EAAED,GAAGsB,GAAGC,QAAQtB,EAAED,GAAGsB,GAAGvB,EAAEC,GAAGsB,IAAIvB,EAAEC,GAAGsB,QAAQrB,EAAED,GAAGD,EAAEC,QAAzfC,EAAED,GAAGD,EAAEC,UAA4fC,GAAG,KAAKsB,QAAQ,SAASxB,EAAEC,UAAU,WAAWD,GAAGA,EAAES,MAAMC,KAAKP,WAAWF,GAAGA,EAAEQ,MAAMC,KAAKP,oBAA4BW,cCE7iC,SAASW,KAAKC,EAAQC,EAAOC,GAChCC,IAAIC,IAAIJ,EAAQC,EAAOC,GAGpB,SAASG,KAAKL,EAAQC,GACzBE,IAAIG,OAAON,EAAQC,GAGhB,SAASM,gBAAgBC,UACrBjB,MAAMkB,QAAQD,IAAaA,EAAS9B,OAAS,EAGjD,IAAMgC,UAAYtC,OAAOQ,UAAU+B,SAEnC,SAASC,QAAQC,UACbA,MAAAA,EAGJ,SAASF,SAASG,UACP,MAAPA,EACD,GACe,WAAfC,QAAOD,GACHE,KAAKC,UAAUH,EAAK,KAAM,GAC1BI,OAAOJ,GAGd,SAASK,OAAOC,EAAIC,OAClB,IAAIC,KAAOD,EACZtB,KAAKqB,EAAIE,EAAKD,EAAMC,WAEjBF,EAGJ,SAASG,SAASC,EAAIC,OACrBC,EAAU,YACP,sCAAaC,2BAAAA,kBACA,OAAZD,GACAE,aAAaF,GACjBA,EAAUG,WAAW,kBAAML,eAAMG,IAAMF,IAIxC,SAASK,OAAOH,EAAKI,UACjBrB,UAAU5B,KAAK6C,KAAS,WAAaI,EAAO,IAOhD,SAASC,cAAcL,UACnBG,OAAOH,EAAK,UAGhB,SAASM,WAAWN,UAChBG,OAAOH,EAAK,YAGhB,SAASO,SAASP,UACdG,OAAOH,EAAK,UAGhB,SAASQ,OAAOR,UACZG,OAAOH,EAAK,WAGhB,SAASS,OAAOC,OACfC,EAAOD,EAAKE,QAAQ,WAAY,OAAOC,qBACjB,IAAtBF,EAAKhD,QAAQ,OACbgD,EAAOA,EAAKG,OAAO,IAChBH,EAOJ,SAASI,QAAQxC,UACbX,MAAMkB,QAAQP,GACfA,EACEU,QAAQV,IAAoB,KAAVA,EAAe,GAAK,CAACA,GAI5C,SAASyC,UAAUhB,SACA,WAAfZ,QAAOY,IAA4B,OAARA,GAAiC,IAAjBA,EAAIiB,WAAmBZ,cAAcL,GAGpF,SAASkB,WAAWC,OAAQ9C,yDAAS,GAAI+C,yCACxCC,GAAQ,MACP,IAAI1B,KAAOtB,KACR5B,OAAOQ,UAAUC,eAAeC,KAAKkB,EAAQsB,GAAM,KAC/C2B,EAAQjD,EAAOsB,OACd0B,EAAQzD,MAAMkB,QAAQwC,KAAWjB,cAAciB,GAAQ,KACpDC,OAAsBC,IAAhBL,EAAOxB,MACb0B,EACAA,GAAQ,EACRE,GAAOnD,KAAK+C,EAAQxB,EAAK,SACtB,GAAI2B,EAAMG,OAAQ,IACrBH,EAAQA,EAAMG,UACVL,EAGG,CACHhD,KAAK+C,EAAQxB,EAAK2B,YAHlBA,EAAQA,EAAMI,UACdH,GAAOnD,KAAK+C,EAAQxB,EAAK,SAM7B4B,GAAOnD,KAAK+C,EAAQxB,EAAK,IAE7BuB,WAAWC,EAAOxB,GAAM2B,EAAOF,QAE/BhD,KAAK+C,EAAQxB,EAAK2B,UAIvBH,EAGJ,SAASQ,eAAeR,8BAAWS,mCAAAA,2BACtCA,EAAIC,QAAQ,SAAAxD,GACR8C,EAASD,WAAWC,EAAQ9C,KAEzB8C,EAGX,IAAIW,GAAK,EAEF,SAASC,mBACHD,GAGN,SAASE,UAAUC,EAAMC,SACrB,CAACD,GAAQ3B,WAAW2B,GAAQA,EAAKC,GAAMD,GAa3C,SAASE,eAAetE,GAC3BA,EAAEsE,iBAuBC,SAASC,QAAQvD,EAAUwD,UACH,IAApBxD,EAAS9B,QAAgB8B,EAASyD,KAAK,SAAAC,MACtCA,EAAMC,UACAD,EAAMC,KAAKP,MAAqB,YAAbI,GAA4BE,EAAMC,KAAKP,OAASI,EACrE,OAAO,OACR,GAAiB,YAAbA,EACP,OAAO,SACJ,IAIR,SAASI,OAAOvE,SAEZ,sFAMeA,GAAK,IC7L/B,IAAMwE,KAAO,2BAEE,CACXhC,KAAMgC,KACNC,MAAO,CACHC,QAAS,CACLxC,KAAMxC,MACNiF,QAAS,iBAAM,KAEnBhE,SAAU,CACNuB,KAAMxC,MACNiF,QAAS,iBAAM,KAEnBC,IAAK,CACD1C,KAAM3D,OACNoG,QAAS,iBAAO,KAEpBtE,MAAO,CACH6B,KAAMxC,MACNiF,QAAS,iBAAM,KAEnBzC,KAAMb,QAEVwD,MAAO,CACHxE,sBACSyE,WAGbR,sBACW,CACHS,UAAW,GACXC,OAAQnB,aAGhBoB,QAAS,CACLC,iBAAQC,QACCC,MAAM,QAASjG,KAAKuF,QAAQW,OAAO,SAACC,UAAkC,IAA1BH,EAAE1F,QAAQ6F,EAAIC,SAAeC,IAAI,SAACF,UAAQA,EAAIjF,UAEnGyE,kCACSC,UAAY5F,KAAKkB,MAAQlB,KAAKuF,QAAQW,OAAO,SAACC,UAA2C,IAAnCG,EAAKpF,MAAMZ,QAAQ6F,EAAIjF,SAC7EmF,IAAI,SAACE,UAAWA,EAAOH,QAAS,KAG7CI,wBACSb,UAETc,kFACgCzG,KAAKyF,eACnBzF,KAAK+F,sBAD4BW,EAAKd,+BAALc,EAAKd,kBACvB5F,KAAKuF,QAAQc,IAAI,SAACF,EAAKQ,OACtCrB,oBAAYa,GACZS,EAAqB,WAAdF,EAAK3D,KAAoB,mBAAqB,2BACpDuC,EAAMpE,mCACKoE,OAAaD,KAAOuB,EAAOD,EAAQD,EAAKb,WAC3DpF,OAAOT,KAAK6G,cCvD3B,SAASC,YAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,QACxBC,EAAWD,EAAIC,YAEdF,GAA2B,oBAAbG,cAEfC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAMtE,KAAO,WAEI,QAAbkE,GACEE,EAAKI,WACPJ,EAAKK,aAAaH,EAAOF,EAAKI,YAKhCJ,EAAKM,YAAYJ,GAGfA,EAAMK,WACRL,EAAMK,WAAWC,QAAUZ,EAE3BM,EAAMI,YAAYP,SAASU,eAAeb,65DCpB9C,IAAM1B,OAAO,qBAEE,CACXhC,KAAMgC,OACNC,MAAO,CACHvC,KAAM,CACFA,KAAMb,OACNsD,QAAS,SAEbvE,MAAO,CACH8B,KAAMb,OACNsD,QAAS,IAEbqC,OAAQ,CACJ9E,KAAM+E,QACNtC,SAAS,GAEbuC,SAAU,CACNhF,KAAM+E,QACNtC,SAAS,GAEbwC,IAAK,CACDjF,KAAMb,OACN+F,UAAU,GAEdC,KAAM,CACFnF,KAAMb,OACNsD,QAAS,mBAEb2C,MAAO,CACHpF,KAAMb,OACNsD,QAAS,SAEb4C,OAAQ,CACJrF,KAAMb,OACNsD,QAAS,SAEb6C,UAAW,CACPtF,KAAMuF,OACN9C,QAAS,GAEb+C,UAAW,CACPxF,KAAMb,OACNsD,QAAS,MAEbgD,aAAc,CACVzF,KAAMb,OACNsD,QAAS,MAEbiD,WAAYvG,OACZwG,WAAY,CACR3F,KAAM,CAACb,OAAQ4F,SACftC,aAASrB,GAEbwE,MAAOzG,OACP0G,YAAa,CACT7F,KAAM+E,QACNtC,SAAS,GAEbqD,OAAQ,CACJ9F,KAAM+F,SACNtD,QAAS,cAGbuD,KAAM,CACFhG,KAAM+F,SACNtD,QAAS,cAGbwD,SAAU,CACNjG,KAAM+F,SACNtD,QAAS,cAGbyD,OAAQ,CACJlG,KAAM+F,SACNtD,QAAS,cAGb0D,eAAgB,CACZnG,KAAM+F,SACNtD,QAAS,cAGb2D,SAAU,CACNpG,KAAM+F,SACNtD,QAAS,cAGb4D,SAAU,CACNrG,KAAM+F,SACNtD,iBAAQwC,QACCqB,aAAerJ,KAAKsJ,OAAOtB,QAC3BuB,gBAAiB,IAG9BC,MAAO,CACHzG,KAAM3D,OACNoG,QAAS,iBAAO,KAEpBiE,OAAQ,CACJ1G,KAAM,CAACb,OAAQoG,SAEnBpH,MAAO,CAACX,MAAO2B,OAAQoG,OAAQlJ,QAC/BsK,iBAAavF,EACbwF,OAAQ,CACJ5G,KAAM+E,QACNtC,SAAS,GAEboE,OAAQ,CACJ7G,KAAM+E,QACNtC,SAAS,GAEbqE,SAAU,CACN9G,KAAM+E,QACNtC,SAAS,GAEbsE,MAAO,CACH/G,KAAM+E,QACNtC,SAAS,IAIjBL,sBACW,CACH4E,SAAUrG,QAAQ1D,KAAKkB,OACvB2E,OAAQnB,WACR6E,gBAAgB,EAChBS,cAAc,EACdX,aAAc,KAGtB3D,MAAO,CACHxE,eAAM8E,QACG+D,SAAWrG,QAAQsC,IAE5B+D,kBAAS/D,OACClE,EAAyB,IAAnB9B,KAAKqI,UAAmBrC,EAAE,IAAM,GAAMA,OAC7CC,MAAM,QAASnE,QACfmE,MAAM,SAAUnE,IAEzBkG,aAAIhC,QACKiE,UAAYjK,KAAKiK,QAAQjC,IAAMhC,KAG5CF,QAAS,CACLxD,aAAIuD,UACOR,OAAOQ,EAAS7F,KAAK6F,QAEhCqE,oBAAWC,QACFlE,MAAMkE,EAAQ,SAAW,OAC1BnK,KAAK4J,cACAQ,KAAK,YACLA,KAAK,gBAETJ,cAAe,GAExBK,6BACSd,gBAAiB,GAG1Be,qBACQtK,KAAK+H,WAAY,IAAU/H,KAAK6I,gBAC/BmB,cAAe,IAGxBO,sDACUjF,EAAQ,CACVvC,KAAM,OACN7B,MAAQlB,KAAK+J,SAAS1D,IAAI,SAAAxE,UAAKyE,EAAKgD,OAAOzH,KAAKF,WAChD6I,UAAU,wCAGSlF,QAAYtF,KAAKsC,IAAI,aACvCtC,KAAK+J,SAASrK,mBAAiB,eAAe,gDACjC,kBAAM4G,EAAKyD,SAAW,OAAQ,uCAC5B/J,KAAKkI,WAAU,OAAU,kBAAM5B,EAAKgE,qBAAmB,gBAI/EG,mBAAUjJ,qCACDxB,KAAKqI,WAAarI,KAAK+J,SAASrK,OAASM,KAAKqI,YAC/C7G,EAASkJ,KAAK1K,KAAK2K,0BACJtD,MAAM,iBAAmBrH,KAAKsC,IAAI,6BAAcd,KAGvEoJ,kBAASjE,EAAOnF,8CACO6F,MAAM,gBAAkBrH,KAAKsC,IAAI,OAASqE,uBAAYnF,KAE7EqJ,eAAM5J,MACEA,IAAUjB,KAAKiB,MACf,MAAM,IAAI6J,MAAM,iBAGxBC,mBAAUjJ,EAAK6E,iCACa,IAApB3G,KAAK0I,aAA6C,IAArB1I,KAAK4I,YAAsB,KAClDoC,EAAQ,UACK,SAAdhL,KAAK+C,OAAuC,IAApB/C,KAAK0I,YAAwC,SAAd1I,KAAK+C,MAAmB/C,KAAK0I,aACrFsC,EAAMN,KAAK1K,KAAKiL,eAAenJ,EAAK6E,IACpC3G,KAAK4I,aACLoC,EAAMN,KAAK1K,KAAKkL,eAAepJ,EAAK6E,mBAErBU,MAAM,uBAAyBrH,KAAKsC,IAAI,QAAQ0I,MAG3EC,wBAAenJ,EAAK6E,wDAEgB,IAApB3G,KAAK0I,iBAA2CvE,IAApBnE,KAAK0I,WAA4B,eAAiB1I,KAAK0I,qBACjF,kBAAMhC,EAAKyE,YAAYrJ,SAAW9B,KAAKsC,IAAI,KAAOqE,MAGpEuE,wBAAepJ,EAAK6E,uDACA,2BAA2B,kBAAMyE,EAAKC,aAAavJ,SAAW9B,KAAKsC,IAAI,KAAOqE,MAGlG2E,6DACWtL,KAAKyK,UAAUzK,KAAK+J,SAAS1D,IAAI,SAAC2B,EAAKrB,UACnC4E,EAAKX,SAASjE,EAAO,cAAU,4BACxB,kBAAM4E,EAAKJ,YAAYnD,OAASuD,EAAKR,UAAU/C,EAAKrB,SAG1E6E,8DACWxL,KAAKyK,UAAUzK,KAAK+J,SAAS1D,IAAI,SAAC2B,EAAKrB,UACnC8E,EAAKb,SAASjE,EAAO,qBAAW8E,EAAKnC,OAAOtB,MAASyD,EAAKV,UAAU/C,EAAKrB,SAGxFgE,0EACuBtD,MAAM,2BAA4B,kBAAMqE,EAAKpB,kBAAkBtK,KAAKsC,IAAI,sBAC7EtC,KAAKkI,UAGvBiD,qBAAYnD,OACJhI,KAAK+H,gBACF/H,KAAKoJ,SAASpB,IAEzBqD,sBAAarD,GACLhI,KAAK+H,WACL,IAAU/H,KAAKkJ,eAAelB,UACzB+B,SAAS4B,OAAO3L,KAAK+J,SAASzJ,QAAQ0H,GAAM,QAC5CmB,SAASnB,KAGtBsB,gBAAOtB,UACIpG,QAAQ5B,KAAKyJ,QAAUzB,EAAMA,EAAIhI,KAAKyJ,SAEjDmC,mBAAUC,mBACD5C,OAAO4C,QAEY,IAAhB7L,KAAK6H,SACLgE,EAAM,mBAAyB,CAC3B1B,MAAO,SAAClJ,GACJ6K,EAAKjB,MAAM5J,GACX6K,EAAK5B,cAET9I,IAAK,SAACH,EAAOC,GACT4K,EAAKjB,MAAM5J,GACN6K,EAAK/D,UACN+D,EAAK7F,MAAM,QAAS/E,IAG5B6K,IAAK,SAAC9K,UACF6K,EAAKjB,MAAM5J,GACJ6K,EAAK5K,OAEhB6H,KAAM,SAAAvG,UAAMsJ,EAAKE,IAAI,MAAOxJ,IAC5ByJ,QAAS,SAAAzJ,UAAMsJ,EAAKE,IAAI,SAAUxJ,MAI5C,MAAOhC,GACL0L,QAAQC,IAAI3L,KAGpB4L,yDAC+DpM,KAAKqM,OAAzD9D,IAAAA,UAAWC,IAAAA,aAAcqB,IAAAA,SAAUC,IAAAA,WAAOH,4BAGhC,WACZE,0BACa,kBAA2B,IAApByC,EAAKtD,YAAwBsD,EAAKpC,YAAW,OAAS1B,IAA2B,KACrGsB,4BAAuB,qBACV,kBAAuB,IAAhBwC,EAAKvD,QAAoBuD,EAAKpC,iBAAgB3B,IAAwB,SAIvG9B,sBAGQ8F,wBAFExJ,EAAO/C,KAAK+C,KAIdwJ,EADS,UAATxJ,EACO/C,KAAKuK,YACE,UAATxH,EACE/C,KAAKwL,aAELxL,KAAKsL,kBAEwCtL,KAAKqM,WAAtDlE,MAAAA,aAAQ,QAAOC,IAAAA,OAAQJ,IAAAA,IAAKW,IAAAA,MAAOF,IAAAA,uBACrC+D,UAAU,WACPC,EAAKC,MAAMC,OACXF,EAAKb,UAAUa,EAAKC,MAAMC,MAAMC,eAAiB,eAG5CL,8BACSvM,KAAK0J,kBAAoBjB,UAAqBzI,KAAKuJ,0BACvDvJ,KAAKqK,oCACN,cAAmCrK,KAAKqJ,oBAAxB,kEAEVlB,MAAAA,EAAOQ,MAAAA,GAAU3I,KAAKwJ,wBAAiBxJ,KAAKgK,wBACjD,kBAAOyC,EAAKvC,YAAW,SAC/BlK,KAAKgK,eAAiBhK,KAAK4J,uBAAsB,mBAAa5B,cAAiB,WAAW,QAC9EI,SACA,eACD,UACN,KACNpI,KAAKoM,mBC3ThB/G,OAAO,qBAEE,CACXhC,KAAMgC,OACNwH,YAAY,EACZvH,MAAO,CACHC,QAAS,CACLxC,KAAMxC,MACNiF,QAAS,iBAAO,KAEpBzC,KAAMb,OACN2D,OAAQ,CACJL,QAAS,kBAAMd,cAGvB+B,gBAAO7F,EAAG6E,sCACmBA,EAAIN,QAAOM,EAAIH,MAAMC,QAAQc,IAAI,SAACF,EAAKQ,OACtDrB,oBAAYa,GACZS,EAA0B,WAAnBnB,EAAIH,MAAMvC,KAAoB,gBAAkB,wBACtDuC,EAAMpE,mCACKoE,OAAaD,OAAOuB,EAAOD,EAAQlB,EAAII,WAC1DpF,OAAOgF,EAAIoB,cCrBhBxB,OAAO,uBACE,CACXhC,KAAMgC,OACNwH,YAAY,EACZvH,MAAO,CACHC,QAAS,CACLxC,KAAMxC,MACNiF,QAAS,iBAAO,KAEpBK,OAAQ,CACJL,QAAS,kBAAMd,cAGvB+B,gBAAO7F,EAAG6E,kCACeA,EAAIN,QAAOM,EAAIH,MAAMC,QAAQc,IAAI,SAACf,EAAOqB,OAEpD/B,EAAOU,EAAMV,KAAOD,UAAUW,EAAMV,KAAMhE,GAAK,gDAE/B0E,OACbD,OAAOsB,EAAQlB,EAAIH,MAAMO,SAASjB,MAC5CnE,OAAOgF,EAAIoB,mBCnBP,CACXxD,KAAM,cACNiC,MAAO,CACHG,IAAK,CACD1C,KAAM3D,OACNoG,QAAS,iBAAO,CAACF,MAAO,MAE5B9D,SAAU,CACNuB,KAAMxC,MACNiF,QAAS,iBAAO,KAEpBzC,KAAM,CACFA,KAAMb,OACNsD,QAAS,WAEbtE,MAAO,CACH6B,KAAM,CAACxC,MAAO2B,OAAQoG,QACtB9C,QAAS,iBAAO,MAGxBE,MAAO,CACHxE,sBACS4L,aAGbhH,QAAS,CACLiH,mFACuB,0BAAwB,kBAAMzG,EAAK0G,4BACnC,kBAAM1G,EAAK0G,iBAAmBhN,KAAKyF,OAAMzF,KAAKwB,YAErEyL,yBACSD,eAGTA,2BAEQ9L,EAGAA,EADS,aAHClB,KAAK+C,KAAMmK,oBAIblN,KAAK0M,MAAMS,KAAKC,gBAEhBpN,KAAK0M,MAAMS,KAAKE,sBAEvBpH,MAAM,QAAS/E,IAExB4L,oBAGiB,aAFC9M,KAAK+C,KAAMmK,oBAGrBlN,KAAK0M,MAAMS,KAAKG,cAActN,KAAKkB,OAEnClB,KAAK0M,MAAMS,KAAKI,eAAe7J,QAAQ1D,KAAKkB,UAGxDuF,yBACWzG,KAAK+M,YAEhBS,wBACSV,gBACAE,gBC3Db,SAASS,UAAUC,EAAM7M,SACd,CACH8M,IAAKD,EACLrK,KAAMuK,YAAYF,GAClBG,IAAKhN,GAIb,SAAS+M,YAAYF,UACV/L,SAAS+L,GAAMI,MAAM,KAAKC,MAGrC,IAAM1I,OAAO,uBAEE,CACXhC,KAAMgC,OAENC,MAAO,CACHG,IAAK,CACD1C,KAAM3D,OACNoG,QAAS,iBAAO,CAACF,MAAO,MAE5B9D,SAAU,CACNuB,KAAMxC,MACNiF,QAAS,iBAAO,KAEpB4D,SAAU,CACNrG,KAAM+F,SACNtD,iBAAQkI,QACCrE,aAAeqE,EAAKC,SACpBpE,gBAAiB,IAG9ByE,WAAY,CACRjL,KAAMb,OACNsD,QAAS,QAEb6C,UAAW,CACPtF,KAAMuF,OACN9C,QAAS,GAEboD,YAAa,CACT7F,KAAM+E,QACNtC,SAAS,GAEbkE,iBAAavF,EACbsE,WAAYvG,OACZwG,WAAY,CAACxG,OAAQ4F,SACrB5G,MAAO,CAACX,MAAO2B,SAEnBiD,sBACW,CACH8I,WAAY,GACZpI,OAAQnB,WACR6E,gBAAgB,EAChBF,aAAc,KAGtB7C,wBACwCrC,IAAhCnE,KAAKyF,IAAIH,MAAM4I,eACflO,KAAKyF,IAAIH,MAAM4I,cAAe,QAC7BzI,IAAIH,MAAMyE,SAAWrG,QAAQ1D,KAAKkB,OAAOmF,IAAIoH,YAEtD/H,MAAO,CACHxE,eAAM8E,GACEhG,KAAK0M,MAAMyB,OAAOC,YAAYC,MAAM,SAAAX,UAC5BA,EAAKY,QAA0B,YAAhBZ,EAAKY,gBAEvB5B,MAAMyB,OAAOC,YAAc1K,QAAQsC,GAAGK,IAAIoH,gBAC1CQ,WAAajO,KAAK0M,MAAMyB,OAAOC,cAG5C/F,mBAAUrC,EAAGuI,GACC,IAANA,GAAiB,IAANvI,GACXhG,KAAK2F,WAGjBG,QAAS,CACLxD,aAAIuD,UACOR,OAAOQ,EAAS7F,KAAK6F,QAEhC2I,6BACuC,IAA5BxO,KAAKyF,IAAIH,MAAMyC,UAE1BoB,kBAASuE,GACD1N,KAAKwO,mBACJ9B,MAAMyB,OAAO9C,aAAaqC,IAEnCvC,qBAAYuC,QACHtE,SAASsE,IAGlBe,0EACuBpH,MAAM,gCACZ,uBAGjBuD,kBAAS8C,EAAM/G,mCACgB,UAApB3G,KAAKgO,+BACIN,EAAKC,SAAU3N,KAAKsC,IAAI,MAAQqE,kBACjC,sBAAuB3G,KAAKsC,IAAI,IAAMqE,MAEzDuE,wBAAewC,EAAM/G,uDACD,2BAA2B,kBAAML,EAAK6C,SAASuE,SAAY1N,KAAKsC,IAAI,KAAOqE,MAE/FsE,wBAAeyC,EAAM/G,wDAEe,IAApB3G,KAAK0I,iBAA2CvE,IAApBnE,KAAK0I,WAA4B,eAAiB1I,KAAK0I,qBACjF,kBAAMhC,EAAKyE,YAAYuC,SAAY1N,KAAKsC,IAAI,KAAOqE,MAErE+H,sBAAahB,EAAM/G,gEACW,CAACgI,WAAYjB,EAAKiB,WAAY5L,KAAM,SAAUoF,MAAO,YAAW,sBACjFnI,KAAKsC,IAAI,KAAOqE,QAE7BoE,mBAAU2C,EAAM/G,6BACNqE,EAAQ,MACVhL,KAAK4I,cAAmC,IAApB5I,KAAK0I,kBACA,SAApB1I,KAAKgO,aAA6C,IAApBhO,KAAK0I,YAA8C,SAApB1I,KAAKgO,YAAyBhO,KAAK0I,aACjGsC,EAAMN,KAAK1K,KAAKiL,eAAeyC,EAAM/G,IACrC3G,KAAK4I,aACLoC,EAAMN,KAAK1K,KAAKkL,eAAewC,EAAM/G,mBAEtBU,MAAM,qBAAqB2D,KAGtDM,6DACWtL,KAAKiO,WAAW5H,IAAI,SAACqH,EAAM/G,uBAAoByE,EAAK9I,IAAIqE,SACpDU,MAAM,mBAAmClD,IAApBuJ,EAAKiB,YAA4C,YAAhBjB,EAAKY,OAAwBlD,EAAKsD,aAAahB,EAAM/G,GAAS,CAACyE,EAAKR,SAAS8C,EAAM/G,GAAQyE,EAAKL,UAAU2C,EAAM/G,SAErLiI,4EACyB,eACV,CAACC,QAAS,iBAAqB7O,KAAKyF,SACtCzF,KAAKsC,IAAI,cAAYtC,KAAKwB,YAEvCsN,wBACS/J,QAAQ/E,KAAKwB,SAAU,YACxBxB,KAAKwB,SAASkJ,KAAK1K,KAAKyO,mBAEhC9I,sBACQoJ,EAAQ/O,KAAK0M,MAAMyB,OAAOC,YAAY/H,IAAI,SAACqH,UAASA,EAAKC,MAAKzH,OAAO,SAACyH,eAAgBxJ,IAARwJ,SAC7E1H,MAAM,QAA4B,IAAnBjG,KAAKqI,UAAmB0G,EAAM,IAAM,GAAMA,IAElE1E,6BACSd,gBAAiB,IAG9B9C,uCACUuI,GAAWhP,KAAKqI,WAAarI,KAAKqI,UAAYrI,KAAKiO,WAAWvO,cAEhEM,KAAK0M,MAAMyB,cACyBhK,IAAhCnE,KAAKyF,IAAIH,MAAM4I,eACflO,KAAKyF,IAAIH,MAAM4I,aAAelO,KAAK0M,MAAMyB,OAAOD,mBAC/CzI,IAAIH,MAAMyE,SAAW/J,KAAK0M,MAAMyB,OAAOpE,eAG3C+E,sDAIIzH,MAAM,cAAe,qBACrBA,MAAM,gBAAkB2H,QACzB,CAAChP,KAAKyF,IAAIH,MAAM4I,aAAe,GAAKlO,KAAKsL,YAAatL,KAAK4O,0CACzC5O,KAAK0J,kBAAoB1J,KAAKyI,mBAAqBzI,KAAKuJ,0BAC5DvJ,KAAKqK,oCACN,cAAmCrK,KAAKqJ,oBAAxB,qBAIzCmE,mCACSS,WAAajO,KAAK0M,MAAMyB,OAAOC,iBAC/Ba,OAAO,kBAAM1D,EAAKmB,MAAMyB,OAAOC,aAAa,WAC7C7C,EAAK5F,UACN,CAACuJ,MAAM,MC7KLC,eAAiB,aAEf,SAASC,YAAYC,EAAYC,SACrC,CACHjM,KAAM8L,eACNI,cAAeJ,eACf7J,MAAO,CACHkK,KAAM,CACFzM,KAAMxC,MACN0H,UAAU,GAEd1B,OAAQ,CACJxD,KAAM3D,OACNoG,QAAS,iBACE,IAEXyC,UAAU,GAEd/G,MAAO9B,QAEX+F,KAAM,iBACK,CACHsK,cAAUtL,EACVuL,iBAAavL,EACbwL,gBAAYxL,EACZyL,QAAIzL,EACJ6K,QAAQ,EACRnJ,OAAQ,IAGhByJ,WAAAA,EACA7I,yBACWzG,KAAK6P,WAAWpJ,UAE3BX,QAAS,CACLgK,sBAAaxK,QACJvE,KAAKf,KAAM,cAAe6D,WAAW7D,KAAK0P,YAAapK,KAEhEyK,qBAAYzK,QACHvE,KAAKf,KAAM,aAAc6D,WAAW7D,KAAK2P,WAAYrK,KAE9D0K,sBACMhQ,KAAK6F,SAGfH,MAAO,CACHa,OAAQ,WACRiJ,cAAKxJ,QACI6J,WAAWI,OAAOC,WAAWlK,KAG1CmK,8BAC2BnQ,KAAKoQ,SAASC,UAA9Bb,IAAAA,KAAMjJ,IAAAA,YACRsJ,WAAa,IAAIR,EAAWG,EAAMjJ,QAClCsJ,WAAWM,aAAanQ,OAEjCwG,wBACSqJ,WAAWrJ,eACXoJ,GAAK5P,KAAK6P,WAAWS,WACrBrK,MAAM,QAASjG,KAAK4P,KAE7BpC,wBACSqC,WAAWrC,eACXvH,MAAM,QAASjG,KAAK4P,KAE7BW,8BACSV,WAAWI,OAAOC,WAAW,SAC7BL,WAAWI,OAAOO,QAAQC,sBCrErCxQ,cAAc,CAAC,QAAS,QAAS,YACjCC,eAAe,CAAC,QAAS,QAAS,cAClCC,kBAAkB,CAAC,KAAM,YAEzBC,gBAAgB,SAACsQ,EAASC,UAC5BD,EAAQrQ,OAAO,SAACf,EAAGC,OACV,IAAM+C,KAAO/C,KACVD,EAAEgD,OACgC,IAA9BrC,cAAYK,QAAQgC,GACpBhD,EAAEgD,qBAAWhD,EAAEgD,MAAS/C,EAAE+C,SACvB,IAAmC,IAA/BpC,eAAaI,QAAQgC,GAAa,KACnCsO,EAAOtR,EAAEgD,aAAgB/B,MAAQjB,EAAEgD,GAAO,CAAChD,EAAEgD,IAC7CuO,EAAOtR,EAAE+C,aAAgB/B,MAAQhB,EAAE+C,GAAO,CAAC/C,EAAE+C,IACnDhD,EAAEgD,gCAAWsO,sBAASC,SACnB,IAAsC,IAAlC1Q,kBAAgBG,QAAQgC,OAC1B,IAAMwO,KAASvR,EAAE+C,MACdhD,EAAEgD,GAAKwO,GAAQ,KACTF,EAAOtR,EAAEgD,GAAKwO,aAAkBvQ,MAAQjB,EAAEgD,GAAKwO,GAAS,CAACxR,EAAEgD,GAAKwO,IAChED,EAAOtR,EAAE+C,GAAKwO,aAAkBvQ,MAAQhB,EAAE+C,GAAKwO,GAAS,CAACvR,EAAE+C,GAAKwO,IACtExR,EAAEgD,GAAKwO,gCAAaF,sBAASC,SAE7BvR,EAAEgD,GAAKwO,GAASvR,EAAE+C,GAAKwO,QAG5B,GAAY,SAARxO,MACF,IAAIyO,KAAQxR,EAAE+C,GACXhD,EAAEgD,GAAKyO,GACPzR,EAAEgD,GAAKyO,GAAQjQ,UAAQxB,EAAEgD,GAAKyO,GAAOxR,EAAE+C,GAAKyO,IAE5CzR,EAAEgD,GAAKyO,GAAQxR,EAAE+C,GAAKyO,QAI9BzR,EAAEgD,GAAO/C,EAAE+C,QAGfhD,EAAEgD,GAAO/C,EAAE+C,UAGZhD,GACRqR,IAED7P,UAAU,SAACkQ,EAAKC,UAClB,WACID,GAAOA,EAAIjR,MAAMC,KAAMP,WACvBwR,GAAOA,EAAIlR,MAAMC,KAAMP,aC1C/B,SAASyR,iBACE,CAIH5L,MAAO,GAEP6L,GAAI,QAUSC,2DAGRC,0DAGH/L,UACFlF,gBAAc,CAACkF,GAAQtF,KAAKsR,OACrBtR,mCAGLuR,OAAWjD,oEACT1M,QAAQ2P,GAAmBvR,MAE3BO,MAAMkB,QAAQ8P,QACTC,MAAM,CAACC,MAAOF,IACZvO,cAAcuO,QAChBC,MAAMD,QAENC,MAAM,CAACC,yBAAS9P,SAAS4P,KAAejD,KAG1CtO,iDAIFsR,MAAQJ,WACNlR,8CAIDmF,EAAO/F,OAAOsS,KAAK1R,KAAKsR,OAAOjR,OAAO,SAACsQ,EAASrO,OAC5CpB,EAAQoF,EAAKgL,MAAMhP,eACX6B,IAAVjD,EAA4ByP,EAC5BpQ,MAAMkB,QAAQP,KAAWA,EAAMxB,OAAeiR,EAC9C3N,cAAc9B,KAAW9B,OAAOsS,KAAKxQ,GAAOxB,QAAkB,UAAR4C,EAAwBqO,GAElFA,EAAQrO,GAAOpB,EACRyP,IACR,gBACEU,OACElM,WAITwM,QAAU,CAAC,MAAO,MAAO,QACzBC,QAAU,CAAC,cAAe,WAAY,KAAM,WAAY,QAAS,QAAS,QAAS,cAEzFD,QAAQnN,QAAQ,SAAAlC,GACZ8O,MAAMxR,UAAU0C,GAAO,SAAUR,eACxB0P,yBAAQlP,EAAMR,IACZ9B,QAIf4R,QAAQpN,QAAQ,SAAAlC,GACZ8O,MAAMxR,UAAU0C,GAAO,SAAUuP,EAAK/P,UAC9BF,QAAQiQ,GAAa7R,MACrBgD,cAAc6O,QACTL,yBAAQlP,EAAMuP,SAEdL,yBAAQlP,qBAAQX,SAASkQ,GAAO/P,KAGlC9B,SAIR,IAAM8R,WAAaF,QAAQnR,OAAOkR,QAAS,kBCrFzCI,iBACE,CACHC,SAAU,GACVzM,QAAS,GACT0M,IAAK,GACLzQ,SAAU,GACV0Q,QAAS,GACTC,KAAM,GACNC,cAAUjO,EACVkO,gBAAYlO,EACZmO,YAAQnO,EACRoO,UAAMpO,GAIP,SAASqO,eAAenP,UACpB,SAACsF,EAAO1H,EAAOC,OAAOoE,yDAAQ,UAAO,IAAImN,QAAQpP,EAAMsF,EAAO1H,EAAOC,EAAOoE,IAGhF,SAASoN,mBAAmBrP,EAAMN,OAAM4P,yDAAW,cAC/C,SAAChK,EAAO1H,EAAOC,OAAOoE,yDAAQ,GAC3BsN,EAAQ,IAAIH,QAAQpP,EAAMsF,EAAO1H,EAAOC,EAAOoE,UACjDrC,WAAWF,GAAOA,EAAK6P,GACtBA,EAAMtN,MAAMqN,EAAU5P,GACpB6P,OAIMH,+BACL1P,EAAM4F,EAAO1H,EAAOC,SAAOoE,yDAAQ,kCAE3CnD,0EAAYmP,MAAOS,YACnB5P,OAAOmE,EAAKgL,MAAO,CAACvO,KAAAA,EAAM4F,MAAAA,EAAO1H,MAAAA,EAAOC,MAAAA,IACpC8B,cAAcsC,IAAQgB,EAAKhB,MAAMA,wBALR8L,kDAQ5BrO,eACIuC,MAAM,OAAQvC,GACZ/C,0CAIDiE,EAAQ,IAAIjE,KAAK6S,mBACvB5O,EAAMqN,MAAQzN,WAAW,GAAI7D,KAAKsR,OAC3BrN,2CAIAjE,KAAKsR,kDAIPH,yBACEnR,cAIT8S,SAAW,CAAC,aAAc,YAAa,QAAS,OAAQ,QAAS,SAAU,OAAQ,SAAU,aAAc,SAAU,SAE3HA,SAAStO,QAAQ,SAAAuO,GACbN,QAAQ7S,UAAUmT,GAAQ,SAAU7R,UAChCH,KAAKf,KAAKsR,MAAOyB,EAAM7R,GAChBlB,QAIf,IAAMgT,SAAW,CAAC,OAElBA,SAASxO,QAAQ,SAAAuO,GACbN,QAAQ7S,UAAUmT,GAAQ,SAAU5M,UAChCpF,KAAKf,KAAKsR,MAAOyB,EAAM5Q,OAAOnC,KAAKsR,MAAMyB,GAAO5M,IACzCnG,QAIf,IAAMiT,SAAW,CAAC,WAAY,UAAW,WAAY,OAAQ,WAE7DA,SAASzO,QAAQ,SAAAuO,GACbN,QAAQ7S,UAAUmT,GAAQ,SAAU5M,UAC3B5F,MAAMkB,QAAQ0E,KAAMA,EAAM,CAACA,IAChCpF,KAAKf,KAAKsR,MAAOyB,EAAM/S,KAAKsR,MAAMyB,GAAMtS,OAAO0F,IACxCnG,QClFf,IAAMkT,OAAS,wBACTC,OAAS,wBAER,SAASC,OAAOvB,UACZ7P,KAAKC,UAAU4B,WAAW,GAAIgO,GAAK,GAAO,SAAUvP,EAAKR,OACxDA,IAAsB,IAAfA,EAAIuR,WAGI,mBAARvR,SACAA,KAEPA,EAAIwR,WACJxR,EAAMA,EAAIyR,WAEVzR,EAAI0R,cAGDN,OAASpR,EAAMqR,UAI9B,SAASM,OAAOjR,WACLkR,KAAK,sBAAwBlR,GAAK,SAGtC,SAASmR,UAAUC,EAAM7P,UACrB/B,KAAK6R,MAAMD,EAAM,SAAUE,EAAGjS,MAC7BD,QAAQC,KAAOA,EAAEvB,QAAS,OAAOuB,SAE7BA,EAAEvB,QAAQ6S,QAAU,GAA2B,IAAtBtR,EAAEvB,QAAQ4S,eAE5BO,QAAkC,KADzC5R,EAAIA,EAAE0B,QAAQ4P,OAAQ,IAAI5P,QAAQ2P,OAAQ,KAC1B5S,QAAQ,aAAyC,IAAnBuB,EAAEvB,QAAQ,KAAa,YAAcuB,EAAIA,GACpF,IAAKkC,GAAQlC,EAAEvB,QAAQ,aAAe,EACzC,OAAOmT,OAAO5R,GACpB,MAAOrB,eACL0L,QAAQ6H,kCAA2BlS,WAGhCA,IAIR,SAASmS,WAAW9S,EAAO+S,SACvB,CACH/S,MAAAA,EACA8S,YAAY,EACZE,cAAc,EACdD,WAAYA,GAIb,SAASE,SAAS3E,EAAMzL,UACpBqQ,UAAU,CAAC5E,GAAOzL,GAAM,GAG5B,SAASqQ,UAAUC,EAAOtQ,UACtBF,WAAW,GAAIwQ,EAAOtQ,GCrDjC,IAAMuQ,YAAc9B,eAAe,IAE5B,SAAS+B,OAAOxR,EAAM9B,EAAO0H,OAC5B6L,EAAOF,YAAY,GAAIrT,UAC3BuT,EAAKlD,MAAMvO,KAAOA,EAClByR,EAAKlD,MAAM3I,MAAQA,EACZ6L,EAGJ,SAASC,UAAUrC,EAAUsC,EAAIzT,EAAO0H,OACvC6L,EAAOF,YAAY,GAAIrT,UAC3BuT,EAAKlD,MAAMvO,KAAO,WAClByR,EAAKlD,MAAMc,SAAWA,EACtBoC,EAAKlD,MAAM3I,MAAQA,EACnB6L,EAAKlD,MAAMoD,GAAKA,EACTF,EAGI,SAASG,mBAChB/B,EAAQ,UAEZzQ,OAAOyQ,EAAO,CACV2B,OAAAA,OACAE,UAAAA,YAEJ7B,EAAMR,SAAWqC,UACjB7B,EAAMiB,MAAQA,MAEPjB,EAGX,SAASiB,MAAMrE,OAAMoF,6DACb1R,SAASsM,KAAOA,EAAOmE,UAAUnE,IAEjCA,aAAgBiD,QAAS,OAAOmC,EAAUpF,EAAOA,EAAKnL,aACtDrB,cAAcwM,GAAO,KACfoD,EAAQiC,YAAYrF,UACnBoF,EAAUhC,EAAQA,EAAMvO,UAC5B,GAAK9D,MAAMkB,QAAQ+N,GACrB,KACK6E,EAAQ7E,EAAKnJ,IAAI,SAAAyO,UAAKjB,MAAMiB,EAAGF,YACrCxV,OAAO2V,iBAAiBV,EAAO,CAC3BW,KAAMhB,WAAWiB,WACjBC,MAAOlB,WAAWkB,SAGfb,EARsB,OAAO7E,EAY5C,SAASyF,UAAUhU,EAAO6C,OAClBtC,EAAW,OACV,IAAIX,KAAKb,KAAM,KACVwP,EAAOxP,KAAKa,aAAc4R,QAAUzS,KAAKa,GAAGyQ,MAAQtR,KAAKa,MAC3D2O,EAAKvO,QAAUA,EAAO,OAAkB,IAAX6C,EAAkB0L,EAAOxP,KAAKa,GAC3DU,gBAAgBiO,EAAKhO,YAAWA,EAAWA,EAASf,OAAO+O,EAAKhO,cAEpEA,EAAS9B,OAAS,EAAG,OAAOuV,UAAUnV,KAAK0B,EAAUP,GAG7D,SAASiU,MAAMzF,cACXrQ,OAAOsS,KAAKjC,GAAUjL,QAAQ,SAAAvD,OACpBuO,EAAOlJ,EAAK0O,KAAK/T,GAAO,GAC1BuO,IAAMA,EAAKtO,MAAQuO,EAASxO,MAIxC,SAAS4T,YAAYrF,OACXoD,EAAQ,IAAIH,eAClBrT,OAAOsS,KAAKlC,GAAMhL,QAAQ,SAAAlC,GACtBsQ,EAAMtB,MAAMhP,GAAOkN,EAAKlN,KAErBsQ,EC3EX,SAASuC,WAAWhQ,UACZjC,SAASiC,GACTA,EAAO,CAACiQ,SAAU,CAACC,UAAWlQ,IACzBA,GAAQlC,WAAWkC,EAAK4G,OAC7B5G,EAAOA,EAAK4G,OAET5G,EAGX,SAASmQ,SAASC,UACPtS,WAAWsS,GAASA,IAAWA,GAAS,OAG9BA,4BAELb,2BACJA,GACA1U,KAAKwV,MAAMd,sDAGbA,QACGA,GAAKA,OACL7P,GAAK6P,EAAGe,4CAGZC,EAAUvQ,EAAMwQ,OACbC,EAAO5V,KAAK6E,GAAG6Q,EAAUP,WAAWhQ,GAAOmQ,SAASK,WACxDC,EAAKC,QAAU7V,KAAK0U,GAEbkB,gCAGAE,GACP1W,OAAOsS,KAAKoE,GAAOtR,QAAQ,SAACsP,GACxByB,EAAM3V,UAAU+B,SAASmS,GAAG5G,qBAAuBqI,EAAM3V,UAAUkU,GAAK,SAAU3O,EAAMwQ,UAC7E3V,KAAKwU,KAAKsB,EAAMhC,GAAI3O,EAAMwQ,eAMjDJ,MAAMQ,IAAI,CAACC,SAAU,mBCvCAC,iCAELhG,EAAQT,EAAM/K,gCACjB+K,KAAOA,OACP0G,MAAQ,IAAI9E,WACZ+E,MAAQ,IAAIZ,WACZ9Q,GAAKA,OACLiB,MAAQ,QACR0Q,WAAa5G,EAAKzM,UAClBA,KAAOpB,SAAS6N,EAAKzM,MAAMmK,yBAC3BmJ,OAAQ,OACRC,QAAKnS,EAELqL,EAAKvO,WAIDA,MAAQuO,EAAKvO,YAHbA,MAAQ,QAAUyD,gBAClB2R,OAAQ,QAIZhT,KAAOmM,EAAKnM,UACZkT,QAAU,KAAOvW,KAAKiB,MAAQjB,KAAKyE,QACnC+R,gBAAkB,KAAOxW,KAAKuW,aAC9BE,UAAUhS,QACViS,KAAO,QACPC,SAAW,UACXC,WAAa,aACbC,OAAS,UAETlR,OAAOsK,QACPoB,8DAGC5M,EAAIoS,QACLvU,IAAM,OAASmC,EACpBoS,GAAU7W,KAAK6W,QAAU7W,KAAK6W,OAAOJ,UAAU/R,WAAYmS,kCAGxD5G,QACE6G,QAAU7G,OACVO,QAAUP,EAAOO,aACjBkE,GAAKzE,EAAOyE,QACZnP,QAAU0K,EAAO1K,aACjB4Q,MAAMX,MAAMxV,KAAK0U,SACjBqC,SAAU,sEAMP7V,UACDA,kCAGH8V,UACGA,WCpDTC,IAAM1U,SAAS,SAACC,UAAOA,KAAM,GAEd0U,6BACLjH,gCACH6G,QAAU7G,OACVkH,GAAKlH,EAAOkH,QACZzC,GAAKzE,EAAOyE,QACZnP,QAAU0K,EAAO1K,aACjB6R,MAAQnH,EAAOmH,WACfjB,MAAQ,IAAIZ,MAAMvV,KAAK0U,SACvBwB,MAAQ,IAAI9E,WACZiG,MAAQ,QACRC,WAAa,2DAGXC,OAAQC,gEACVxX,KAAKqX,MAAME,EAAO9S,KAKnBzE,KAAKyX,YAAYF,IACjBvX,KAAK8W,QAAQY,cACXb,EAAS7W,KAAKqX,MAAME,EAAO9S,IAAIoS,YAChCQ,MAAME,EAAO9S,IAAM,KACpBoS,GAAUW,GACVxX,KAAK2X,WAAWd,EAAQW,QATpBA,GAASD,EAAOV,QAChB7W,KAAK2X,WAAWJ,EAAOV,OAAQW,gDAYlCH,MAAQ,oCAGRE,EAAQK,EAAOf,QACfQ,MAAME,EAAO9S,IAAM,CACpBmT,MAAAA,EACA7B,KAAK,EACLc,OAAAA,uCAIIU,UACDvX,KAAKqX,MAAME,EAAO9S,OAAsC,IAA9BzE,KAAKqX,MAAME,EAAO9S,IAAIsR,KAAgB/V,KAAKqX,MAAME,EAAO9S,IAAIoS,yCAGxFU,OACCF,EAAQrX,KAAKqX,MAAME,EAAO9S,WAChC4S,EAAMtB,KAAM,EACLsB,EAAMO,oDAIPC,EAAU7X,KAAK8W,QAAQe,aACxBC,YAAc1Y,OAAOsS,KAAKmG,GAASxX,OAAO,SAACsQ,EAASlM,OAC/CjD,EAAWqW,EAAQpT,GAAI+K,KAAKhO,gBAClCmP,EAAQlM,GAAMlD,gBAAgBC,sBAAgBA,GAAY,GAEnDmP,GACR,gDAIE3Q,KAAK0U,GAAG1F,aAGRoI,MAAMW,mBAELC,EAAKhY,KAAK8W,QAAQmB,SAAS5R,IAAI,SAAC5B,UAC3B6B,EAAK4R,aAAa5R,EAAKwQ,QAAQe,QAAQpT,MAC/CyB,OAAO,SAACpE,eAAgBqC,IAARrC,WAEZ9B,KAAKoX,MAAM3Q,OAAOuR,4CAGbT,MACPvX,KAAKuF,QAAQ4S,YACZA,EAASnY,KAAKuF,QAAQ4S,OAExBA,EAAO,WACFC,OAAOb,EAAQY,EAAO,MAE3BA,EAAOZ,EAAOxU,WACTqV,OAAOb,EAAQY,EAAOZ,EAAOxU,OAC3BoV,EAAOZ,EAAOnB,kBAChBgC,OAAOb,EAAQY,EAAOZ,EAAOnB,qDAI3BmB,cACJ9S,EAAiB8S,EAAjB9S,GAAI+K,EAAa+H,EAAb/H,KAAMlN,EAAOiV,EAAPjV,OACbV,QAAQT,KAAIkX,gBACZnM,QAAQ6H,MAAM,wBAA0B3O,UACjC,OAGNpF,KAAKsX,WAAW7S,GAAK,KAClBiQ,EAAKlF,EAAKkF,GACV9S,QAAQ4N,EAAKkF,IACbA,EAAK,IAAIvT,KACJ8B,WAAWuM,EAAKkF,MACrBA,EAAKlF,EAAKkF,GAAG1U,KAAK8W,QAAQwB,cAAc9I,UAEvC8H,WAAW7S,GAAM,CAClBiQ,GAAAA,EACAtC,SAAUjR,KAAIkX,QAAQ7I,EAAK4C,iBAKZpS,KAAKsX,WAAW7S,GAAhCiQ,IAAAA,GAAItC,IAAAA,SAEXmG,iBAAiB7D,EAAI6C,EAAQvX,KAAK8W,QAAQ0B,YAE1C9D,EAAGtK,KAAK,SACRsK,EAAG1I,IAAI,QAAS,SAAC9K,GACbwF,EAAKX,QAAQwR,EAAQrW,SAGnB8W,EAAK5F,EAAS3L,OAAO3G,KAAK4U,UAE5B9S,QAAQoW,EAAG7S,QAAO6S,EAAG7S,KAAO,IAChC6S,EAAG1V,IAAMA,EACF0V,uCAGET,EAAQV,MACG,WAAhBU,EAAOxU,OACLwU,EAAOlB,QAAgC,IAAvBkB,EAAO/H,KAAK8C,SAAqBiF,EAAO/H,KAAKiJ,aAC9DzY,KAAKqX,MAAME,EAAO9S,KAAuB,aAAhB8S,EAAOxU,KAAqB,CAEtDwU,EAAOrB,MAAMnK,WACR2M,gBAAgBnB,OAEyBS,EAAzCjV,EAAcwU,EAAdxU,KAAMyM,EAAQ+H,EAAR/H,KAAgBmJ,EAAO3Y,KAAKoX,SAE1B,aAATrU,GAAuByM,EAAK4C,aAC5B4F,EAAKhY,KAAK4Y,eAAerB,GAErBV,GAAUjV,QAAQ4N,EAAK8C,oBAClBuG,SAAStB,EAAQS,EAAInB,GACnBmB,OAER,GAAKhY,KAAK8W,QAAQgC,QAAQvB,OAI7BS,EAAKhY,KAAK+Y,cAAcxB,EAAQvX,KAAKgZ,eAAezB,IAChDV,GAAUjV,QAAQ4N,EAAK8C,oBAClBuG,SAAStB,EAAQS,EAAInB,GACnBmB,MAP2B,KAChCxW,EAAWxB,KAAKgZ,eAAezB,GACrCS,EAAKT,EAAO9Q,OAAS8Q,EAAO9Q,OAAOjF,GAAYxB,KAAK+Y,cAAcxB,EAAQ/V,UAQ1D,IAAhBgO,EAAK8C,SACL0F,EAAKW,EAAKM,UAAUjB,EAAIT,SACvBsB,SAAStB,EAAQS,EAAInB,GACnBmB,SAGJhY,KAAKkZ,SAAS3B,mCAGlBA,EAAQpS,UACX2M,WAAWtN,QAAQ,SAAClC,QACE6B,IAAdgB,EAAK7C,IACLiV,EAAOrB,MAAM5T,GAAK6C,EAAK7C,MAGxBiV,EAAOrB,2CAGLqB,UACFvX,KAAKoY,OAAOb,EAAQA,EAAO/H,yCAG3B+H,EAAQ4B,cACR5C,EAAgBgB,EAAhBhB,QAASjU,EAAOiV,EAAPjV,SAEX8W,aAAa7B,OAEdpS,EAAOoS,EAAOrB,MACblP,IAAIuP,GAASjU,IAAI,UAAYA,GAAKgD,MAAM,aAActF,KAAK8W,QAAQ0B,YACnErH,GAAG,aAAc,SAACkI,UAAYjO,EAAK0L,QAAQwC,WAAW/B,EAAQ8B,KAE7DnE,EAAQlV,KAAK8W,QAAQF,WAAWW,UACjC4B,GACDhU,EAAKgM,GAAG+D,EAAMpE,OAASoE,EAAO,SAAChU,GAC3BkK,EAAKrF,QAAQwR,EAAQrW,KACtBoE,MAAM4P,EAAMqE,MAAQ,QAASvZ,KAAK8W,QAAQ0C,YAAYjC,SAExDH,MAAMqC,YAAczZ,KAAKoX,MAAMqC,WAAWlC,EAAQ4B,GAEhDhU,kCAGHoS,EAAQrW,QACP4V,QAAQ/Q,QAAQwR,EAAQrW,0CAGlBqW,cACJ/V,EAAY+V,EAAO/H,KAAnBhO,SAAyBsW,EAAc9X,KAAK8X,YAAYP,EAAO9S,WAEjElD,gBAAgBC,SAUhBsW,YAAYP,EAAO9S,IAAID,QAAQ,SAAAU,IACC,IAA7B1D,EAASlB,QAAQ4E,KAAkBhC,SAASgC,IAAUA,EAAMwU,QAC5DnO,EAAKuL,QAAQ6C,YAAYzU,EAAMwU,UAIhClY,EAAS6E,IAAI,SAAAnB,UACZhC,SAASgC,GAAeA,EACxBA,EAAMwU,OACCnO,EAAK2M,aAAahT,EAAMwU,OAAQnC,SAEtChM,EAAKuL,QAAQ8C,MAAM1U,IAAUA,EAAMnC,MACpCkU,IAAI,kBAAM1L,EAAKuL,QAAQ5G,oBArB3B4H,EAAYtT,QAAQ,SAAAU,IACXhC,SAASgC,IAAUA,EAAMwU,QAC1BnO,EAAKuL,QAAQ6C,YAAYzU,EAAMwU,eAGlC5B,YAAYP,EAAO9S,IAAM,GACvB,0CAoBD8S,EAAQ/V,OACZqY,EAAQ7Z,KAAKyZ,WAAWlC,UAC1BvX,KAAKmW,MAAMoB,EAAOxU,MACX/C,KAAKmW,MAAMoB,EAAOxU,MAAM8W,EAAOrY,GACtCxB,KAAKmW,MAAMoB,EAAOnB,YACXpW,KAAKmW,MAAMoB,EAAOnB,YAAYyD,EAAOrY,GACzCxB,KAAKmW,MAAM3B,KAAK+C,EAAOnB,WAAYyD,EAAOrY,YAIzD,SAAS+W,iBAAiB7D,EAAI6C,EAAQuC,MAC7BpF,EAAGrI,YAEDmD,EAAQ+H,EAAR/H,KACDkC,EAAOtS,OAAOsS,KAAKgD,EAAGrI,QAC5BqF,EAAKlN,QAAQ,SAAAlC,QACe6B,IAApBqL,EAAKlK,MAAMhD,KACXoS,EAAGrI,OAAO/J,GAAOkN,EAAKlK,MAAMhD,OAGL,IAA3BoP,EAAKpR,QAAQ,WACboU,EAAGrI,OAAOnL,MAAQqW,EAAO/H,KAAKtO,OAElCwT,EAAGrI,OAAOwD,WAAaiK,GC5PZ,SAASC,IAAInZ,YAEfoZ,EAAWC,OAAQC,iEACnBD,EAEK1Z,MAAMkB,QAAQwY,KACpBA,EAAS,CAACA,IAFVA,EAASC,EAAM9a,OAAOsS,KAAK9Q,EAAEuZ,WAAavZ,EAAEqZ,SAGzCA,QAGJ,CACHxK,wBACUoI,EAAUjX,EAAEuZ,iBAEX/a,OAAOsS,KAAKmG,GAASxX,OAAO,SAACsQ,EAASlM,OACnC8S,EAASM,EAAQpT,UACvBkM,EAAQ4G,EAAOtW,OAAS4C,WAAW,GAAI,CAAC3C,MAAOqW,EAAO/H,KAAKtO,QAAQA,MAC5DyP,GACR,KAEPyJ,kBAASnZ,OACCsW,EAAS3W,EAAEuZ,UAAUlZ,MACtBsW,SACE1T,WAAW,GAAI,CAAC3C,MAAOqW,EAAO/H,KAAKtO,QAAQA,OAEtD4L,kBAAS7L,EAAOC,OACRuO,EAAWxO,EACV+B,cAAc/B,KACfwO,qBAAaxO,EAAQC,IACzB9B,OAAOsS,KAAKjC,GAAUjL,QAAQ,SAAAlC,OACpBiV,EAAS3W,EAAEuZ,UAAU7X,GACtBiV,IACLA,EAAO/H,KAAKtO,MAAQuO,EAASnN,OAGrC+X,qBAAYpZ,EAAOC,QACV4L,SAAS7L,EAAOC,IAEzBoZ,qBAAYrZ,EAAOC,QACV4L,SAAS7L,EAAOC,IAEzByY,qBAAY1Y,OACJsW,EAAS3W,EAAE2Z,UAAUtZ,MACpBsW,OAED5Q,EAAQ4Q,EAAOb,KAAKpW,QAAQiX,EAAO/H,KAAKgL,gBAC7B,IAAX7T,SAEJ4Q,EAAOb,KAAK/K,OAAOhF,EAAO,IACa,IAAnC/F,EAAEqX,SAAS3X,QAAQiX,EAAO9S,KAC1BzE,KAAK4J,SAEF2N,EAAO/H,KAAKgL,aAEvBC,QAAS,WACL7Z,EAAE8T,GAAGgG,IAAIC,YAAc/Z,EAAE8T,GAAGgG,IAAIC,WAAWC,YAAYha,EAAE8T,GAAGgG,KAC5D9Z,EAAE8T,GAAGmG,YAETZ,OAAQ,kBAAMrZ,EAAEqZ,UAChBa,OAAQ,SAACtL,EAAMuL,EAAOC,OACgD3G,EAA9D4F,EAAS7a,OAAOsS,KAAK9Q,EAAEuZ,WAAYxT,EAAQ/F,EAAEqX,SAASvY,UAEtD8P,EAAKvO,QAAyC,IAAhCgZ,EAAO3Z,QAAQkP,EAAKvO,OAClC,OAAOiL,QAAQ6H,MAAM,UAAGvE,EAAKvO,wBAAwBe,KAAKC,UAAUoC,QAAQmL,IAASpK,cAEnFmS,EAAS3W,EAAE2Z,UAAUQ,GAEvBxD,EACIyD,GACA3G,EAAQkD,EAAO/H,KAAKhO,SACpBmF,EAAQ4Q,EAAO/H,KAAKhO,SAAS9B,SAE7BiH,EAAQ4Q,EAAOb,KAAKpW,QAAQiX,EAAO/H,KAAKgL,YACxCnG,EAAQkD,EAAOb,MAEhBrC,EAAQzT,EAAEyT,MACjBA,EAAM1I,OAAOhF,EAAQ,EAAG,EAAG6I,IAE/ByL,QAAS,SAACzL,EAAMuL,EAAOC,OAC+B3G,EAA9C4F,EAAS7a,OAAOsS,KAAK9Q,EAAEuZ,WAAYxT,EAAQ,KAE3C6I,EAAKvO,QAAyC,IAAhCgZ,EAAO3Z,QAAQkP,EAAKvO,OAClC,OAAOiL,QAAQ6H,MAAM,UAAGvE,EAAKvO,wBAAwBe,KAAKC,UAAUoC,QAAQmL,IAASpK,cAEnFmS,EAAS3W,EAAE2Z,UAAUQ,GAEvBxD,EACIyD,EACA3G,EAAQkD,EAAO/H,KAAKhO,UAEpBmF,EAAQ4Q,EAAOb,KAAKpW,QAAQiX,EAAO/H,KAAKgL,YACxCnG,EAAQkD,EAAOb,MAEhBrC,EAAQzT,EAAEyT,MACjBA,EAAM1I,OAAOhF,EAAO,EAAG6I,IAE3BiJ,gBAAOA,EAAQwB,GACXD,EAAWC,GAAQ,GAAMzV,QAAQ,SAACvD,OACxBsW,EAAS3W,EAAE2Z,UAAUtZ,GACtBsW,IAELxW,KAAKwW,EAAO/H,KAAM,WAAYiJ,GAC9B7X,EAAE4P,QAAQmH,WAAWJ,GAAQ,MAEjC3W,EAAE8W,WAENwD,sBAAazW,OACH8S,EAAS3W,EAAE2Z,UAAU9V,MACtB8S,UACIA,EAAO/H,KAAKiJ,QAEzB0C,oBAAWA,EAAYlB,GACnBD,EAAWC,GAAQ,GAAMzV,QAAQ,SAACvD,OACxBsW,EAAS3W,EAAE2Z,UAAUtZ,GACtBsW,IAELxW,KAAKwW,EAAO/H,KAAM,eAAgB2L,GAClCva,EAAE4P,QAAQmH,WAAWJ,GAAQ,MAEjC3W,EAAE8W,WAEN0D,0BAAiB3W,OACP8S,EAAS3W,EAAE2Z,UAAU9V,MACtB8S,UACIA,EAAO/H,KAAK2L,YAEzBpT,kBAASA,EAAUkS,GACfD,EAAWC,GAAQ,GAAMzV,QAAQ,SAACvD,OACxBsW,EAAS3W,EAAEuZ,UAAUlZ,GACtBsW,GAEL3W,EAAE8T,GAAG3T,KAAKwW,EAAO/H,KAAKlK,MAAO,aAAcyC,MAGnDmN,wBACW9V,OAAOsS,KAAK9Q,EAAEya,UAAUhb,OAAO,SAACsQ,EAASrO,UAC5CqO,EAAQrO,GAAO1B,EAAEya,SAAS/Y,GAAKkN,KACxBmB,GACR,KAEP2K,4BACWlc,OAAOsS,KAAK9Q,EAAE2a,YAAYlb,OAAO,SAACsQ,EAASrO,UAC9CqO,EAAQrO,GAAO1B,EAAE2a,WAAWjZ,GAAKkN,KAC1BmB,GACR,KAEP6K,oBACQA,EAAO,GAAIC,EAAa,UAC5Brc,OAAOsS,KAAK9Q,EAAEuZ,WAAW3V,QAAQ,SAACvD,OACxBsW,EAAS3W,EAAEuZ,UAAUlZ,GAC3Bwa,EAAWxa,GAAS,CAChB8K,sBACWwL,EAAO/H,KAAKtO,OAEvBE,aAAIF,GACAqW,EAAO/H,KAAKtO,MAAQA,GAExB8S,YAAY,EACZE,cAAc,KAGtB9U,OAAO2V,iBAAiByG,EAAMC,GACvBD,GAEXE,eAAgB,eAACpW,yDAAQ,GACrB1E,EAAE8T,GAAG5E,aAAaxK,IAEtBqW,cAAe,eAACrW,yDAAQ,GACpB1E,EAAE8T,GAAG3E,YAAYzK,IAErBlE,IAAK,SAACmL,EAAMtL,EAAOC,GACfN,EAAE8T,GAAG3T,KAAKwL,EAAMtL,EAAOC,IAE3B0I,OAAQ,SAACyK,GACLzT,EAAEsP,WAAWmE,IAEjBuH,uBAAcrW,GACV1B,WAAWjD,EAAE2E,QAASA,QACjBmS,SAAQ,IAEjBmE,kBAASrZ,QACAoZ,cAAc,CAACC,SAAUrZ,KAElCsZ,KAAM,SAAC7a,OACGsW,EAAS3W,EAAE2Z,UAAUtZ,GACvBsW,IACA3W,EAAE4P,QAAQmH,WAAWJ,GAAQ,GAC7B3W,EAAE8W,YAGVA,QAAS,SAACF,GACFA,GACA5W,EAAE4P,QAAQC,gBACd7P,EAAE8W,WAENqE,SAAU,SAAC/M,GACPpO,EAAE8T,GAAG1F,QAAUA,GAEnBgN,aAAc,kBACHpb,EAAEob,cAEbC,kBAAmB,WACfrb,EAAEob,cAAe,GAErBE,WAAY,SAACzX,EAAI+K,EAAM2M,OACb5E,EAAS3W,EAAE2Z,UAAU9V,MACvB8S,SACA4E,EAAQ/c,OAAOsS,KAAKlC,GAAMhL,QAAQ,SAAAlC,GAC9BiV,EAAO/H,KAAKlN,GAAOkN,EAAKlN,KACvBuB,WAAW0T,EAAO/H,KAAMA,GACtB+H,EAAO/H,KAAKgL,YAG3BnW,QAAS,SAACI,OACA8S,EAAS3W,EAAE2Z,UAAU9V,MACvB8S,SACOA,EAAO/H,MAGtB4M,qBAAY/H,EAAO8H,cACf/c,OAAOsS,KAAK2C,GAAO7P,QAAQ,SAAAC,GACvB6B,EAAK4V,WAAWzX,EAAI4P,EAAM5P,GAAK0X,MAGvCE,wBAAe5X,EAAIuN,EAAUR,OACnB+F,EAAS3W,EAAE2Z,UAAU9V,GACvB8S,IACAA,EAAO/H,KAAKwC,SAAWR,EAAQ+F,EAAO/H,KAAKwC,SAASvR,OAAOuR,GAAYA,IAG/EsK,yBAAgBC,EAAW/K,cACvBpS,OAAOsS,KAAK6K,GAAW/X,QAAQ,SAAAC,GAC3BiC,EAAK2V,eAAe5X,EAAI8X,EAAU9X,GAAK+M,MAG/CgL,gBAAO/X,EAAIpB,OACDiT,EAAKtW,KAAKsW,GAAG7R,OACd6R,IAAOA,EAAGjT,GACX,MAAM,IAAIyH,MAAM,QAAU1F,iBACvB,kBACIkR,EAAGjT,SAAHiT,eAGflD,yBACWA,OAAOpT,KAAKwP,OAEvB2B,uBACIvQ,EAAE8T,IAAG1I,wBAETyQ,yBACI7b,EAAE8T,IAAGgI,0BAETC,wBACI/b,EAAE8T,IAAGtK,yBAETwS,iBAAQnY,EAAIqM,WACFwF,EAAKtW,KAAKsW,GAAG7R,sBADDoY,mCAAAA,oBAElBvG,GAAMA,EAAGrQ,YAAHqQ,GAASxF,UAAU+L,KAE7BvG,YAAG7R,OACO8S,EAAS3W,EAAE2Z,UAAU9V,MACvB8S,EAAQ,OAAOA,EAAOjB,IAE9BtE,kBAAS8K,OAgBsBC,SAfvBC,GAAQ,EACR3D,oBACG,CACC4D,QAAS,CACLjL,kBAASlS,GACLc,EAAEwW,MAAMpF,SAAS,SAACnH,GACd/K,GAAQA,EAAK+K,WAIvBjK,EAAEyY,SAER3H,EAAOtS,OAAOsS,KAAK2H,GAASnT,OAAO,SAAAjF,OACzBic,EAAM7D,EAAQpY,UACbV,MAAMkB,QAAQyb,GAAOA,EAAIxd,QAAUkC,QAAQsb,KAClDC,EAAMzL,EAAKhS,OACb0d,EAAU,SAACvS,EAAO5J,GAChB4J,EACIkS,EAAS,EAAGA,IACPI,EAAM,EAAGA,IACbL,GAAS,IAETE,IACDF,GAAS,GACTE,GAAQ,GAEZ/b,GAASmK,EAAKiS,mBAAmBpc,GAAO,KAIhDyQ,EAAKlN,QAAQ,SAAAvD,OACLic,EAAM7D,EAAQpY,GACdV,MAAMkB,QAAQyb,IACdH,EAASG,EAAIxd,OACbwd,EAAI1Y,QAAQ,SAAAmU,GACRA,EAAK3G,SAAS,SAACnQ,UAAMub,EAAQvb,EAAGZ,QAE7Bic,IACPH,EAAS,EACTG,EAAIlL,SAASoL,OAMzBE,cAAe,SAACrc,EAAO6b,GACdlc,EAAEuZ,UAAUlZ,IAEjBL,EAAEwW,MAAMkG,cAAcrc,EAAO6b,IAEjCS,qBAAYtD,OACJpC,EAAUjX,EAAEuZ,UAChBH,EAAWC,GAAQ,GAAMzV,QAAQ,SAAAvD,OACzBsW,EAASM,EAAQ5W,GAChBsW,IACe,WAAhBA,EAAOxU,MAIXnC,EAAEwW,MAAMoG,WAAWjG,GACnB3W,EAAE6c,eAAelG,GACjB3W,EAAE4P,QAAQmH,WAAWJ,GAAQ,IALzBA,EAAO/H,KAAKtO,MAAQqW,EAAOmG,iBAQvCC,gBAAOC,EAAWC,mBACT7L,SAAS,SAACnH,MACPA,EAAO,KACH4E,EAAWlE,EAAKkE,WAChBxM,WAAW2a,GACXA,EAAUnO,EAAUlE,IAEpB3K,EAAE2E,QAAQsW,UAAYjb,EAAE2E,QAAQsW,SAASpM,EAAUlE,GACnD3K,EAAEuW,GAAGlR,MAAM,YAAawJ,EAAUlE,SAGtCsS,GAAUA,EAAOtS,MAI7B8R,4BAAmBpD,cAAQ6D,6DACvB9D,EAAWC,GAAQzV,QAAQ,SAAAvD,GACnB6c,GAAUrS,EAAKsS,sBAAsB9c,OACnCsW,EAAS3W,EAAEuZ,UAAUlZ,GACtBsW,GAEL3W,EAAEwW,MAAMiG,mBAAmB9F,MAGnCwG,+BAAsB9D,GAClBD,EAAWC,GAAQzV,QAAQ,SAAAvD,OACjBoY,EAAUzY,EAAEyY,QAAQpY,GACtBoY,IACI9Y,MAAMkB,QAAQ4X,GACdA,EAAQ7U,QAAQ,SAAAmU,GACZA,EAAK0E,uBAEFhE,GACPA,EAAQgE,yBAKxBW,oBAAW/c,UACAL,EAAEyY,QAAQpY,IAErBgd,IAAK,CACDC,QAAS,eAACA,6DACNtd,EAAE8T,GAAG5E,aAAa,CAACoO,UAAWA,KAElCnW,SAAU,eAACA,6DACPnH,EAAE8T,GAAG5E,aAAa,CAAC/H,WAAYA,KAEnCoW,KAAM,eAACnP,6DACHpO,EAAE8T,GAAG5E,aAAa,CAACqO,OAAQnP,MAGnCoP,SAAU,CACNF,QAAS,eAACA,6DACNtd,EAAE8T,GAAG3E,YAAY,CAACmO,UAAWA,KAEjCnW,SAAU,eAACA,6DACPnH,EAAE8T,GAAG3E,YAAY,CAAChI,WAAYA,KAElCoW,KAAM,eAACnP,6DACHpO,EAAE8T,GAAG3E,YAAY,CAACoO,OAAQnP,MAGlCqP,WAAY,SAACpd,OACHsW,EAAS3W,EAAEuZ,UAAUlZ,GAC3BsW,GAAUA,EAAOrN,YAAcqN,EAAOrN,eC1X3C,SAAS7F,QAAQmL,UAChBvM,WAAWuM,EAAKnL,SACTmL,EAAKnL,UAELmL,MAGM8O,6BAELnH,iCACqBnX,KAAKmX,GAAKA,EAAhCzC,IAAAA,GAAIL,IAAAA,MAAO9O,IAAAA,aAEbgZ,UAAW,OACX7J,GAAKA,OACLnP,QAAUA,OAEVyM,SAAW,QACXvC,SAAW,QACX4J,QAAU,QAEVb,gBAAarU,OAEbqa,OAAOnK,QACP+C,MAAQ,IAAID,EAAGsH,MAAMC,WAAW1e,WAChCwQ,QAAU,IAAI0G,OAAOlX,WAErB2e,SAAS3e,KAAKqU,OAAO,QAErB7D,QAAQoO,uBAERxH,MAAM/F,2DAGRgD,QACE8F,UAAY,QACZkB,SAAW,QACXxD,QAAU,QACV0D,WAAa,QACbtD,SAAW,QACX5D,MAAQA,OACRvQ,0BAAa9D,KAAKqU,YAClB2H,cAAe,OACf6C,UAAY,sCAGVtH,OACDuH,EAAY9e,KAAKmX,GAAG4H,mBACnBD,EAAUvH,EAAOxU,OAAS+b,EAAUvH,EAAOnB,aAAemB,EAAO/H,KAAK0F,OAASqC,EAAOX,yCAG3FpH,UACKxP,KAAK6e,UAAUve,QAAQkP,IAAS,mCAGlC6E,EAAOwC,cACZxC,EAAMhO,IAAI,SAAC2Y,EAAOrY,OACVkQ,IAAU3T,SAAS8b,QAElBA,IAAUA,EAAMjc,KACjB,OAAOmJ,QAAQ6H,MAAM,2BAA6B/R,KAAKC,UAAU+c,EAAQ3a,QAAQ2a,GAASA,GAAS5Z,cAEnGmS,KAEAyH,EAAMtF,WACNnC,EAASyH,EAAMtF,QAGH3C,SAAYQ,EAAO7C,KAAOpO,EAAKoO,KAAMpO,EAAKuR,QAAQN,EAAO9S,IAG9D,CACH8S,EAAO5R,OAAOW,OACVkJ,EAAO+H,EAAO/H,KAClBlJ,EAAK2Y,QAAQzP,GACblJ,EAAK4Y,WAAW1P,QANhB6E,EAAM1N,GAASqY,EAAQ7K,SAAS6K,GAChCzH,EAASjR,EAAK6Y,aAAa7Y,EAAK8Y,UAAUJ,SAQ9CzH,EAASjR,EAAK6Y,aAAa7Y,EAAK8Y,UAAUJ,QAG1Cxd,EAAW+V,EAAO/H,KAAKhO,SAAUgO,EAAO+H,EAAO/H,YAC9ClJ,EAAK+Y,SAAS9H,EAAOtW,QAI1BsW,EAAOV,OAASA,GAAU,KAC1BvQ,EAAKgZ,UAAU/H,GAEVyH,EAAMtF,QACP6F,WAAWP,EAAOzH,GAElBhW,gBAAgBC,IAChB8E,EAAKqY,SAASnd,EAAU+V,GAGvBV,GACDvQ,EAAK2R,SAASvN,KAAK6M,EAAO9S,IAGzB6B,EAAKwS,QAAQvB,IACdnY,OAAOogB,eAAejI,EAAO/H,KAAM,QAASlJ,EAAKmZ,YAAYlI,IAE1DA,IApBHjR,EAAKuY,UAAUnU,KAAKsU,GACb9S,QAAQ6H,MAAM,UAAGvE,EAAKvO,wBAAwBe,KAAKC,UAAUuN,GAAQpK,cAoBjFc,OAAO,SAAAtF,UAAKA,IAAG4D,QAAQ,SAAA5D,GACtBA,EAAE8V,KAAOrC,wCAILkD,oBACD,CACHvD,YAAY,EACZjI,IAAK,kBACMwL,EAAOmI,QAAQhZ,EAAK8S,YAAYjC,KAE3CnW,IAAK,SAACF,GACEwF,EAAKiZ,SAASpI,EAAQrW,KACtBwF,EAAK8J,QAAQmH,WAAWJ,GAAQ,GAChC7Q,EAAKkZ,YAAYrI,EAAQA,EAAOsI,YAAY3e,IAC5CwF,EAAKoZ,YAAYvI,EAAQrW,GACzBwF,EAAKgR,UACLhR,EAAKgO,GAAGzO,MAAM,YAAasR,EAAOtW,MAAOC,EAAOwF,EAAK8R,oDAMxDhJ,UACF,IAAKxP,KAAKmX,GAAGU,QAAQlW,SAAS6N,EAAKzM,MAAMmK,sBAAwB+I,YAAYjW,KAAMwP,EAAM,GAAK9K,8CAG/Fsa,OACAe,EAAMC,UAAWxQ,EAAOnL,QAAQ2a,UAEtC5f,OAAO2V,iBAAiBvF,EAAM,CAC1BgL,WAAYxG,WAAWgL,KAG3B5f,OAAOsS,KAAKqO,GAAKvb,QAAQ,SAAAsP,IACf,IAAIjU,eAAeC,KAAK0P,EAAMsE,IAAI/S,KAAKyO,EAAMsE,EAAGiM,EAAIjM,MAG1DtE,EAAKvO,YAA+CkD,IAAtCnE,KAAKuF,QAAQkK,SAASD,EAAKvO,SACzCuO,EAAKtO,MAAQlB,KAAKuF,QAAQkK,SAASD,EAAKvO,QAE5CuO,EAAKjK,QAAU0a,WAAWzQ,EAAKjK,cAC1B0Z,QAAQzP,QACR0P,WAAW1P,GAETA,kCAGHA,QACC0Q,iBAAiB1Q,EAAMA,EAAK2B,IAAM,IAClCnR,KAAKue,eACD4B,UAAU3Q,qCAIbA,OACA4Q,EAAYpgB,KAAKqgB,UAAU7Q,GAC7BpQ,OAAOsS,KAAK0O,GAAW1gB,OAAS,GAAGyC,OAAOqN,EAAK2B,GAAIiP,sCAGhD5Q,QACF0Q,iBAAiB1Q,EAAMA,EAAKlK,OAAS,6CAG7BkK,EAAM2B,qBACfnR,KAAKuF,QAAQ+a,aAAe9Q,EAAK+Q,SACjCnhB,OAAOsS,KAAKP,GAAI3M,QAAQ,SAAAsP,GAChB7Q,WAAWkO,EAAG2C,MACd3C,EAAG2C,GAAK1I,EAAKmV,OAAO/Q,EAAM2B,EAAG2C,OAElC3C,wCAGGqP,EAAMD,SACOvgB,KAAK0U,GAAGtE,SAASC,UAAjC9J,IAAAA,OAAQiJ,IAAAA,WACR,CACHI,GAAI5P,KAAKwY,WACThJ,KAAAA,EACAgR,KAAMA,EAAKhG,WACXjU,OAAAA,EACAga,OAAQA,GAAU/Q,EAAK+Q,QAAU,mCAIlCC,EAAMC,EAAKF,MACVE,EAAInN,SAAU,IACVtT,KAAKue,SACL,OAAOkC,EACXA,EAAMA,EAAIlN,aAGR3S,EAAIZ,KAEJwC,EAAK,sCAAaqa,2BAAAA,yBACpBA,EAAK6D,QAAQ9f,EAAE0X,cAAckI,EAAMD,IAC5BE,eAAO5D,WAElBra,EAAG8Q,UAAW,EACd9Q,EAAG+Q,SAAWkN,EACPje,oCAGDgN,cACFsB,EAAQ,GAAKqB,EAAiC3C,EAAjC2C,KAAME,EAA2B7C,EAA3B6C,WAAYpR,EAAeuO,EAAfvO,MAAOoC,EAAQmM,EAARnM,SAErC9C,MAAMkB,QAAQ0Q,GAAO,OAAOrB,MAC3B6P,EAAUtO,IAA2BpR,GAASoC,UAC/Csd,GAELxO,EAAK3N,QAAQ,SAAAoc,OACLL,EAAQM,EAAYD,KACpB5d,cAAc4d,KACdC,EAAYD,EAAOvd,KACnBkd,EAASK,EAAOL,QAEfM,OAECC,EAAY1d,iBAAUud,cAAWE,IACjCE,EAAWD,EAAUvd,QAAQ,IAAK,KAElCf,EAAK,8CAAIG,2BAAAA,sBACX4I,EAAKmJ,IAAGzO,eAAM8a,UAAape,OAC3B4I,EAAKmJ,IAAGzO,eAAM,aAAc8a,UAAape,IACrCme,IAAcC,QACdxV,EAAKmJ,IAAGzO,eAAM6a,UAAcne,OAC5B4I,EAAKmJ,IAAGzO,eAAM,aAAc8a,UAAape,MAGjDH,EAAGgR,QAAS,EACZ1C,EAAM+P,GAActV,EAAKhG,QAAQ+a,kBAAiCnc,IAAlByc,EAAOL,OAAwBhV,EAAKgV,OAAO/Q,EAAMhN,EAAI+d,GAAU/d,KAG5GsO,GAzBcA,uCA6BjB9Q,KAAK0U,GAAG7O,OAAS,EACV7F,KAAKwQ,QAAQwQ,YAEftM,GAAG7O,OAAS,EACV,sCAIL0R,OACD9S,EAAyB8S,EAAzB9S,GAAIxD,EAAqBsW,EAArBtW,MAAOoC,EAAckU,EAAdlU,KAAMmM,EAAQ+H,EAAR/H,KAClBxP,KAAK6X,QAAQpT,UAEZoT,QAAQpT,GAAM8S,EAEflU,GACAtC,KAAKf,KAAKub,WAAYlY,EAAMkU,GAE5BvX,KAAK8Y,QAAQvB,UACZ4C,UAAUlZ,GAASsW,EACxBxW,KAAKf,KAAKyP,SAAUxO,EAAOsW,EAAOsI,YAAYrQ,EAAKtO,QACnDH,KAAKf,KAAKgS,SAAU/Q,EAAOuO,EAAKwC,UAAY,IAC5CjR,KAAKf,KAAKqb,SAAUpa,EAAOsW,wCAGpBA,EAAQ8B,QACVA,QAAQ9B,EAAOtW,OAASoY,mCAGxBpY,eAC4BkD,IAA1BnE,KAAKma,UAAUlZ,oCAGjBsW,EAAQrW,UACNc,KAAKC,UAAUsV,EAAO/H,KAAKtO,SAAWc,KAAKC,UAAUf,uCAGpDqW,QACH0J,gBAAgB1J,mCAGjBA,EAAQrW,OACRY,GACC9B,KAAK8Y,QAAQvB,IAAWvX,KAAK2f,SAASpI,EAAQzV,EAAMyV,EAAOmI,QAAQxe,WAC/DsP,QAAQmH,WAAWJ,QACnBqI,YAAYrI,EAAQrW,QACpB8a,cAAe,OACf8D,YAAYvI,QACZ7C,GAAGzO,MAAM,SAAUsR,EAAOtW,MAAOa,EAAK9B,KAAKwY,+CAI9C/T,UACCzE,KAAKma,UAAU1V,IAAOzE,KAAKub,WAAW9W,IAAOzE,KAAK6X,QAAQpT,gDAI3DiQ,EAAK1U,KAAK0U,MAEhBA,EAAG3T,KAAK2T,EAAI,cAAe1U,KAAKuF,QAAQ2b,WACxCxM,EAAG3T,KAAK2T,EAAI,aAAc1U,KAAKuF,QAAQ6Y,UACvC1J,EAAG3T,KAAK2T,EAAI,WAAY1U,KAAKyP,eAGLtL,IAApBnE,KAAKwY,aACLxY,KAAKwY,WAAauB,IAAI/Z,YACrBwY,WAAWhJ,KAAOxP,KAAKqU,WACvBmE,WAAWoI,OAAS5gB,KAAKuF,QAC1BvF,KAAKwY,WAAWG,KAAM,KAChBA,EAAO3Y,KAAKwY,WAAWG,KAC7BvZ,OAAOsS,KAAKiH,GAAMnU,QAAQ,SAACvD,UAChB0X,EAAK1X,UAGhB7B,OAAOogB,eAAexf,KAAKwY,WAAY,OAAQ,CAC3CtX,MAAO,GACP+S,UAAU,EACVD,YAAY,IAGpB5U,OAAO2V,iBAAiB/U,KAAKwY,WAAWG,KAAMvZ,OAAOsS,KAAK1R,KAAKwY,WAAW/I,YAAYpP,OAAO,SAACsQ,EAAS1P,OAC7FsW,EAAS9L,EAAK8O,UAAUtZ,GACxBgP,EAASxE,EAAKgU,YAAYlI,UAChCtH,EAAOiE,cAAe,EACtBvD,EAAQ1P,GAASgP,EACVU,GACR,4CAGQ4G,cACL7C,EAAK1U,KAAK0U,GAEhBtV,OAAOsS,KAAK6F,EAAO/H,MAAMhL,QAAQ,SAAClC,OACkE,IAA5F,CAAC,QAAS,OAAQ,QAAS,KAAM,WAAY,OAAQ,SAAU,WAAWhC,QAAQgC,SAAoC6B,IAArBoT,EAAO/H,KAAKlN,OAE7GiV,EAAO7R,MAAMgF,KAAKgK,EAAGzF,OAAO,kBAAMsI,EAAO/H,KAAKlN,IAAM,SAAC0D,EAAGuI,QAC1CpK,IAANoK,IACJ7C,EAAK6S,UAAW,EACJ,WAARjc,GAAsBiV,EAAOlB,QAAgC,IAAvBkB,EAAO/H,KAAK8C,OAErC,aAARhQ,EACLoJ,EAAKsG,SAASuF,EAAOtW,OAAS+E,EACjB,UAAR1D,EACLoJ,EAAKwT,WAAW3H,EAAO/H,MACV,OAARlN,EACLoJ,EAAKuT,QAAQ1H,EAAO/H,MACP,SAARlN,GACLoJ,EAAKyU,UAAU5I,EAAO/H,MARtB+H,EAAOd,UAAU/R,YAAY,GAUjCgH,EAAK8E,QAAQmH,WAAWJ,GACxB7L,EAAK6S,UAAW,IACjB,CAACrP,KAAc,aAAR5M,EAAoB6e,WAAW,KAC3C,MAAO3gB,8CAMF+W,IACNvX,KAAK8Y,QAAQvB,IAAWA,EAAO/H,KAAK0C,cAChC+O,gBAAgB1J,2CAKbA,cACN6J,EAAWC,WAAW9J,GAAS4F,EAAMiE,EAAS1hB,OAAQiX,EAAWY,EAAOZ,YACzEwG,sBACItc,OACCqR,EAAUkP,EAASvgB,OAAeqR,EAAQjC,QAAW,SAAAnO,UAAOA,IAAQoQ,EAAQhR,QACrEqW,EAAO/H,KAAKtO,MAAO4K,EAAK0M,YAAa,IAC1C7B,EAAU,IACNA,EAASnV,WAAa0Q,EAAQ1C,KAC9B,iBAEA8R,cAAc/J,OAEhB/H,EAAO,CACTzM,KAAM,aACNuP,QAAQ,EACR9Q,SAAU0Q,EAAQ1C,aAGtB+H,EAAOb,KAAK/K,OAAO4L,EAAOb,KAAKpW,QAAQiX,EAAO/H,KAAKgL,YAAc,EAAG,EAAGhL,GACvE+H,EAAOZ,SAAWnH,EAClB1D,EAAK4I,GAAGzO,MAAM,UAAWsR,EAAO/H,KAAKgL,WAAY1O,EAAK0M,YACtDjB,EAAOV,QAAU/K,EAAK0E,QAAQmH,WAAWJ,EAAOV,QAChD/K,EAAK4L,uBAnBJ7W,EAAI,EAAGA,EAAIsc,EAAKtc,IAAK,SAArBA,uCAuBL8V,IACA2K,cAAc/J,QACT7C,GAAGzO,MAAM,UAAWsR,EAAO/H,KAAKgL,WAAYxa,KAAKwY,iBACjDd,+DAKHhD,EAAK1U,KAAK0U,GAChBtV,OAAOsS,KAAK1R,KAAK6X,SAASrT,QAAQ,SAACC,OAC3B8S,EAASjL,EAAKuL,QAAQpT,GACE,IAAxB8S,EAAO7R,MAAMhG,QAAc4M,EAAKiV,eAAehK,GACnDjL,EAAKmR,eAAelG,GACpBA,EAAOjB,GAAK5B,EAAGhI,MAAM6K,EAAOhB,UAAY,QAEZpS,IAAxBoT,EAAOmG,eACPnG,EAAOmG,aAAe7Z,WAAW,GAAI,CAAC3C,MAAOqW,EAAO/H,KAAKtO,QAAQA,OAErEqW,EAAO/J,SAAW+J,EAAO/J,kDAKvBA,EAAUxN,KAAKuF,QAAQiI,aAExBgU,gBAELhU,GAAWA,EAAQxN,KAAKwY,iBACnBrB,GAAGlR,MAAM,UAAWjG,KAAKwY,iDAIxBiJ,EAAWzhB,KAAKuF,QAAQkc,cAEzBD,gBAELC,GAAYA,EAASzhB,KAAKwY,iBACrBrB,GAAGlR,MAAM,YAAajG,KAAKwY,gDAGxBjB,EAAQrW,OACTuD,EAAmB8S,EAAnB9S,GAAIxD,EAAesW,EAAftW,MAAOoC,EAAQkU,EAARlU,KAAgBsD,EAAQ3G,KAAKiY,SAAS3X,QAAQmE,UAEhEid,UAAUnK,EAAQrW,GAClBG,KAAKrB,KAAK6X,QAASpT,IAEJ,IAAXkC,QACKsR,SAAStM,OAAOhF,EAAO,GAG3B3G,KAAKma,UAAUlZ,KAChBI,KAAKrB,KAAKgS,SAAU/Q,GACpBI,KAAKrB,KAAKyP,SAAUxO,GACpBI,KAAKrB,KAAKma,UAAWlZ,GACrBI,KAAKrB,KAAKqb,SAAUpa,IAGpBoC,GAAQrD,KAAKub,WAAWlY,IACxBhC,KAAKrB,KAAKub,WAAYlY,GAGtBrD,KAAKqZ,QAAQ9B,EAAOtW,QACpBI,KAAKrB,KAAKqZ,QAASpY,GAEhBsW,yCAIF7C,GAAG1E,8CAGDqE,cACDK,EAAK1U,KAAK0U,OACXL,EAAO,OAAOrU,KAAKkQ,WAAWlQ,KAAKqU,OACnCrU,KAAK8D,OAAOpE,QAAQM,KAAKwY,WAAWd,eACpC5T,0BAAauQ,OAEZwD,oBAAc7X,KAAK6X,SACnBpI,EAAWzP,KAAKwY,WAAW/I,gBAC5B+O,OAAOnK,QACPsK,SAAStK,GAAO,GACrBjV,OAAOsS,KAAKmG,GAAS3R,OAAO,SAAAzB,eAA2BN,IAArBsI,EAAKoL,QAAQpT,KAC1CD,QAAQ,SAAAC,UAAMgI,EAAKkN,YAAY9B,EAAQpT,GAAKgL,EAASoI,EAAQpT,GAAIxD,eACjEuP,QAAQoO,uBACRnP,2BAAezP,KAAKyP,eACpBjJ,UAELkO,EAAG9E,GAAK5P,KAAKwY,gBACRhI,QAAQC,qBACRiH,UAELhD,EAAGlI,UAAU,WACTC,EAAK7C,+CAKD2N,EAAQrW,GAChBH,KAAKf,KAAKyP,SAAU8H,EAAOtW,MAAOC,uCAG1BqW,UACDvX,KAAKyP,SAAS8H,EAAOtW,+CAIrB7B,OAAOsS,KAAK1R,KAAKyP,0CAGpB8H,UACIA,EAAOlB,eAKhB,SAASqL,UAAUnK,EAAQrW,GAC1BqW,EAAOZ,UACP2K,cAAc/J,GAClBA,EAAO7R,MAAMlB,QAAQ,SAACmd,UAAYA,MAClCpK,EAAO7R,MAAQ,GACf6R,EAAOR,SAAU,EACjBQ,EAAOb,KAAO,GACdtX,OAAOogB,eAAejI,EAAO/H,KAAM,QAAS,CACxCtO,MAAAA,IAIR,SAAS+e,WAAWjO,UACTzR,MAAMkB,QAAQuQ,GAAYA,EAAW,GAGhD,SAASqP,WAAW9J,OACVrF,EAAUqF,EAAO/H,KAAK0C,SAAW,UACnClP,cAAckP,GAAiB,CAACA,GACxBA,EAGhB,SAASoP,cAAc/J,OACb5Q,EAAQ4Q,EAAOb,KAAKpW,QAAQiX,EAAOZ,WAC1B,IAAXhQ,GACA4Q,EAAOb,KAAK/K,OAAOhF,EAAO,GAC9B4Q,EAAOZ,SAAW,KAItB,SAASqJ,gBACE,CACHhO,SAAU,GACVC,IAAK,GACLE,KAAM,GACN7M,MAAO,GACP6L,GAAI,GACJ5L,QAAS,GACToD,WAAOxE,EACPjD,MAAO,KACPD,MAAO,GACPoC,UAAMc,EACNyd,eAAWzd,GAInB,SAASob,WAAW/P,EAAM+H,GACtBnY,OAAO2V,iBAAiBvF,EAAM,CAC1BqS,UAAW7N,WAAWuD,EAAOtW,OAC7ByY,OAAQ1F,WAAWuD,GAAQ,KC7jBnC,IAAMlS,OAAO,sBAEE,CACXhC,KAAMgC,OACNwH,YAAY,EACZvH,MAAO,CACH9D,SAAUjB,OAEdkG,gBAAO7F,EAAG6E,UACCA,EAAIjE,WCURsgB,KAAyB,oBAAXC,QAA0BA,OAAO5gB,IAAM4gB,OAAO5gB,IAAMA,IAE9D,SAAS6gB,iBAAiBvD,OAE/BnP,qBACG0G,SAAS3S,KAAO2S,UAClB6B,EAAU,GAAIjF,EAAQ+B,eAAgBsN,EAAexD,EAAMyD,YAAa/c,EAAO,GAClF4Z,EAAc,YAETO,EAAU7a,EAAI8S,GACnB9S,EAAK9C,SAAS8C,GACdoT,EAAQpT,EAAGyI,qBAAuBqK,EAClClI,EAAWuD,MAAMnO,GAAM+N,eAAe/N,YAOjC0a,gKACuBlJ,0BAIvBqF,EAAU7W,EAAI6W,OAEb6G,GADN1d,EAAK9C,SAAS8C,IACCyI,0BACH,gBAARiV,GAAiC,eAARA,EAClBC,SACOje,IAAdmX,EACOhM,EAAW7K,QAElB6K,EAAW7K,GAAM6W,YAGhB+G,EAAYzB,EAAQ0B,GACrBnf,OAAOmf,EAASpB,aAChBoB,EAASpB,UAAY,CAAC/C,KAAMmE,EAASpB,YAErC/d,OAAOmf,EAASlE,YAChBkE,EAASlE,SAAW,CAACD,KAAMmE,EAASlE,eAEpC7Y,EAAU1B,WAAW+c,EAAQ0B,UAEjCvhB,KAAKwE,EAAS,KAAOA,EAAQ+Q,GAEtB3S,UAAU4B,EAAQ+Q,IACf/Q,EAAQ+Q,GACRpP,SAASqb,cAAchd,EAAQ+Q,IAHnCyL,OAAO7a,SAASsb,MAMfjd,WAGF6c,WACEN,KAAK3f,OAAOiN,YAAYC,EAAYC,aAItCmT,EAAS5S,GACd1N,OAAO0N,EAAY,CACf6S,QAASjE,EAAMiE,QACfC,GAAIlE,EAAMkE,GACV/P,MAAAA,EACA0I,UAAAA,EACAgE,UAAAA,EACAH,aAAAA,EACAha,KAAAA,EACAgP,SAAAA,SACAC,UAAAA,UACAgD,wBACWgL,KAEXzO,mBAAUC,UACCD,UAAUC,eAKpBW,EAAOF,EAAO9N,OACbqc,EAAM,IAAId,KAAK,CACjB3c,sBACW,CAACqK,KAAM6E,EAAO9N,OAAQ5C,UAAU4C,GAAU,CAAC+P,GAAI/P,GAAUA,IAEpEE,oEAC4B,aAAYzG,KAAK6iB,oBAGjDD,EAAIE,SACGF,MAGLvT,wBACUgF,OAAO9O,yDAAU,gCACpBiT,gBAAarU,OACbsa,MAAQA,OACR5G,QAAUA,OACVkH,YAAcA,OACdrK,QAAKvQ,OACLkQ,MAAQ9T,MAAMkB,QAAQ4S,GAASA,EAAQ,QACvC9O,QAAU8c,EAAYxe,WAAW,CAAC4L,SAAU,IAAKwS,GAAe1c,6DAG5DmP,QACJA,GAAKA,OACLzE,OAAS,IAAIqO,OAAOte,6CAIpBiQ,OAAOzJ,+CAILxG,KAAKiQ,OAAOuI,mDAIZxY,KAAKiQ,OAAO+Q,6CAId/Q,OAAOzC,wCAGVqT,kCAAckC,mCAAAA,oBACZ/iB,KAAKgjB,iBACAA,SAAQ/c,4BAAY4a,WAAgBkC,YAExCrO,IAAGzO,eAAM4a,UAAckC,qCAGlB1O,OAAO4O,yDAAO,GAAIpM,yCAExB+L,EAAMrO,EAAOF,EAAO4O,GAElB3c,EAAQsc,EAAIlW,MAAMyK,GAAGtH,kBAC3BvJ,EAAMuQ,OAASA,EACfvQ,EAAMf,QAAQ+Q,GAAG7O,YAAYmb,EAAIlI,KAE1BpU,EAAM2J,OAAOuI,2CAGTrX,EAAKoE,MACZA,GAAWvC,cAAcuC,IACzB8c,EAAYJ,EAAc1c,IAEG,IAA7BpE,EAAI+hB,sBACR/hB,EAAI+hB,sBAAuB,EAC3BpB,KAAO3gB,MAEDgiB,EAAc,SAAU9O,OAAOlO,yDAAM,UAChCkJ,EAAWkF,OAAOF,EAAOlO,EAAKnG,OAGzCyiB,EAASU,GAEThiB,EAAIvB,UAAUujB,YAAcA,EAE5BhiB,EAAIma,UAAUnM,eAAgBiT,KAC9BjhB,EAAIma,UAAUtF,SAAS3S,KAAMye,KAAK3f,OAAO6T,yCAGjC3B,OACJuO,EAAMrO,EAAOF,yDADK,IACSxE,EAAa+S,EAAIlW,MAAMyK,GAAGtH,iBAElD,CACHuT,eAAM1I,UACEA,GAAO/W,UAAU+W,KACjB7K,EAAWtK,QAAQ+Q,GAAKoE,GAC5B7K,EAAWtK,QAAQ+Q,GAAG7O,YAAYmb,EAAIlI,KAC/B7K,EAAWI,OAAOuI,YAE7B6K,kBACIxT,EAAWtK,QAAQ+Q,GAAGsE,YAAYgI,EAAIlI,MAE1CD,wBACS4I,SACLT,EAAI/H,YAERjL,GAAIC,EAAWI,OAAOuI,4BAKlCiK,EAASpT,GAGToP,EAAMnP,WAAW9K,QAAQ,SAAA8W,GACrBjM,EAAWiM,UAAUA,EAAUjY,KAAMiY,KAGzCmD,EAAM5G,QAAQrT,QAAQ,gBAAEnB,IAAAA,KAAMkU,IAAAA,OAC1BlI,EAAWiQ,UAAUjc,EAAMkU,KAG/BnY,OAAOsS,KAAK+M,EAAM6E,QAAQ9e,QAAQ,SAAAnB,GAC9BgM,EAAWuD,MAAMvP,GAAQob,EAAM6E,OAAOjgB,KAGtCob,EAAMM,aACN3f,OAAOsS,KAAK+M,EAAMM,aAAava,QAAQ,SAACnB,UAzL1BoB,EAyL4CpB,EAzLxC6R,EAyL8CuJ,EAAMM,YAAY1b,QAxLlF0b,EAAYta,EAAGyI,qBAAuBgI,OADxBzQ,EAAIyQ,IA4Lf,CACH7F,WAAAA,EACAkU,QAASlU,EAAWkU,aC3NPC,+BAELvT,gCACH6G,QAAU7G,OACVyE,GAAKzE,EAAOyE,QACZ+J,MAAQze,KAAK8W,QAAQK,GAAGsH,WACxBlZ,QAAU0K,EAAO1K,aACjB4Q,MAAQ,IAAIZ,MAAMvV,KAAK0U,SACvBwB,MAAQ,IAAI9E,WACZvL,OAASnB,gBACT6R,uBAAkBvW,KAAK6F,yEAIrB7F,KAAK0U,GAAGhI,MAAM1M,KAAKuW,6CAIrB/F,QAAUxQ,KAAK8W,QAAQtG,0CAGtB+G,OAAQtW,yDAAQ,MAClBgR,EAAMsF,EAAO/H,KAAKvO,IAAU,GAAIwiB,EAAO,GAAIC,EAAO,GAAIvL,EAASnY,KAAKuF,QAAQ4S,cAE3EA,GAGDA,EAAO,OACPsL,EAAOtL,EAAO,KAAKlX,IAAU,IAG7BkX,EAAOZ,EAAOxU,MACd2gB,EAAOvL,EAAOZ,EAAOxU,MAAM9B,IAAU,GAC9BkX,EAAOZ,EAAOnB,cACrBsN,EAAOvL,EAAOZ,EAAOnB,YAAYnV,IAAU,IAE/CgR,EAAM3N,eAAe,GAAImf,EAAMC,EAAMzR,IAX1BA,2HC3Bb5M,OAAO,qBAEE,CACXhC,KAAMgC,OACNC,MAAO,CACHkK,KAAMpQ,OACNiV,MAAO9T,MACPojB,OAAQrb,OACRsb,OAAQ,CACJ7gB,KAAM+E,QACNtC,SAAS,GAEbqK,WAAYzQ,OACZykB,IAAK,CACD9gB,KAAMuF,OACN9C,QAAS,GAEbse,IAAK,CACD/gB,KAAMuF,OACN9C,QAAS,GAEbtE,MAAO,CACH6B,KAAMxC,MACNiF,QAAS,iBAAM,KAEnBuC,SAAU,CACNhF,KAAM+E,QACNtC,SAAS,GAEbue,SAAU,CACNhhB,KAAMuF,OACN9C,QAAS,KAGjBL,sBACW,CACHoB,OAAQjC,eAAe,GAAItE,KAAK6P,WAAW+Q,QAAU,GAAI,CACrDM,WAAW,EACX9C,UAAU,EACV5Q,aAASrJ,EACTsd,cAAUtd,IAEdgZ,IAAK,EACL6G,UAAW,GACXC,QAAS,KAGjBC,SAAU,CACNC,2BACQnkB,KAAKwP,KAAa,CAACxP,KAAKwP,MACnBxP,KAAKqU,MAAcrU,KAAKqU,MAC1B,KAGf3O,MAAO,CACHqC,kBAAS/B,OACCzB,EAAMvE,KAAKikB,QACjB7kB,OAAOsS,KAAKnN,GAAKC,QAAQ,SAAAsP,GACrBvP,EAAIuP,GAAG/L,SAAS/B,MAGxB9E,MAAO,CACHkjB,iBAAQpe,cACA0L,EAAOtS,OAAOsS,KAAK1R,KAAKgkB,WAAYK,EAAQ3S,EAAKhS,OAAQyd,EAAMkH,EAAQre,EAAEtG,UACzEyd,EAAM,EAAG,KACJ,IAAItc,EAAIsc,EAAKtc,EAAI,EAAGA,SAChByjB,cAEJ,IAAIzjB,EAAI,EAAGA,EAAIwjB,EAAOxjB,SAClBiM,SAAS9M,KAAKikB,QAAQvS,EAAK7Q,IAAKmF,EAAEnF,QAExC,IACCsc,EAAM,EAAG,KACJ,IAAItc,EAAI,EAAGA,EAAIsc,EAAKtc,SAChB0jB,WAAW7S,EAAK2S,EAAQxjB,EAAI,SAEhCwY,UAGTrT,EAAExB,QAAQ,SAAC1C,EAAKjB,GACZyF,EAAKwG,SAASxG,EAAK2d,QAAQvS,EAAK7Q,IAAKmF,EAAEnF,QAInDqO,MAAM,IAGdpJ,QAAS,CACL2J,+BACUzJ,EAAI5G,OAAOsS,KAAK1R,KAAKikB,SAAS5d,IAAI,SAAA/D,UAC7BoE,EAAKud,QAAQ3hB,GAAKmN,kBAExBxJ,MAAM,QAASD,QACfC,MAAM,SAAUD,IAEzB8G,kBAAS8C,EAAI1O,MACLlB,KAAKwP,KAAM,KACLyK,EAASrK,EAAGqK,aACbA,EAAO,GAAI,OAChBrK,EAAG9C,SAASmN,EAAO,GAAI/Y,QAEvB0O,EAAG9C,SAAS5L,IAGpBojB,iBAAQnS,cACE3C,EAAOxP,KAAKmU,gBACbpT,KAAKf,KAAKgkB,YAAahkB,KAAKmd,IAAK3N,GAClC2C,GACAnS,KAAKwM,UAAU,kBAAMpB,EAAKnF,MAAM,MAAOuJ,EAAMpQ,OAAOsS,KAAKtG,EAAK4Y,WAAWtkB,OAAS,MAE1F8kB,eAAM3jB,EAAGyB,EAAKsN,QACLqU,QAAQ3hB,GAAOsN,OACf9C,SAAS8C,EAAI5P,KAAKkB,MAAML,SACxBwY,eACApT,MAAM,cAAe2J,EAAIxQ,OAAOsS,KAAK1R,KAAKgkB,WAAW1jB,QAAQgC,SAC7DmN,YAET4J,mCACSpT,MAAM,aAAc7G,OAAOsS,KAAK1R,KAAKikB,SAAS5d,IAAI,SAAAyN,UAAKvI,EAAK0Y,QAAQnQ,OAE7EyQ,oBAAWjiB,EAAK6P,cACNxL,EAAQvH,OAAOsS,KAAK1R,KAAKgkB,WAAW1jB,QAAQgC,QAC7CmiB,QAAQzkB,KAAKgkB,UAAW1hB,QACxBmiB,QAAQzkB,KAAKikB,QAAS3hB,GACvB6P,GACAnS,KAAKwM,UAAU,kBAAMf,EAAKxF,MAAM,SAAUU,MAElDwN,2BACWC,UAAUpU,KAAKmkB,WAE1BO,gBACM1kB,KAAK+H,UAAa/H,KAAKskB,SAAQ,IAErCK,aAAIriB,GACItC,KAAK+H,gBACJwc,WAAWjiB,GAAK,QAChB+W,eACA5J,aAETmV,iBAAQtiB,qDACeA,SAAa,wDACRtC,KAAK+jB,8BAAqB/jB,KAAK+H,SAAW,4BAA8B,yBAClF/H,KAAK0kB,QAEvBG,iBAAQviB,gEACeA,SAAa,mDACRtC,KAAK+jB,8BAAqB/jB,KAAK+H,SAAW,4BAA8B,uCAClF,kBAAM2D,EAAKiZ,IAAIriB,QAEjCwiB,kBAAST,EAAO1d,EAAOrE,qBACftC,KAAK+kB,aAAanB,OAAe5jB,KAAK+kB,aAAanB,OAAO,CAC1DS,MAAAA,EACA1d,MAAAA,EACA+N,GAAI1U,KACJsC,IAAAA,EACAqiB,IAAK,kBAAM7Y,EAAK6Y,IAAIriB,IACpBoiB,IAAK1kB,KAAK0kB,MAEA,IAAV/d,EACO,CAAe,IAAb3G,KAAK6jB,KAAaQ,GAASrkB,KAAK6jB,IAAO,KAAO7jB,KAAK4kB,QAAQtiB,GAAoB,IAAbtC,KAAK8jB,KAAaO,EAAQrkB,KAAK8jB,IAAO9jB,KAAK6kB,QAAQviB,GAAO,MAC9HqE,GAAS3G,KAAK8jB,IACd9jB,KAAK6kB,QAAQviB,QADjB,GAIX8d,mBAAU/c,EAAMwZ,EAAMlW,EAAOrE,QACpB2D,kBAAM5C,6BAASwZ,IAAM7c,KAAKikB,QAAQ3hB,GAAMqE,OAGrDH,uBACU7G,GAAKK,KAAK2jB,QAAU,GAAK3jB,KAAKkB,MAAMxB,UACtCC,EAAI,MACC,IAAIkB,EAAI,EAAGA,EAAIlB,EAAGkB,SACdK,MAAMwJ,KAAK,QAGnB,IAAI7J,EAAI,EAAGA,EAAIb,KAAKkB,MAAMxB,OAAQmB,SAC9ByjB,WAGb7d,4CACUiL,EAAOtS,OAAOsS,KAAK1R,KAAKgkB,WACxBJ,EAAS5jB,KAAK4jB,cACG,IAAhBlS,EAAKhS,OACPM,KAAK+kB,aAAavf,QAAWxF,KAAK+kB,aAAavf,QAAQ,CACpDkP,GAAI1U,KACJ0kB,IAAK1kB,KAAK0kB,iBACA,cAAe,wDACL1kB,KAAK+jB,mDAA0C/jB,KAAK+H,SAAW,8BAAgC,wCACzG/H,KAAK0kB,oBACT,QAAQhT,EAAKrL,IAAI,SAAC/D,EAAKqE,OACvB6I,EAAOlD,EAAK0X,UAAU1hB,kCACR,cAAc,YAAYA,QACpC,uGACOshB,EAAS,GAAK,iDACZtX,EAAKmD,qBACFnD,EAAKmD,qBACLnD,EAAKmD,sBACJ,SAACpM,8BAASwZ,mCAAAA,2BAASvQ,EAAK8T,UAAU/c,EAAMwZ,EAAMlW,EAAOrE,YACxD,SAACsN,UAAOtD,EAAKkY,MAAM7d,EAAOrE,EAAKsN,iBAAWJ,SAC9ClD,EAAK/F,cAChBqd,yBAAsB,OAAS,OAAS,KAAItX,EAAKwY,SAASpT,EAAKhS,OAAQiH,EAAOrE,KAAgB,wBClMpG,CACX0iB,SACArY,MACAsY,MACAC,OACA/X,KACAgB,OACAgX,OCdiB5N,4JAAetB,yDAEzBzU,cACG2D,EAAOnF,KAAKwQ,QAAQiJ,WAAWzZ,MAAM,GAAM+L,aAC1C/L,KAAKmW,MAAM6O,SAAS,CACvB1f,MAAO,CACHG,IAAKN,EACLpC,KAAMoC,EAAKG,MAAMvC,KACjBwC,QAASvF,KAAKwP,KAAKjK,QACnBrE,MAAOlB,KAAK8W,QAAQ0C,YAAYxZ,MAChCwB,SAAAA,GAEJ2P,GAAI,CACAiU,MAAO,SAACpf,GACJM,EAAKkK,QAAQzK,QAAQO,EAAMN,gBCdzC3C,KAAO,sBAEE,CAACkU,OAAAA,OAAQlU,KAAAA,MCFlBgiB,gBAAkB,CACpBC,KAAM,aACNC,MAAO,UACPC,SAAU,sBACVC,KAAM,UACNC,UAAW,WACXC,UAAW,aACXC,WAAY,UACZC,cAAe,sBACfC,KAAM,QAGWC,4JAAe9P,6DAGtB3Q,EAAQtF,KAAKwP,KAAKlK,MACnBA,EAAM0gB,cAAa1gB,EAAM0gB,YAAcX,gBAAgB/f,EAAMvC,OAASsiB,gBAAe,eChB5FhiB,OAAO,wBAGE,CAACkU,OAAAA,OAAQlU,KAAAA,QCFH0iB,8JAAe9P,yDAEzBzU,OACG2D,EAAOnF,KAAKwQ,QAAQiJ,WAAWzZ,MAAMsF,MAAM,QAAStF,KAAKiB,cAExDjB,KAAKmW,MAAMxJ,MAAMxH,EAAM3D,6CAIzB8U,GAAGpM,YAAclK,KAAKsW,GAAGpM,sBCVhC7G,OAAO,gBAGE,CAACkU,OAAAA,SAAQlU,KAAAA,QCHlBA,OAAO,SAEPkU,8JAAetB,iEAEN,mBAIA,CAACsB,OAAAA,SAAQlU,KAAAA,QCNH0iB,8JAAe9P,6DAEvB3Q,EAAStF,KAAKwP,KAAdlK,MACDA,GAASA,EAAM2gB,UAAY3gB,EAAM2gB,SAASC,SAC1CnlB,KAAKuE,EAAO,OAAQA,EAAM2gB,SAASC,SAAW,YCNpD7iB,OAAO,cAGE,CAACkU,OAAAA,SAAQlU,KAAAA,QCHH0iB,8JAAe9P,8DACpB/U,UACDlB,KAAKwP,KAAKjK,QAAQW,OAAO,SAACC,UAAQA,EAAIjF,QAAUA,IAAOb,OAAO,SAACsQ,EAASxK,UAAQA,EAAIC,OAAO,oCAG9F+f,UACGnmB,KAAKwP,KAAKjK,QAAQW,OAAO,SAACC,UAAQA,EAAIC,QAAU+f,IAAY9lB,OAAO,SAACsQ,EAASxK,UAAQA,EAAIjF,OAAO,mCAGpGM,UACIxB,KAAKmW,MAAM8O,MAAMjlB,KAAKwQ,QAAQiJ,WAAWzZ,MAAMsF,MAAM,SAC7CtF,KAAKwP,KAAKjK,UACrB/D,YCZN6B,OAAO,gBAEE,CAACkU,OAAAA,SAAQlU,KAAAA,QCDH0iB,8JAAe9P,yDAEzBzU,UACIxB,KAAKmW,MAAM+O,OAAOllB,KAAKwQ,QAAQiJ,WAAWzZ,MAAMsF,MAAM,UAAWtF,KAAKwP,KAAKjK,SAAU/D,YCJ9F6B,OAAO,kBAGE,CAACkU,OAAAA,SAAQlU,KAAAA,QCFH0iB,8JAAe9P,8DACpB/U,OACJsO,EAAOxP,KAAKwP,KAAMxL,EAAQzD,MAAMkB,QAAQP,GAAQoE,EAAQkK,EAAKlK,MAAOwe,EAAMxe,EAAMwe,KAAO,SAEvE,IAAhBxe,EAAM8gB,MACOpiB,EAAQ9C,EAAQ,CAAC4iB,EAAMuC,WAAWnlB,IAAU4iB,GAE5C9f,EAASqiB,WAAWnlB,EAAM,KAAO4iB,EAAOuC,WAAWnlB,YCRtEmC,OAAO,gBAGE,CAACkU,OAAAA,SAAQlU,KAAAA,QCHHkU,8JAAetB,yDACzBzU,UACIxB,KAAKmW,MAAMmQ,OAAOtmB,KAAKwQ,QAAQiJ,WAAWzZ,MAAM+L,MAAOvK,YCFhE6B,OAAO,iBAGE,CAACkU,OAAAA,SAAQlU,KAAAA,QCHH0iB,8JAAe9P,6DAGtB3Q,EAAQtF,KAAKwP,KAAKlK,MACnBA,EAAM0gB,cAAa1gB,EAAM0gB,YAAc,qBCJ9C3iB,OAAO,wBAGE,CAACkU,OAAAA,SAAQlU,KAAAA,QCFH0iB,8JAAe9P,6DAGtB3Q,EAAQtF,KAAKwP,KAAKlK,MACpB1D,QAAQ0D,EAAMihB,UAAUxlB,KAAKuE,EAAO,UAAW,MAC/C1D,QAAQ0D,EAAMA,QAAQvE,KAAKuE,EAAO,QAAS,CAC3Cc,MAAO,yCAIR5E,cACG2D,EAAOnF,KAAKwQ,QAAQ4I,aAAapZ,MAAM+L,aACtC/L,KAAKmW,MAAMhJ,KAAK,CACnB7H,MAAO,CACHG,IAAKN,EACL3D,SAAAA,EACAN,MAAOlB,KAAK8W,QAAQ0C,YAAYxZ,MAChC+C,KAAMoC,EAAKG,MAAMvC,MAErBiE,IAAKhH,KAAKuW,QACVjU,IAAKtC,KAAKsC,IACV6O,GAAI,CACAiU,MAAO,SAAClkB,GACJoF,EAAKkK,QAAQzK,QAAQO,EAAMpF,gBCxBzCmC,OAAO,cAEE,CAACkU,OAAAA,SAAQlU,KAAAA,QCDH0iB,8JAAe9P,yDAEzBzU,cAEGiE,EAAMzF,KAAKwQ,QAAQ4I,aAAapZ,MAAM+L,MACrCzJ,EAAgBtC,KAAhBsC,IAAKiU,EAAWvW,KAAXuW,eACL9Q,EAAIH,MAAMyE,aACXzE,EAAQ,CACV0I,WAAYvI,EAAIH,MAAM0I,WACtB3F,UAAW5C,EAAIH,MAAMkhB,MACrB/d,WAAYhD,EAAIH,MAAMmD,WACtBC,WAAYjD,EAAIH,MAAMoD,WACtBU,SAAU3D,EAAIH,MAAM8D,SACpBR,YAAanD,EAAIH,MAAMsD,YACvBc,YAAajE,EAAIH,MAAMoE,YACvBxI,MAAOlB,KAAK8W,QAAQ0C,YAAYxZ,MAChCyF,IAAAA,EACAjE,SAAAA,UAEGxB,KAAKmW,MAAMhI,OAAO,CACrB7I,MAAAA,EACAhD,IAAAA,EACA0E,IAAKuP,EACLpF,GAAI,CACAiU,MAAO,SAACpf,GACJM,EAAKkK,QAAQzK,QAAQO,EAAMN,gBC1BzC3C,OAAO,kBAGE,CAACkU,OAAAA,SAAQlU,KAAAA,gBCQT,CACX2hB,WACAyB,WACA9Z,QACA8L,OACA2M,MACAH,QACAC,SACAwB,OACAC,QACAC,WACAzZ,OACAgB,mBCzBoB+T,kBACb,CACHvJ,KAAM,CACFkO,QAAQ,EACRC,cAAe,QACfC,iBAAa5iB,EACb6iB,sBAAsB,EACtBC,WAAY,QACZC,aAAa,EACbC,eAAe,EACfC,YAAY,EACZC,sBAAsB,EACtBtf,UAAU,EACVuf,UAAMnjB,GAEVojB,IAAK,CACDC,OAAQ,EACRzkB,UAAMoB,EACNsjB,WAAOtjB,EACPujB,aAASvjB,EACTwjB,IAAK,OAETpV,KAAM,CACFxP,KAAM,UACN6Z,QAAS,QACTgL,UAAW,YACX1f,KAAM,mBAEVgZ,UAAW,CACPne,KAAM,UACNukB,KAAM,SACNO,OAAO,EACPC,OAAO,EACPC,QAAQ,EACR7J,SAAS,EACTnW,UAAU,EACVG,KAAM,iBACNC,MAAO,OACP6f,WAAW,EACXC,WAAY,SACZC,UAAW,KACX/J,MAAM,EACNlM,SAAK9N,EACLgkB,WAAOhkB,GAEXia,SAAU,CACNrb,KAAM,UACNukB,KAAM,SACNO,OAAO,EACPC,OAAO,EACPC,QAAQ,EACR7J,SAAS,EACTnW,UAAU,EACVG,KAAM,kBACNC,MAAO,OACP6f,WAAW,EACXC,WAAY,SACZC,UAAW,KACX/J,MAAM,EACNlM,SAAK9N,EACLgkB,WAAOhkB,cC5DJ,CACXyf,OAAQ,YACR1b,KAAM,IACNwe,OAAQ,YACR0B,KAAM,UACNja,OAAQ,gBACRka,SAAU,cACVC,YAAa,kBACb1B,WAAY,iBACZH,WAAY,wBACF,YACVvB,OAAQ,gBACRF,SAAU,kBACVC,MAAO,eACPsD,YAAa,kBACbnD,MAAO,WACPoD,SAAU,eACV7P,KAAM,UACNhM,MAAO,eACPsF,IAAK,SACLsV,IAAK,SACLpa,KAAM,cACNsb,aAAc,kBACdtD,MAAO,gBCnBLuD,aAAe,QAEd,SAASC,OAAOtlB,EAAMnC,UAChBwnB,aAAaE,KAAKvlB,KAAUH,SAAShC,IAAU4B,OAAO5B,EAAO,WAG1E,SAAS2nB,UAAUtW,SACM,YAAdA,EAAKxP,SAGK+lB,0JAAatF,2DAEnBjM,OACDjS,EAAQiS,EAAO/H,KAAKlK,OAAS,GACnCiS,EAAOrB,MAAM6S,MAAM3pB,OAAOsS,KAAKpM,GAAOjF,OAAO,SAACsQ,EAAS7O,UAC/C6mB,OAAO7mB,EAAKwD,EAAMxD,MAClB6O,EAAQ7O,GAAOwD,EAAMxD,IAClB6O,GACR,MACErL,EAAMgiB,MAAQtnB,KAAKuF,QAAQoT,KAAK2O,MACjC/P,EAAOrB,MAAM5Q,MAAM,OAAQtF,KAAKuF,QAAQoT,KAAK2O,uCAG5CxnB,QACAkpB,aAAahX,SAAS,SAACnH,GACxB/K,GAAQA,EAAK+K,2CAIP5J,EAAOnB,QACZkpB,aAAa1L,cAAcrc,EAAOnB,sCAGhCyX,QACF7C,GAAGhI,MAAM6K,EAAOf,iBAAiBgH,wDAGvBjG,OACT0R,EAAQjpB,KAAK0U,GAAGhI,MAAM6K,EAAOf,iBAC/ByS,IACAA,EAAMC,gBAAkB,GACxBD,EAAME,cAAgB,gDAKrB9Y,UAAYrQ,KAAKkW,MAAM5Q,MAAMtF,KAAKuF,QAAQoT,MAAMrT,MAAM,CACvD4P,MAAOlV,KAAK8W,QAAQrH,SACpB4E,MAAOrU,KAAK8W,QAAQ9E,SACpB1P,IAAK,OAAStC,KAAK6F,SACpBmB,IAAIhH,KAAKuW,SAAS6S,SAAS,CAACzL,OAAQ7Y,iBAAiB2M,MAAMzR,KAAKuF,QAAQoT,KAAKiJ,WAAWnQ,MAAM,eAAe,GAAMnP,IAAItC,KAAK6F,QAAQkG,qCAGpIiM,UACCA,EAAGtY,OAAS,GACZsY,EAAGtN,KAAK1K,KAAKqpB,eAEVrpB,KAAKmW,MAAMwC,KAAK3Y,KAAKqQ,UAAW,EAAsB,IAArBrQ,KAAKuF,QAAQgiB,IAAgBvP,EAAKhY,KAAKspB,QAAQtR,qCAGnFA,OACEuR,EAAS,GAAIhC,EAAMvnB,KAAKuF,QAAQgiB,KAAO,UAEzCA,EAAI9V,QAAO8X,EAAOhC,EAAI9V,QAAS,GAC5BzR,KAAKmW,MAAMoR,IAAI,CAACjiB,MAAOiiB,GAAO,GAAIjlB,IAAK,KAAOtC,KAAK6F,OAAQ4L,MAAO8X,GAASvR,qCAG5E9S,EAAOqS,UACNvX,KAAKwpB,aAAajS,EAAQrS,wCAGxBqS,EAAQrS,OACbukB,iBAAsBlS,EAAOjV,YAAMtC,KAAK6F,QACvC2J,EAAgC+H,EAAhC/H,KAAMvO,EAA0BsW,EAA1BtW,MAAOuV,EAAmBe,EAAnBf,gBACdvE,EAAMjS,KAAK0pB,UAAUnS,GACrB0P,EAAehV,EAAIgV,YAAezX,EAAK7G,MAAasJ,EAAIgV,WAAR,IAA0CjnB,KAAKqQ,UAAU/K,MAApCuhB,IAAAA,OAAa8C,IAAL1X,IAC7E5B,EAAYrQ,KAAKkW,MAAM5Q,MAAM,CACzBiU,KAAMtY,EAGNoT,MAAO7E,EAAKwC,SACZiV,WAAYtlB,SAASslB,GACrBhf,SAAUuH,EAAKlK,MAAM2C,WACtB3F,IAAImnB,GAAaziB,IAAIwP,GAAiB/E,MAAMjC,EAAKoS,WAAW7V,MAC/DQ,EAAOvM,KAAKmW,MAAMqS,SAASnY,EAAW,CAACnL,EAAOlF,KAAK4pB,YAAYrS,EAAQkS,YACxD,IAAX5C,IAA4B,IAAT8C,EAAkBpd,EAAOvM,KAAK6pB,QAAQ5X,EAAKsF,EAAQkS,EAAa,CAACld,0CAG5E1G,OAAP2J,IAAAA,QACLA,EAAK7G,MAAO,KACNmhB,EAAY5mB,SAASsM,EAAK7G,OAAS,CAACA,MAAO6G,EAAK7G,OAAS6G,EAAK7G,MAC9D4J,EAAOvS,KAAKuF,QAAQgN,MAAQ,GAAIwX,EAAM,CAACD,EAAUnhB,OAAS,WAC5D6G,EAAK+C,MACLwX,EAAIrf,KAAK1K,KAAKmW,MAAM3B,KAAKqU,UAAUtW,GAAQ,aAAe,aAAc,CACpEjN,wBAAWiN,GAAMyX,QAASxa,EAAK+C,OAC/BjQ,iBAAWuD,IACZ,CACC7F,KAAKmW,MAAMjO,KAAK,CACZuJ,MAAO,CAACc,EAAKrK,MAAQ,mBACrBtD,KAAMikB,UAAUtW,GAAQ,UAAY,iBAIzCvS,KAAKmW,MAAM3B,KAAK,yBAAYsV,GAAWllB,KAAM,UAAUmlB,oCAI9D9X,EAAKsF,EAAQkS,EAAa9T,cACbxR,IAAb8N,EAAIgY,OACJhY,EAAIgY,KAAO,QACTC,wBACD7iB,MAAM8iB,SAAW5S,EAAO/H,KAAKiJ,0BAC7BpR,MAAM+iB,SAAW7S,EAAO/H,KAAK2L,sBAE9BlJ,EAAIR,QAAOyY,EAAIjY,EAAIR,QAAS,GACzBzR,KAAKmW,MAAMlE,IAAI,CAClB3M,MAAO2M,EAAKR,MAAOyY,EAAK5nB,cAAQmnB,WACjC9T,6CAICsI,EAAM,GACNoM,GAAgB,IAAUrqB,KAAK0U,GAAGhF,cAAe,IAAU1P,KAAK0U,GAAGhF,YAAYyO,KAC/EmM,GAAe,IAAUtqB,KAAK0U,GAAG/E,aAAc,IAAU3P,KAAK0U,GAAG/E,WAAWwO,YAC5EkM,GACApM,EAAIvT,KAAK1K,KAAKuqB,cAAcD,EAAe,GAAK,KAChDA,GACArM,EAAIvT,KAAK1K,KAAKwqB,aAAa,KAEQ,IAAhCxqB,KAAKqQ,UAAU/K,MAAMuhB,OACtB5I,EACCA,EAAIve,OAASM,KAAKmW,MAAMlE,IAAI,CAC3B3M,MAAO,CAAC2kB,KAAM,IACd3nB,cAAQtC,KAAK6F,gBACdoY,GAAO,wCAGLgM,cACH7L,EAAWpe,KAAK0U,GAAG/E,WACrBrK,EAAQ8Y,EAASnM,KAAO,CAACgY,KAAMA,EAAMvf,KAAM,UAExC1K,KAAKmW,MAAMlE,IAAI,CAAC3M,MAAOA,EAAOhD,cAAQtC,KAAK6F,gBAAe,CAC7D7F,KAAKmW,MAAMyN,OAAO,CACdthB,oBAActC,KAAK6F,QAAUP,MAAO8Y,EAAUjN,GAAI,OACrC,eACC2I,EAAOxT,EAAKwQ,QAAQ0B,WAC1BvV,WAAWmb,EAAS+J,OACd/J,EAAS+J,MAAMrO,GACfA,EAAKyD,gBAEhBlW,MAAO,CAACc,MAAOiW,EAASjW,QAC5B,CAACiW,EAAS8J,oDAIP+B,cACJ/I,EAAYlhB,KAAK0U,GAAGhF,YACtBpK,EAAQ4b,EAAUjP,KAAO,CAACgY,KAAMA,UAE7BjqB,KAAKmW,MAAMlE,IAAI,CAAC3M,MAAOA,EAAOhD,cAAQtC,KAAK6F,gBAAe,CAC7D7F,KAAKmW,MAAMyN,OAAO,CACdthB,kBAAYtC,KAAK6F,QAAUP,MAAO4b,EAAW/P,GAAI,OACpC,eACC2I,EAAOpT,EAAKoQ,QAAQ0B,WAC1BvV,WAAWie,EAAUiH,OACfjH,EAAUiH,MAAMrO,GAChBA,EAAK6D,WAEhBtW,MAAO,CAACc,MAAO+Y,EAAU/Y,QAC7B,CAAC+Y,EAAUgH,uBC3KpB7kB,OAAO,0BAEE,CAAC,OAAQ,QAAS,OAAQ,QAAS,OAAQ,WAAY,gBAAiB,aAAahD,OAAO,SAACsQ,EAAS5N,UACjH4N,EAAQ5N,GAAQ2P,mBAAmBrP,OAAMN,EAAKS,eACvCmN,GACR,ICLGtN,OAAO,QAEPonB,MAAQ,CACVC,YAAa,CAAC,QAAS,GACvBC,WAAY,CAAC,OAAQ,GACrBC,YAAa,CAAC,QAAS,GACvBC,cAAe,CAAC,QAAS,GACzBC,aAAc,CAAC,OAAQ,GACvBC,cAAe,CAAC,QAAS,IAGvBnY,MAAQxT,OAAOsS,KAAK+Y,OAAOpqB,OAAO,SAACuS,EAAOtQ,UAC5CsQ,EAAMtQ,GAAOoQ,mBAAmBrP,OAAM,SAAA2nB,UAAKA,EAAE1lB,MAAM,CAACvC,KAAM0nB,MAAMnoB,GAAK,GAAI+F,UAAWoiB,MAAMnoB,GAAK,OACxFsQ,GACR,IAGHA,MAAMqY,WAAarY,MAAM8X,YACzB9X,MAAMsY,UAAYtY,MAAM+X,WACxB/X,MAAMuY,WAAavY,MAAMgY,YCnBzB,IAAMvnB,OAAO,QAEPuP,QAAQ,CAAC,WAAY,MAAO,QAAS,OAAQ,YAAYvS,OAAO,SAACuS,EAAO7P,UAC1E6P,EAAM7P,GAAQ2P,mBAAmBrP,OAAMN,GAChC6P,GACR,YAEGwY,MAAQ1Y,mBAAmBrP,OAAM,QCPvC,IAAMA,OAAO,kBAEE,CACXgoB,eAAgB3Y,mBAAmBrP,QAAM,EAAM,YAC/CioB,UAAW5Y,mBAAmBrP,QAAM,EAAO,aCJzCA,OAAO,kBAEE,CACXkoB,YAAa7Y,mBAAmBrP,QAAM,EAAM,UCH1CA,OAAO,0BAEE,CACXmoB,KAAM9Y,mBAAmBrP,OAAM,SAAC2nB,UAAMA,EAAE1lB,MAAMmmB,SAAU,IACxDC,UAAWhZ,mBAAmBrP,OAAM,SAAC2nB,UAAMA,EAAE1lB,MAAMmmB,SAAU,KCJ3DpoB,OAAO,OAEPonB,QAAQ,cAAiB,uBAA2B,kBAE3CrrB,OAAOsS,KAAK+Y,SAAOpqB,OAAO,SAACuS,EAAOtQ,UAC7CsQ,EAAMtQ,GAAOoQ,mBAAmBrP,OAAMonB,QAAMnoB,IACrCsQ,GACR,ICPGvP,OAAO,SAEPonB,QAAQ,CACVkB,MAAO,CAAC,QAAS,GACjBje,KAAM,CAAC,OAAQ,GACfke,cAAe,CAAC,OAAQ,GACxBC,eAAgB,CAAC,QAAS,IAGxBjZ,QAAQxT,OAAOsS,KAAK+Y,SAAOpqB,OAAO,SAACuS,EAAOtQ,UAC5CsQ,EAAMtQ,GAAOoQ,mBAAmBrP,OAAM,SAAA2nB,UAAKA,EAAE1lB,MAAM,CAAC0I,WAAYyc,QAAMnoB,GAAK,GAAI+F,UAAWoiB,QAAMnoB,GAAK,OAC9FsQ,GACR,YAEGkZ,YAAclZ,QAAM+Y,cACpBI,WAAanZ,QAAMlF,KCPzB,IAAMkF,0BAAY6T,gBAAe9Z,SAAUyY,WAAUF,YAAWwB,YAAWE,gBAAezZ,UAASgB,SAC/F6d,MAAQ,CAAC,eAAgB,WAAY,cAAe,aAAc,QAAS,cAAe,QAAS,OAAQ,SAE/GA,MAAMxnB,QAAQ,SAAAnB,GACVuP,QAAMvP,GAAQmP,eAAenP,aAG3B4oB,KAAOrZ,QAAM6V,qBACbyD,OAAStZ,QAAM2V,oBACf4D,MAAQvZ,QAAM0V,oBACd7P,OAAS,SAACxX,EAAOC,UAAUsR,eAAe,SAAfA,CAAyB,GAAIvR,EAAOC,ICZrEqU,MAAMQ,IAAID,OAEH,IAAM2I,MAAQ,CACjBkE,GAAIyJ,aACJ1J,kBAAY0J,UACZ1N,WAAAA,KACApP,WAAAA,WACAuI,QAAAA,QACAyL,OAAAA,QACApB,UAAAA,6BAG0BF,iBAAiBvD,OAAxCpP,6BAAAA,WAAYkU,0BAAAA,QAEG,oBAAXxB,SACPA,OAAOlS,WAAaR,WAChB0S,OAAO5gB,KACPoiB,QAAQxB,OAAO5gB,UCtBjByR,QAAQvD,WAAWuD"}